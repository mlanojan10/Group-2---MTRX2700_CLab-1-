
WO6_Example.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f08  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004c4  080040a8  080040a8  000050a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800456c  0800456c  000061f0  2**0
                  CONTENTS
  4 .ARM          00000008  0800456c  0800456c  0000556c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004574  08004574  000061f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004574  08004574  00005574  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004578  08004578  00005578  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f0  20000000  0800457c  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000061f0  2**0
                  CONTENTS
 10 .bss          0000016c  200001f0  200001f0  000061f0  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000035c  2000035c  000061f0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000061f0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000014da  00000000  00000000  00006220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000007f6  00000000  00000000  000076fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001b0  00000000  00000000  00007ef0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000124  00000000  00000000  000080a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00016f19  00000000  00000000  000081c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000023ee  00000000  00000000  0001f0dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000781a3  00000000  00000000  000214cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0009966e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000016b4  00000000  00000000  000996b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007b  00000000  00000000  0009ad68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f0 	.word	0x200001f0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004090 	.word	0x08004090

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001f4 	.word	0x200001f4
 80001dc:	08004090 	.word	0x08004090

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <finished_transmission>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


void finished_transmission(uint32_t bytes_sent) {
 8000bb8:	b480      	push	{r7}
 8000bba:	b085      	sub	sp, #20
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	6078      	str	r0, [r7, #4]
	// This function will be called after a transmission is complete

	volatile uint32_t test = 0;
 8000bc0:	2300      	movs	r3, #0
 8000bc2:	60fb      	str	r3, [r7, #12]
	// make a very simple delay
	for (volatile uint32_t i = 0; i < 0x8ffff; i++) {
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	60bb      	str	r3, [r7, #8]
 8000bc8:	e002      	b.n	8000bd0 <finished_transmission+0x18>
 8000bca:	68bb      	ldr	r3, [r7, #8]
 8000bcc:	3301      	adds	r3, #1
 8000bce:	60bb      	str	r3, [r7, #8]
 8000bd0:	68bb      	ldr	r3, [r7, #8]
 8000bd2:	4a05      	ldr	r2, [pc, #20]	@ (8000be8 <finished_transmission+0x30>)
 8000bd4:	4293      	cmp	r3, r2
 8000bd6:	d9f8      	bls.n	8000bca <finished_transmission+0x12>
		// waste time !
	}
}
 8000bd8:	bf00      	nop
 8000bda:	bf00      	nop
 8000bdc:	3714      	adds	r7, #20
 8000bde:	46bd      	mov	sp, r7
 8000be0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop
 8000be8:	0008fffe 	.word	0x0008fffe

08000bec <main>:
void ShapeDemo();
const int NUMBER_OF_SHAPES = 16;


int main(void)
{
 8000bec:	b580      	push	{r7, lr}
 8000bee:	b082      	sub	sp, #8
 8000bf0:	af00      	add	r7, sp, #0
	uint8_t *string_to_send = "This is a string !\r\n";
 8000bf2:	4b07      	ldr	r3, [pc, #28]	@ (8000c10 <main+0x24>)
 8000bf4:	607b      	str	r3, [r7, #4]

	//void (*completion_function)(uint32_t) = &finished_transmission;

	SerialInitialise(BAUD_115200, &USART1_PORT, &finished_transmission);
 8000bf6:	4a07      	ldr	r2, [pc, #28]	@ (8000c14 <main+0x28>)
 8000bf8:	4907      	ldr	r1, [pc, #28]	@ (8000c18 <main+0x2c>)
 8000bfa:	2004      	movs	r0, #4
 8000bfc:	f000 f9ae 	bl	8000f5c <SerialInitialise>

	ShapeDemo();
 8000c00:	f000 f80c 	bl	8000c1c <ShapeDemo>

	/* Loop forever */
	for(;;) {
		SerialOutputString(string_to_send, &USART1_PORT);
 8000c04:	4904      	ldr	r1, [pc, #16]	@ (8000c18 <main+0x2c>)
 8000c06:	6878      	ldr	r0, [r7, #4]
 8000c08:	f000 fa3f 	bl	800108a <SerialOutputString>
 8000c0c:	e7fa      	b.n	8000c04 <main+0x18>
 8000c0e:	bf00      	nop
 8000c10:	080040a8 	.word	0x080040a8
 8000c14:	08000bb9 	.word	0x08000bb9
 8000c18:	20000000 	.word	0x20000000

08000c1c <ShapeDemo>:
	}
}


void ShapeDemo(void) {
 8000c1c:	b5b0      	push	{r4, r5, r7, lr}
 8000c1e:	b0f4      	sub	sp, #464	@ 0x1d0
 8000c20:	af00      	add	r7, sp, #0

	struct shape shape_1 = generate_shape(SHAPE_SPHERE, 5, 5);
 8000c22:	f507 70d6 	add.w	r0, r7, #428	@ 0x1ac
 8000c26:	2305      	movs	r3, #5
 8000c28:	2205      	movs	r2, #5
 8000c2a:	2100      	movs	r1, #0
 8000c2c:	f000 fa4d 	bl	80010ca <generate_shape>

	struct shape shape_array[16];

	uint8_t string_buffer[64];

	shape_string(&shape_1, &string_buffer[0]);
 8000c30:	f107 0218 	add.w	r2, r7, #24
 8000c34:	f507 73d6 	add.w	r3, r7, #428	@ 0x1ac
 8000c38:	4611      	mov	r1, r2
 8000c3a:	4618      	mov	r0, r3
 8000c3c:	f000 fa8c 	bl	8001158 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000c40:	f107 0318 	add.w	r3, r7, #24
 8000c44:	498c      	ldr	r1, [pc, #560]	@ (8000e78 <ShapeDemo+0x25c>)
 8000c46:	4618      	mov	r0, r3
 8000c48:	f000 fa1f 	bl	800108a <SerialOutputString>

	shape_string(&shape_2, &string_buffer[0]);
 8000c4c:	f107 0218 	add.w	r2, r7, #24
 8000c50:	f507 73cc 	add.w	r3, r7, #408	@ 0x198
 8000c54:	4611      	mov	r1, r2
 8000c56:	4618      	mov	r0, r3
 8000c58:	f000 fa7e 	bl	8001158 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000c5c:	f107 0318 	add.w	r3, r7, #24
 8000c60:	4985      	ldr	r1, [pc, #532]	@ (8000e78 <ShapeDemo+0x25c>)
 8000c62:	4618      	mov	r0, r3
 8000c64:	f000 fa11 	bl	800108a <SerialOutputString>

	shape_3 = (struct shape*)malloc(sizeof(struct shape));
 8000c68:	2014      	movs	r0, #20
 8000c6a:	f000 fe91 	bl	8001990 <malloc>
 8000c6e:	4603      	mov	r3, r0
 8000c70:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
	shape_string(shape_3, &string_buffer[0]);
 8000c74:	f107 0318 	add.w	r3, r7, #24
 8000c78:	4619      	mov	r1, r3
 8000c7a:	f8d7 01c0 	ldr.w	r0, [r7, #448]	@ 0x1c0
 8000c7e:	f000 fa6b 	bl	8001158 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000c82:	f107 0318 	add.w	r3, r7, #24
 8000c86:	497c      	ldr	r1, [pc, #496]	@ (8000e78 <ShapeDemo+0x25c>)
 8000c88:	4618      	mov	r0, r3
 8000c8a:	f000 f9fe 	bl	800108a <SerialOutputString>

	*shape_3 = generate_shape(SHAPE_CONE, 6,3);
 8000c8e:	f8d7 41c0 	ldr.w	r4, [r7, #448]	@ 0x1c0
 8000c92:	4638      	mov	r0, r7
 8000c94:	2303      	movs	r3, #3
 8000c96:	2206      	movs	r2, #6
 8000c98:	2102      	movs	r1, #2
 8000c9a:	f000 fa16 	bl	80010ca <generate_shape>
 8000c9e:	f507 73e8 	add.w	r3, r7, #464	@ 0x1d0
 8000ca2:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8000ca6:	461d      	mov	r5, r3
 8000ca8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000caa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000cac:	682b      	ldr	r3, [r5, #0]
 8000cae:	6023      	str	r3, [r4, #0]
	shape_string(shape_3, &string_buffer[0]);
 8000cb0:	f107 0318 	add.w	r3, r7, #24
 8000cb4:	4619      	mov	r1, r3
 8000cb6:	f8d7 01c0 	ldr.w	r0, [r7, #448]	@ 0x1c0
 8000cba:	f000 fa4d 	bl	8001158 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000cbe:	f107 0318 	add.w	r3, r7, #24
 8000cc2:	496d      	ldr	r1, [pc, #436]	@ (8000e78 <ShapeDemo+0x25c>)
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	f000 f9e0 	bl	800108a <SerialOutputString>


	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8000cca:	2300      	movs	r3, #0
 8000ccc:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8000cd0:	e049      	b.n	8000d66 <ShapeDemo+0x14a>
		if (initialise_shape(&shape_array[counter], counter % 3, 3, 4)) {
 8000cd2:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000cd6:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 8000cda:	4613      	mov	r3, r2
 8000cdc:	009b      	lsls	r3, r3, #2
 8000cde:	4413      	add	r3, r2
 8000ce0:	009b      	lsls	r3, r3, #2
 8000ce2:	18c8      	adds	r0, r1, r3
 8000ce4:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 8000ce8:	4b64      	ldr	r3, [pc, #400]	@ (8000e7c <ShapeDemo+0x260>)
 8000cea:	fba3 1302 	umull	r1, r3, r3, r2
 8000cee:	0859      	lsrs	r1, r3, #1
 8000cf0:	460b      	mov	r3, r1
 8000cf2:	005b      	lsls	r3, r3, #1
 8000cf4:	440b      	add	r3, r1
 8000cf6:	1ad1      	subs	r1, r2, r3
 8000cf8:	2304      	movs	r3, #4
 8000cfa:	2203      	movs	r2, #3
 8000cfc:	f000 fa05 	bl	800110a <initialise_shape>
 8000d00:	4603      	mov	r3, r0
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d015      	beq.n	8000d32 <ShapeDemo+0x116>
			shape_string(&shape_array[counter], &string_buffer[0]);
 8000d06:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000d0a:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 8000d0e:	4613      	mov	r3, r2
 8000d10:	009b      	lsls	r3, r3, #2
 8000d12:	4413      	add	r3, r2
 8000d14:	009b      	lsls	r3, r3, #2
 8000d16:	440b      	add	r3, r1
 8000d18:	f107 0218 	add.w	r2, r7, #24
 8000d1c:	4611      	mov	r1, r2
 8000d1e:	4618      	mov	r0, r3
 8000d20:	f000 fa1a 	bl	8001158 <shape_string>
			SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000d24:	f107 0318 	add.w	r3, r7, #24
 8000d28:	4953      	ldr	r1, [pc, #332]	@ (8000e78 <ShapeDemo+0x25c>)
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	f000 f9ad 	bl	800108a <SerialOutputString>
 8000d30:	e014      	b.n	8000d5c <ShapeDemo+0x140>
		} else {
			shape_string(&shape_array[counter], &string_buffer[0]);
 8000d32:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000d36:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 8000d3a:	4613      	mov	r3, r2
 8000d3c:	009b      	lsls	r3, r3, #2
 8000d3e:	4413      	add	r3, r2
 8000d40:	009b      	lsls	r3, r3, #2
 8000d42:	440b      	add	r3, r1
 8000d44:	f107 0218 	add.w	r2, r7, #24
 8000d48:	4611      	mov	r1, r2
 8000d4a:	4618      	mov	r0, r3
 8000d4c:	f000 fa04 	bl	8001158 <shape_string>
			SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000d50:	f107 0318 	add.w	r3, r7, #24
 8000d54:	4948      	ldr	r1, [pc, #288]	@ (8000e78 <ShapeDemo+0x25c>)
 8000d56:	4618      	mov	r0, r3
 8000d58:	f000 f997 	bl	800108a <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8000d5c:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 8000d60:	3301      	adds	r3, #1
 8000d62:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8000d66:	2310      	movs	r3, #16
 8000d68:	461a      	mov	r2, r3
 8000d6a:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 8000d6e:	4293      	cmp	r3, r2
 8000d70:	d3af      	bcc.n	8000cd2 <ShapeDemo+0xb6>
		}
	}

	// slide the shapes
	sprintf(&string_buffer[0], "sliding the shapes by 1.5 units\r\n");
 8000d72:	f107 0318 	add.w	r3, r7, #24
 8000d76:	4942      	ldr	r1, [pc, #264]	@ (8000e80 <ShapeDemo+0x264>)
 8000d78:	4618      	mov	r0, r3
 8000d7a:	f001 f84b 	bl	8001e14 <siprintf>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000d7e:	f107 0318 	add.w	r3, r7, #24
 8000d82:	493d      	ldr	r1, [pc, #244]	@ (8000e78 <ShapeDemo+0x25c>)
 8000d84:	4618      	mov	r0, r3
 8000d86:	f000 f980 	bl	800108a <SerialOutputString>

	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8000d90:	e027      	b.n	8000de2 <ShapeDemo+0x1c6>
		slide_shape(&shape_array[counter], 1.5);
 8000d92:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000d96:	f8d7 21c8 	ldr.w	r2, [r7, #456]	@ 0x1c8
 8000d9a:	4613      	mov	r3, r2
 8000d9c:	009b      	lsls	r3, r3, #2
 8000d9e:	4413      	add	r3, r2
 8000da0:	009b      	lsls	r3, r3, #2
 8000da2:	440b      	add	r3, r1
 8000da4:	eeb7 0a08 	vmov.f32	s0, #120	@ 0x3fc00000  1.5
 8000da8:	4618      	mov	r0, r3
 8000daa:	f000 f8c0 	bl	8000f2e <slide_shape>
		shape_string(&shape_array[counter], &string_buffer[0]);
 8000dae:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000db2:	f8d7 21c8 	ldr.w	r2, [r7, #456]	@ 0x1c8
 8000db6:	4613      	mov	r3, r2
 8000db8:	009b      	lsls	r3, r3, #2
 8000dba:	4413      	add	r3, r2
 8000dbc:	009b      	lsls	r3, r3, #2
 8000dbe:	440b      	add	r3, r1
 8000dc0:	f107 0218 	add.w	r2, r7, #24
 8000dc4:	4611      	mov	r1, r2
 8000dc6:	4618      	mov	r0, r3
 8000dc8:	f000 f9c6 	bl	8001158 <shape_string>
		SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000dcc:	f107 0318 	add.w	r3, r7, #24
 8000dd0:	4929      	ldr	r1, [pc, #164]	@ (8000e78 <ShapeDemo+0x25c>)
 8000dd2:	4618      	mov	r0, r3
 8000dd4:	f000 f959 	bl	800108a <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8000dd8:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 8000ddc:	3301      	adds	r3, #1
 8000dde:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8000de2:	2310      	movs	r3, #16
 8000de4:	461a      	mov	r2, r3
 8000de6:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 8000dea:	4293      	cmp	r3, r2
 8000dec:	d3d1      	bcc.n	8000d92 <ShapeDemo+0x176>
	}

	// roll the shapes
	sprintf(&string_buffer[0], "rolling the shapes by 2.5 units\n");
 8000dee:	f107 0318 	add.w	r3, r7, #24
 8000df2:	4924      	ldr	r1, [pc, #144]	@ (8000e84 <ShapeDemo+0x268>)
 8000df4:	4618      	mov	r0, r3
 8000df6:	f001 f80d 	bl	8001e14 <siprintf>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000dfa:	f107 0318 	add.w	r3, r7, #24
 8000dfe:	491e      	ldr	r1, [pc, #120]	@ (8000e78 <ShapeDemo+0x25c>)
 8000e00:	4618      	mov	r0, r3
 8000e02:	f000 f942 	bl	800108a <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8000e06:	2300      	movs	r3, #0
 8000e08:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 8000e0c:	e027      	b.n	8000e5e <ShapeDemo+0x242>
		roll_shape(&shape_array[counter], 2.5);
 8000e0e:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000e12:	f8d7 21c4 	ldr.w	r2, [r7, #452]	@ 0x1c4
 8000e16:	4613      	mov	r3, r2
 8000e18:	009b      	lsls	r3, r3, #2
 8000e1a:	4413      	add	r3, r2
 8000e1c:	009b      	lsls	r3, r3, #2
 8000e1e:	440b      	add	r3, r1
 8000e20:	eeb0 0a04 	vmov.f32	s0, #4	@ 0x40200000  2.5
 8000e24:	4618      	mov	r0, r3
 8000e26:	f000 f867 	bl	8000ef8 <roll_shape>
		shape_string(&shape_array[counter], &string_buffer[0]);
 8000e2a:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8000e2e:	f8d7 21c4 	ldr.w	r2, [r7, #452]	@ 0x1c4
 8000e32:	4613      	mov	r3, r2
 8000e34:	009b      	lsls	r3, r3, #2
 8000e36:	4413      	add	r3, r2
 8000e38:	009b      	lsls	r3, r3, #2
 8000e3a:	440b      	add	r3, r1
 8000e3c:	f107 0218 	add.w	r2, r7, #24
 8000e40:	4611      	mov	r1, r2
 8000e42:	4618      	mov	r0, r3
 8000e44:	f000 f988 	bl	8001158 <shape_string>
		SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000e48:	f107 0318 	add.w	r3, r7, #24
 8000e4c:	490a      	ldr	r1, [pc, #40]	@ (8000e78 <ShapeDemo+0x25c>)
 8000e4e:	4618      	mov	r0, r3
 8000e50:	f000 f91b 	bl	800108a <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8000e54:	f8d7 31c4 	ldr.w	r3, [r7, #452]	@ 0x1c4
 8000e58:	3301      	adds	r3, #1
 8000e5a:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 8000e5e:	2310      	movs	r3, #16
 8000e60:	461a      	mov	r2, r3
 8000e62:	f8d7 31c4 	ldr.w	r3, [r7, #452]	@ 0x1c4
 8000e66:	4293      	cmp	r3, r2
 8000e68:	d3d1      	bcc.n	8000e0e <ShapeDemo+0x1f2>
	}

}
 8000e6a:	bf00      	nop
 8000e6c:	bf00      	nop
 8000e6e:	f507 77e8 	add.w	r7, r7, #464	@ 0x1d0
 8000e72:	46bd      	mov	sp, r7
 8000e74:	bdb0      	pop	{r4, r5, r7, pc}
 8000e76:	bf00      	nop
 8000e78:	20000000 	.word	0x20000000
 8000e7c:	aaaaaaab 	.word	0xaaaaaaab
 8000e80:	080040c0 	.word	0x080040c0
 8000e84:	080040e4 	.word	0x080040e4

08000e88 <roll_unit_distance>:
const float SHAPE_SPHERE_MULTIPLIER = 5;
const float SHAPE_CUBE_MULTIPLIER = 1.5;
const float SHAPE_CONE_MULTIPLIER = 0.5;


float roll_unit_distance(struct shape *_shape) {
 8000e88:	b480      	push	{r7}
 8000e8a:	b083      	sub	sp, #12
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	6078      	str	r0, [r7, #4]

  if (_shape->type == SHAPE_SPHERE) {
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	689b      	ldr	r3, [r3, #8]
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	d10a      	bne.n	8000eae <roll_unit_distance+0x26>
    // calculations show that one unit of push moves the sphere 5 x the diameter
    return SHAPE_SPHERE_MULTIPLIER * (float)(_shape->dimension_1);
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	ee07 3a90 	vmov	s15, r3
 8000ea0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ea4:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 8000ea8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000eac:	e01d      	b.n	8000eea <roll_unit_distance+0x62>
  }
  else if (_shape->type == SHAPE_CUBE) {
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	689b      	ldr	r3, [r3, #8]
 8000eb2:	2b01      	cmp	r3, #1
 8000eb4:	d10a      	bne.n	8000ecc <roll_unit_distance+0x44>
    // calculations that one unit of push moves the cube 1.5 x the side length
    return SHAPE_CUBE_MULTIPLIER * (float)(_shape->dimension_1);
 8000eb6:	687b      	ldr	r3, [r7, #4]
 8000eb8:	681b      	ldr	r3, [r3, #0]
 8000eba:	ee07 3a90 	vmov	s15, r3
 8000ebe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ec2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8000ec6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000eca:	e00e      	b.n	8000eea <roll_unit_distance+0x62>
  }
  else if (_shape->type == SHAPE_CONE) {
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	689b      	ldr	r3, [r3, #8]
 8000ed0:	2b02      	cmp	r3, #2
 8000ed2:	d10a      	bne.n	8000eea <roll_unit_distance+0x62>
    // calculations that one unit of push moves the cube 1.5 x the side length
    return SHAPE_CONE_MULTIPLIER * (float)(_shape->dimension_1);
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	ee07 3a90 	vmov	s15, r3
 8000edc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ee0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8000ee4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000ee8:	e7ff      	b.n	8000eea <roll_unit_distance+0x62>
  }
}
 8000eea:	eeb0 0a67 	vmov.f32	s0, s15
 8000eee:	370c      	adds	r7, #12
 8000ef0:	46bd      	mov	sp, r7
 8000ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef6:	4770      	bx	lr

08000ef8 <roll_shape>:


void roll_shape(struct shape *_shape, float push_strength) {
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b082      	sub	sp, #8
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
 8000f00:	ed87 0a00 	vstr	s0, [r7]
  _shape->location += push_strength * roll_unit_distance(_shape);
 8000f04:	6878      	ldr	r0, [r7, #4]
 8000f06:	f7ff ffbf 	bl	8000e88 <roll_unit_distance>
 8000f0a:	eeb0 7a40 	vmov.f32	s14, s0
 8000f0e:	edd7 7a00 	vldr	s15, [r7]
 8000f12:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	edd3 7a03 	vldr	s15, [r3, #12]
 8000f1c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	edc3 7a03 	vstr	s15, [r3, #12]
}
 8000f26:	bf00      	nop
 8000f28:	3708      	adds	r7, #8
 8000f2a:	46bd      	mov	sp, r7
 8000f2c:	bd80      	pop	{r7, pc}

08000f2e <slide_shape>:


void slide_shape(struct shape *_shape, float push_strength) {
 8000f2e:	b480      	push	{r7}
 8000f30:	b083      	sub	sp, #12
 8000f32:	af00      	add	r7, sp, #0
 8000f34:	6078      	str	r0, [r7, #4]
 8000f36:	ed87 0a00 	vstr	s0, [r7]
  _shape->location += push_strength;
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	ed93 7a03 	vldr	s14, [r3, #12]
 8000f40:	edd7 7a00 	vldr	s15, [r7]
 8000f44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f48:	687b      	ldr	r3, [r7, #4]
 8000f4a:	edc3 7a03 	vstr	s15, [r3, #12]
}
 8000f4e:	bf00      	nop
 8000f50:	370c      	adds	r7, #12
 8000f52:	46bd      	mov	sp, r7
 8000f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f58:	4770      	bx	lr
	...

08000f5c <SerialInitialise>:
		};


// InitialiseSerial - Initialise the serial port
// Input: baudRate is from an enumerated set
void SerialInitialise(uint32_t baudRate, SerialPort *serial_port, void (*completion_function)(uint32_t)) {
 8000f5c:	b480      	push	{r7}
 8000f5e:	b087      	sub	sp, #28
 8000f60:	af00      	add	r7, sp, #0
 8000f62:	60f8      	str	r0, [r7, #12]
 8000f64:	60b9      	str	r1, [r7, #8]
 8000f66:	607a      	str	r2, [r7, #4]

	serial_port->completion_function = completion_function;
 8000f68:	68bb      	ldr	r3, [r7, #8]
 8000f6a:	687a      	ldr	r2, [r7, #4]
 8000f6c:	625a      	str	r2, [r3, #36]	@ 0x24

	// enable clock power, system configuration clock and GPIOC
	// common to all UARTs
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000f6e:	4b39      	ldr	r3, [pc, #228]	@ (8001054 <SerialInitialise+0xf8>)
 8000f70:	69db      	ldr	r3, [r3, #28]
 8000f72:	4a38      	ldr	r2, [pc, #224]	@ (8001054 <SerialInitialise+0xf8>)
 8000f74:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000f78:	61d3      	str	r3, [r2, #28]
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000f7a:	4b36      	ldr	r3, [pc, #216]	@ (8001054 <SerialInitialise+0xf8>)
 8000f7c:	699b      	ldr	r3, [r3, #24]
 8000f7e:	4a35      	ldr	r2, [pc, #212]	@ (8001054 <SerialInitialise+0xf8>)
 8000f80:	f043 0301 	orr.w	r3, r3, #1
 8000f84:	6193      	str	r3, [r2, #24]

	// enable the GPIO which is on the AHB bus
	RCC->AHBENR |= serial_port->MaskAHBENR;
 8000f86:	68bb      	ldr	r3, [r7, #8]
 8000f88:	691a      	ldr	r2, [r3, #16]
 8000f8a:	4b32      	ldr	r3, [pc, #200]	@ (8001054 <SerialInitialise+0xf8>)
 8000f8c:	695b      	ldr	r3, [r3, #20]
 8000f8e:	4931      	ldr	r1, [pc, #196]	@ (8001054 <SerialInitialise+0xf8>)
 8000f90:	4313      	orrs	r3, r2
 8000f92:	614b      	str	r3, [r1, #20]

	// set pin mode to alternate function for the specific GPIO pins
	serial_port->GPIO->MODER = serial_port->SerialPinModeValue;
 8000f94:	68bb      	ldr	r3, [r7, #8]
 8000f96:	685b      	ldr	r3, [r3, #4]
 8000f98:	68ba      	ldr	r2, [r7, #8]
 8000f9a:	6952      	ldr	r2, [r2, #20]
 8000f9c:	601a      	str	r2, [r3, #0]

	// enable high speed clock for specific GPIO pins
	serial_port->GPIO->OSPEEDR = serial_port->SerialPinSpeedValue;
 8000f9e:	68bb      	ldr	r3, [r7, #8]
 8000fa0:	685b      	ldr	r3, [r3, #4]
 8000fa2:	68ba      	ldr	r2, [r7, #8]
 8000fa4:	6992      	ldr	r2, [r2, #24]
 8000fa6:	609a      	str	r2, [r3, #8]

	// set alternate function to enable USART to external pins
	serial_port->GPIO->AFR[0] |= serial_port->SerialPinAlternatePinValueLow;
 8000fa8:	68bb      	ldr	r3, [r7, #8]
 8000faa:	69d9      	ldr	r1, [r3, #28]
 8000fac:	68bb      	ldr	r3, [r7, #8]
 8000fae:	685b      	ldr	r3, [r3, #4]
 8000fb0:	6a1a      	ldr	r2, [r3, #32]
 8000fb2:	68bb      	ldr	r3, [r7, #8]
 8000fb4:	685b      	ldr	r3, [r3, #4]
 8000fb6:	430a      	orrs	r2, r1
 8000fb8:	621a      	str	r2, [r3, #32]
	serial_port->GPIO->AFR[1] |= serial_port->SerialPinAlternatePinValueHigh;
 8000fba:	68bb      	ldr	r3, [r7, #8]
 8000fbc:	6a19      	ldr	r1, [r3, #32]
 8000fbe:	68bb      	ldr	r3, [r7, #8]
 8000fc0:	685b      	ldr	r3, [r3, #4]
 8000fc2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000fc4:	68bb      	ldr	r3, [r7, #8]
 8000fc6:	685b      	ldr	r3, [r3, #4]
 8000fc8:	430a      	orrs	r2, r1
 8000fca:	625a      	str	r2, [r3, #36]	@ 0x24

	// enable the device based on the bits defined in the serial port definition
	RCC->APB1ENR |= serial_port->MaskAPB1ENR;
 8000fcc:	68bb      	ldr	r3, [r7, #8]
 8000fce:	68da      	ldr	r2, [r3, #12]
 8000fd0:	4b20      	ldr	r3, [pc, #128]	@ (8001054 <SerialInitialise+0xf8>)
 8000fd2:	69db      	ldr	r3, [r3, #28]
 8000fd4:	491f      	ldr	r1, [pc, #124]	@ (8001054 <SerialInitialise+0xf8>)
 8000fd6:	4313      	orrs	r3, r2
 8000fd8:	61cb      	str	r3, [r1, #28]
	RCC->APB2ENR |= serial_port->MaskAPB2ENR;
 8000fda:	68bb      	ldr	r3, [r7, #8]
 8000fdc:	689a      	ldr	r2, [r3, #8]
 8000fde:	4b1d      	ldr	r3, [pc, #116]	@ (8001054 <SerialInitialise+0xf8>)
 8000fe0:	699b      	ldr	r3, [r3, #24]
 8000fe2:	491c      	ldr	r1, [pc, #112]	@ (8001054 <SerialInitialise+0xf8>)
 8000fe4:	4313      	orrs	r3, r2
 8000fe6:	618b      	str	r3, [r1, #24]

	// Get a pointer to the 16 bits of the BRR register that we want to change
	uint16_t *baud_rate_config = (uint16_t*)&serial_port->UART->BRR; // only 16 bits used!
 8000fe8:	68bb      	ldr	r3, [r7, #8]
 8000fea:	681b      	ldr	r3, [r3, #0]
 8000fec:	330c      	adds	r3, #12
 8000fee:	617b      	str	r3, [r7, #20]

	// Baud rate calculation from datasheet
	switch(baudRate){
 8000ff0:	68fb      	ldr	r3, [r7, #12]
 8000ff2:	2b04      	cmp	r3, #4
 8000ff4:	d820      	bhi.n	8001038 <SerialInitialise+0xdc>
 8000ff6:	a201      	add	r2, pc, #4	@ (adr r2, 8000ffc <SerialInitialise+0xa0>)
 8000ff8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ffc:	08001011 	.word	0x08001011
 8001000:	08001019 	.word	0x08001019
 8001004:	08001021 	.word	0x08001021
 8001008:	08001029 	.word	0x08001029
 800100c:	08001031 	.word	0x08001031
	case BAUD_9600:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001010:	697b      	ldr	r3, [r7, #20]
 8001012:	2246      	movs	r2, #70	@ 0x46
 8001014:	801a      	strh	r2, [r3, #0]
		break;
 8001016:	e00f      	b.n	8001038 <SerialInitialise+0xdc>
	case BAUD_19200:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001018:	697b      	ldr	r3, [r7, #20]
 800101a:	2246      	movs	r2, #70	@ 0x46
 800101c:	801a      	strh	r2, [r3, #0]
		break;
 800101e:	e00b      	b.n	8001038 <SerialInitialise+0xdc>
	case BAUD_38400:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001020:	697b      	ldr	r3, [r7, #20]
 8001022:	2246      	movs	r2, #70	@ 0x46
 8001024:	801a      	strh	r2, [r3, #0]
		break;
 8001026:	e007      	b.n	8001038 <SerialInitialise+0xdc>
	case BAUD_57600:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001028:	697b      	ldr	r3, [r7, #20]
 800102a:	2246      	movs	r2, #70	@ 0x46
 800102c:	801a      	strh	r2, [r3, #0]
		break;
 800102e:	e003      	b.n	8001038 <SerialInitialise+0xdc>
	case BAUD_115200:
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001030:	697b      	ldr	r3, [r7, #20]
 8001032:	2246      	movs	r2, #70	@ 0x46
 8001034:	801a      	strh	r2, [r3, #0]
		break;
 8001036:	bf00      	nop
	}


	// enable serial port for tx and rx
	serial_port->UART->CR1 |= USART_CR1_TE | USART_CR1_RE | USART_CR1_UE;
 8001038:	68bb      	ldr	r3, [r7, #8]
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	681a      	ldr	r2, [r3, #0]
 800103e:	68bb      	ldr	r3, [r7, #8]
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	f042 020d 	orr.w	r2, r2, #13
 8001046:	601a      	str	r2, [r3, #0]
}
 8001048:	bf00      	nop
 800104a:	371c      	adds	r7, #28
 800104c:	46bd      	mov	sp, r7
 800104e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001052:	4770      	bx	lr
 8001054:	40021000 	.word	0x40021000

08001058 <SerialOutputChar>:


void SerialOutputChar(uint8_t data, SerialPort *serial_port) {
 8001058:	b480      	push	{r7}
 800105a:	b083      	sub	sp, #12
 800105c:	af00      	add	r7, sp, #0
 800105e:	4603      	mov	r3, r0
 8001060:	6039      	str	r1, [r7, #0]
 8001062:	71fb      	strb	r3, [r7, #7]

	while((serial_port->UART->ISR & USART_ISR_TXE) == 0){
 8001064:	bf00      	nop
 8001066:	683b      	ldr	r3, [r7, #0]
 8001068:	681b      	ldr	r3, [r3, #0]
 800106a:	69db      	ldr	r3, [r3, #28]
 800106c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001070:	2b00      	cmp	r3, #0
 8001072:	d0f8      	beq.n	8001066 <SerialOutputChar+0xe>
	}

	serial_port->UART->TDR = data;
 8001074:	683b      	ldr	r3, [r7, #0]
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	79fa      	ldrb	r2, [r7, #7]
 800107a:	b292      	uxth	r2, r2
 800107c:	851a      	strh	r2, [r3, #40]	@ 0x28
}
 800107e:	bf00      	nop
 8001080:	370c      	adds	r7, #12
 8001082:	46bd      	mov	sp, r7
 8001084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001088:	4770      	bx	lr

0800108a <SerialOutputString>:



void SerialOutputString(uint8_t *pt, SerialPort *serial_port) {
 800108a:	b580      	push	{r7, lr}
 800108c:	b084      	sub	sp, #16
 800108e:	af00      	add	r7, sp, #0
 8001090:	6078      	str	r0, [r7, #4]
 8001092:	6039      	str	r1, [r7, #0]

	uint32_t counter = 0;
 8001094:	2300      	movs	r3, #0
 8001096:	60fb      	str	r3, [r7, #12]
	while(*pt) {
 8001098:	e00b      	b.n	80010b2 <SerialOutputString+0x28>
		SerialOutputChar(*pt, serial_port);
 800109a:	687b      	ldr	r3, [r7, #4]
 800109c:	781b      	ldrb	r3, [r3, #0]
 800109e:	6839      	ldr	r1, [r7, #0]
 80010a0:	4618      	mov	r0, r3
 80010a2:	f7ff ffd9 	bl	8001058 <SerialOutputChar>
		counter++;
 80010a6:	68fb      	ldr	r3, [r7, #12]
 80010a8:	3301      	adds	r3, #1
 80010aa:	60fb      	str	r3, [r7, #12]
		pt++;
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	3301      	adds	r3, #1
 80010b0:	607b      	str	r3, [r7, #4]
	while(*pt) {
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	781b      	ldrb	r3, [r3, #0]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d1ef      	bne.n	800109a <SerialOutputString+0x10>
	}

	serial_port->completion_function(counter);
 80010ba:	683b      	ldr	r3, [r7, #0]
 80010bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80010be:	68f8      	ldr	r0, [r7, #12]
 80010c0:	4798      	blx	r3
}
 80010c2:	bf00      	nop
 80010c4:	3710      	adds	r7, #16
 80010c6:	46bd      	mov	sp, r7
 80010c8:	bd80      	pop	{r7, pc}

080010ca <generate_shape>:
#include "shape.h"

#include <stdio.h>


struct shape generate_shape(uint32_t type, uint32_t dimension_1, uint32_t dimension_2) {
 80010ca:	b4b0      	push	{r4, r5, r7}
 80010cc:	b08b      	sub	sp, #44	@ 0x2c
 80010ce:	af00      	add	r7, sp, #0
 80010d0:	60f8      	str	r0, [r7, #12]
 80010d2:	60b9      	str	r1, [r7, #8]
 80010d4:	607a      	str	r2, [r7, #4]
 80010d6:	603b      	str	r3, [r7, #0]

  struct shape new_shape;

  new_shape.type = type;
 80010d8:	68bb      	ldr	r3, [r7, #8]
 80010da:	61fb      	str	r3, [r7, #28]
  new_shape.dimension_1 = dimension_1;
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	617b      	str	r3, [r7, #20]
  new_shape.dimension_2 = dimension_2;
 80010e0:	683b      	ldr	r3, [r7, #0]
 80010e2:	61bb      	str	r3, [r7, #24]
  new_shape.location = 0.;
 80010e4:	f04f 0300 	mov.w	r3, #0
 80010e8:	623b      	str	r3, [r7, #32]
  new_shape.is_initialised = true;
 80010ea:	2301      	movs	r3, #1
 80010ec:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24

  return new_shape;
 80010f0:	68fb      	ldr	r3, [r7, #12]
 80010f2:	461d      	mov	r5, r3
 80010f4:	f107 0414 	add.w	r4, r7, #20
 80010f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80010fa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80010fc:	6823      	ldr	r3, [r4, #0]
 80010fe:	602b      	str	r3, [r5, #0]
}
 8001100:	68f8      	ldr	r0, [r7, #12]
 8001102:	372c      	adds	r7, #44	@ 0x2c
 8001104:	46bd      	mov	sp, r7
 8001106:	bcb0      	pop	{r4, r5, r7}
 8001108:	4770      	bx	lr

0800110a <initialise_shape>:


// returns true for success, false for failure
int initialise_shape(struct shape *_shape, uint32_t type, uint32_t dimension_1, uint32_t dimension_2) {
 800110a:	b480      	push	{r7}
 800110c:	b085      	sub	sp, #20
 800110e:	af00      	add	r7, sp, #0
 8001110:	60f8      	str	r0, [r7, #12]
 8001112:	60b9      	str	r1, [r7, #8]
 8001114:	607a      	str	r2, [r7, #4]
 8001116:	603b      	str	r3, [r7, #0]

  if (dimension_1 <= 0 || dimension_2 <= 0)
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d002      	beq.n	8001124 <initialise_shape+0x1a>
 800111e:	683b      	ldr	r3, [r7, #0]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d101      	bne.n	8001128 <initialise_shape+0x1e>
    return false;
 8001124:	2300      	movs	r3, #0
 8001126:	e010      	b.n	800114a <initialise_shape+0x40>

  _shape->type = type;
 8001128:	68fb      	ldr	r3, [r7, #12]
 800112a:	68ba      	ldr	r2, [r7, #8]
 800112c:	609a      	str	r2, [r3, #8]
  _shape->dimension_1 = dimension_1;
 800112e:	68fb      	ldr	r3, [r7, #12]
 8001130:	687a      	ldr	r2, [r7, #4]
 8001132:	601a      	str	r2, [r3, #0]
  _shape->dimension_2 = dimension_2;
 8001134:	68fb      	ldr	r3, [r7, #12]
 8001136:	683a      	ldr	r2, [r7, #0]
 8001138:	605a      	str	r2, [r3, #4]
  _shape->location = 0.;
 800113a:	68fb      	ldr	r3, [r7, #12]
 800113c:	f04f 0200 	mov.w	r2, #0
 8001140:	60da      	str	r2, [r3, #12]
  _shape->is_initialised = true;
 8001142:	68fb      	ldr	r3, [r7, #12]
 8001144:	2201      	movs	r2, #1
 8001146:	741a      	strb	r2, [r3, #16]

  return true;
 8001148:	2301      	movs	r3, #1
}
 800114a:	4618      	mov	r0, r3
 800114c:	3714      	adds	r7, #20
 800114e:	46bd      	mov	sp, r7
 8001150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001154:	4770      	bx	lr
	...

08001158 <shape_string>:


void shape_string(struct shape *_shape, uint8_t *string) {
 8001158:	b5b0      	push	{r4, r5, r7, lr}
 800115a:	b084      	sub	sp, #16
 800115c:	af02      	add	r7, sp, #8
 800115e:	6078      	str	r0, [r7, #4]
 8001160:	6039      	str	r1, [r7, #0]
  
  switch(_shape->type) {
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	689b      	ldr	r3, [r3, #8]
 8001166:	2b02      	cmp	r3, #2
 8001168:	d017      	beq.n	800119a <shape_string+0x42>
 800116a:	2b02      	cmp	r3, #2
 800116c:	d83a      	bhi.n	80011e4 <shape_string+0x8c>
 800116e:	2b00      	cmp	r3, #0
 8001170:	d002      	beq.n	8001178 <shape_string+0x20>
 8001172:	2b01      	cmp	r3, #1
 8001174:	d025      	beq.n	80011c2 <shape_string+0x6a>
 8001176:	e035      	b.n	80011e4 <shape_string+0x8c>
    case SHAPE_SPHERE:
      sprintf((int8_t*)string, "Shape is a SPHERE, radius is %lu, location is %.2f \r\n", _shape->dimension_1, _shape->location);
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	681c      	ldr	r4, [r3, #0]
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	68db      	ldr	r3, [r3, #12]
 8001180:	4618      	mov	r0, r3
 8001182:	f7ff f9e9 	bl	8000558 <__aeabi_f2d>
 8001186:	4602      	mov	r2, r0
 8001188:	460b      	mov	r3, r1
 800118a:	e9cd 2300 	strd	r2, r3, [sp]
 800118e:	4622      	mov	r2, r4
 8001190:	491f      	ldr	r1, [pc, #124]	@ (8001210 <shape_string+0xb8>)
 8001192:	6838      	ldr	r0, [r7, #0]
 8001194:	f000 fe3e 	bl	8001e14 <siprintf>
      break;
 8001198:	e035      	b.n	8001206 <shape_string+0xae>
    case SHAPE_CONE:
      sprintf((int8_t*)string, "Shape is a CONE, radius is %lu, height is %lu, location is %.2f \r\n", _shape->dimension_1, _shape->dimension_2, _shape->location);
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	681c      	ldr	r4, [r3, #0]
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	685d      	ldr	r5, [r3, #4]
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	68db      	ldr	r3, [r3, #12]
 80011a6:	4618      	mov	r0, r3
 80011a8:	f7ff f9d6 	bl	8000558 <__aeabi_f2d>
 80011ac:	4602      	mov	r2, r0
 80011ae:	460b      	mov	r3, r1
 80011b0:	e9cd 2300 	strd	r2, r3, [sp]
 80011b4:	462b      	mov	r3, r5
 80011b6:	4622      	mov	r2, r4
 80011b8:	4916      	ldr	r1, [pc, #88]	@ (8001214 <shape_string+0xbc>)
 80011ba:	6838      	ldr	r0, [r7, #0]
 80011bc:	f000 fe2a 	bl	8001e14 <siprintf>
      break;
 80011c0:	e021      	b.n	8001206 <shape_string+0xae>
    case SHAPE_CUBE:
      sprintf((int8_t*)string, "Shape is a CUBE, side length is %lu, location is %.2f \r\n", _shape->dimension_1, _shape->location);
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	681c      	ldr	r4, [r3, #0]
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	68db      	ldr	r3, [r3, #12]
 80011ca:	4618      	mov	r0, r3
 80011cc:	f7ff f9c4 	bl	8000558 <__aeabi_f2d>
 80011d0:	4602      	mov	r2, r0
 80011d2:	460b      	mov	r3, r1
 80011d4:	e9cd 2300 	strd	r2, r3, [sp]
 80011d8:	4622      	mov	r2, r4
 80011da:	490f      	ldr	r1, [pc, #60]	@ (8001218 <shape_string+0xc0>)
 80011dc:	6838      	ldr	r0, [r7, #0]
 80011de:	f000 fe19 	bl	8001e14 <siprintf>
      break;
 80011e2:	e010      	b.n	8001206 <shape_string+0xae>
    default:
      sprintf((int8_t*)string, "Shape is a UNKNOWN, type is %lu, location is %.2f \r\n", _shape->type, _shape->location);
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	689c      	ldr	r4, [r3, #8]
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	68db      	ldr	r3, [r3, #12]
 80011ec:	4618      	mov	r0, r3
 80011ee:	f7ff f9b3 	bl	8000558 <__aeabi_f2d>
 80011f2:	4602      	mov	r2, r0
 80011f4:	460b      	mov	r3, r1
 80011f6:	e9cd 2300 	strd	r2, r3, [sp]
 80011fa:	4622      	mov	r2, r4
 80011fc:	4907      	ldr	r1, [pc, #28]	@ (800121c <shape_string+0xc4>)
 80011fe:	6838      	ldr	r0, [r7, #0]
 8001200:	f000 fe08 	bl	8001e14 <siprintf>
      break;
 8001204:	bf00      	nop
    
  }
}
 8001206:	bf00      	nop
 8001208:	3708      	adds	r7, #8
 800120a:	46bd      	mov	sp, r7
 800120c:	bdb0      	pop	{r4, r5, r7, pc}
 800120e:	bf00      	nop
 8001210:	08004108 	.word	0x08004108
 8001214:	08004140 	.word	0x08004140
 8001218:	08004184 	.word	0x08004184
 800121c:	080041c0 	.word	0x080041c0

08001220 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001220:	b480      	push	{r7}
 8001222:	af00      	add	r7, sp, #0
	return 1;
 8001224:	2301      	movs	r3, #1
}
 8001226:	4618      	mov	r0, r3
 8001228:	46bd      	mov	sp, r7
 800122a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122e:	4770      	bx	lr

08001230 <_kill>:

int _kill(int pid, int sig)
{
 8001230:	b580      	push	{r7, lr}
 8001232:	b082      	sub	sp, #8
 8001234:	af00      	add	r7, sp, #0
 8001236:	6078      	str	r0, [r7, #4]
 8001238:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800123a:	f000 fee7 	bl	800200c <__errno>
 800123e:	4603      	mov	r3, r0
 8001240:	2216      	movs	r2, #22
 8001242:	601a      	str	r2, [r3, #0]
	return -1;
 8001244:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001248:	4618      	mov	r0, r3
 800124a:	3708      	adds	r7, #8
 800124c:	46bd      	mov	sp, r7
 800124e:	bd80      	pop	{r7, pc}

08001250 <_exit>:

void _exit (int status)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	b082      	sub	sp, #8
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001258:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800125c:	6878      	ldr	r0, [r7, #4]
 800125e:	f7ff ffe7 	bl	8001230 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001262:	bf00      	nop
 8001264:	e7fd      	b.n	8001262 <_exit+0x12>

08001266 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001266:	b580      	push	{r7, lr}
 8001268:	b086      	sub	sp, #24
 800126a:	af00      	add	r7, sp, #0
 800126c:	60f8      	str	r0, [r7, #12]
 800126e:	60b9      	str	r1, [r7, #8]
 8001270:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001272:	2300      	movs	r3, #0
 8001274:	617b      	str	r3, [r7, #20]
 8001276:	e00a      	b.n	800128e <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001278:	f3af 8000 	nop.w
 800127c:	4601      	mov	r1, r0
 800127e:	68bb      	ldr	r3, [r7, #8]
 8001280:	1c5a      	adds	r2, r3, #1
 8001282:	60ba      	str	r2, [r7, #8]
 8001284:	b2ca      	uxtb	r2, r1
 8001286:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001288:	697b      	ldr	r3, [r7, #20]
 800128a:	3301      	adds	r3, #1
 800128c:	617b      	str	r3, [r7, #20]
 800128e:	697a      	ldr	r2, [r7, #20]
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	429a      	cmp	r2, r3
 8001294:	dbf0      	blt.n	8001278 <_read+0x12>
	}

return len;
 8001296:	687b      	ldr	r3, [r7, #4]
}
 8001298:	4618      	mov	r0, r3
 800129a:	3718      	adds	r7, #24
 800129c:	46bd      	mov	sp, r7
 800129e:	bd80      	pop	{r7, pc}

080012a0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b086      	sub	sp, #24
 80012a4:	af00      	add	r7, sp, #0
 80012a6:	60f8      	str	r0, [r7, #12]
 80012a8:	60b9      	str	r1, [r7, #8]
 80012aa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012ac:	2300      	movs	r3, #0
 80012ae:	617b      	str	r3, [r7, #20]
 80012b0:	e009      	b.n	80012c6 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80012b2:	68bb      	ldr	r3, [r7, #8]
 80012b4:	1c5a      	adds	r2, r3, #1
 80012b6:	60ba      	str	r2, [r7, #8]
 80012b8:	781b      	ldrb	r3, [r3, #0]
 80012ba:	4618      	mov	r0, r3
 80012bc:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012c0:	697b      	ldr	r3, [r7, #20]
 80012c2:	3301      	adds	r3, #1
 80012c4:	617b      	str	r3, [r7, #20]
 80012c6:	697a      	ldr	r2, [r7, #20]
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	429a      	cmp	r2, r3
 80012cc:	dbf1      	blt.n	80012b2 <_write+0x12>
	}
	return len;
 80012ce:	687b      	ldr	r3, [r7, #4]
}
 80012d0:	4618      	mov	r0, r3
 80012d2:	3718      	adds	r7, #24
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd80      	pop	{r7, pc}

080012d8 <_close>:

int _close(int file)
{
 80012d8:	b480      	push	{r7}
 80012da:	b083      	sub	sp, #12
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
	return -1;
 80012e0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80012e4:	4618      	mov	r0, r3
 80012e6:	370c      	adds	r7, #12
 80012e8:	46bd      	mov	sp, r7
 80012ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ee:	4770      	bx	lr

080012f0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80012f0:	b480      	push	{r7}
 80012f2:	b083      	sub	sp, #12
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	6078      	str	r0, [r7, #4]
 80012f8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80012fa:	683b      	ldr	r3, [r7, #0]
 80012fc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001300:	605a      	str	r2, [r3, #4]
	return 0;
 8001302:	2300      	movs	r3, #0
}
 8001304:	4618      	mov	r0, r3
 8001306:	370c      	adds	r7, #12
 8001308:	46bd      	mov	sp, r7
 800130a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800130e:	4770      	bx	lr

08001310 <_isatty>:

int _isatty(int file)
{
 8001310:	b480      	push	{r7}
 8001312:	b083      	sub	sp, #12
 8001314:	af00      	add	r7, sp, #0
 8001316:	6078      	str	r0, [r7, #4]
	return 1;
 8001318:	2301      	movs	r3, #1
}
 800131a:	4618      	mov	r0, r3
 800131c:	370c      	adds	r7, #12
 800131e:	46bd      	mov	sp, r7
 8001320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001324:	4770      	bx	lr

08001326 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001326:	b480      	push	{r7}
 8001328:	b085      	sub	sp, #20
 800132a:	af00      	add	r7, sp, #0
 800132c:	60f8      	str	r0, [r7, #12]
 800132e:	60b9      	str	r1, [r7, #8]
 8001330:	607a      	str	r2, [r7, #4]
	return 0;
 8001332:	2300      	movs	r3, #0
}
 8001334:	4618      	mov	r0, r3
 8001336:	3714      	adds	r7, #20
 8001338:	46bd      	mov	sp, r7
 800133a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800133e:	4770      	bx	lr

08001340 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b086      	sub	sp, #24
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001348:	4a14      	ldr	r2, [pc, #80]	@ (800139c <_sbrk+0x5c>)
 800134a:	4b15      	ldr	r3, [pc, #84]	@ (80013a0 <_sbrk+0x60>)
 800134c:	1ad3      	subs	r3, r2, r3
 800134e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001350:	697b      	ldr	r3, [r7, #20]
 8001352:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001354:	4b13      	ldr	r3, [pc, #76]	@ (80013a4 <_sbrk+0x64>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	2b00      	cmp	r3, #0
 800135a:	d102      	bne.n	8001362 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800135c:	4b11      	ldr	r3, [pc, #68]	@ (80013a4 <_sbrk+0x64>)
 800135e:	4a12      	ldr	r2, [pc, #72]	@ (80013a8 <_sbrk+0x68>)
 8001360:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001362:	4b10      	ldr	r3, [pc, #64]	@ (80013a4 <_sbrk+0x64>)
 8001364:	681a      	ldr	r2, [r3, #0]
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	4413      	add	r3, r2
 800136a:	693a      	ldr	r2, [r7, #16]
 800136c:	429a      	cmp	r2, r3
 800136e:	d207      	bcs.n	8001380 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001370:	f000 fe4c 	bl	800200c <__errno>
 8001374:	4603      	mov	r3, r0
 8001376:	220c      	movs	r2, #12
 8001378:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800137a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800137e:	e009      	b.n	8001394 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001380:	4b08      	ldr	r3, [pc, #32]	@ (80013a4 <_sbrk+0x64>)
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001386:	4b07      	ldr	r3, [pc, #28]	@ (80013a4 <_sbrk+0x64>)
 8001388:	681a      	ldr	r2, [r3, #0]
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	4413      	add	r3, r2
 800138e:	4a05      	ldr	r2, [pc, #20]	@ (80013a4 <_sbrk+0x64>)
 8001390:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001392:	68fb      	ldr	r3, [r7, #12]
}
 8001394:	4618      	mov	r0, r3
 8001396:	3718      	adds	r7, #24
 8001398:	46bd      	mov	sp, r7
 800139a:	bd80      	pop	{r7, pc}
 800139c:	2000a000 	.word	0x2000a000
 80013a0:	00000400 	.word	0x00000400
 80013a4:	2000020c 	.word	0x2000020c
 80013a8:	20000360 	.word	0x20000360

080013ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80013ac:	480d      	ldr	r0, [pc, #52]	@ (80013e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80013ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80013b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80013b4:	480c      	ldr	r0, [pc, #48]	@ (80013e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80013b6:	490d      	ldr	r1, [pc, #52]	@ (80013ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80013b8:	4a0d      	ldr	r2, [pc, #52]	@ (80013f0 <LoopForever+0xe>)
  movs r3, #0
 80013ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80013bc:	e002      	b.n	80013c4 <LoopCopyDataInit>

080013be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80013be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80013c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80013c2:	3304      	adds	r3, #4

080013c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80013c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80013c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80013c8:	d3f9      	bcc.n	80013be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80013ca:	4a0a      	ldr	r2, [pc, #40]	@ (80013f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80013cc:	4c0a      	ldr	r4, [pc, #40]	@ (80013f8 <LoopForever+0x16>)
  movs r3, #0
 80013ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80013d0:	e001      	b.n	80013d6 <LoopFillZerobss>

080013d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80013d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80013d4:	3204      	adds	r2, #4

080013d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80013d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80013d8:	d3fb      	bcc.n	80013d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80013da:	f000 fe1d 	bl	8002018 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80013de:	f7ff fc05 	bl	8000bec <main>

080013e2 <LoopForever>:

LoopForever:
    b LoopForever
 80013e2:	e7fe      	b.n	80013e2 <LoopForever>
  ldr   r0, =_estack
 80013e4:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 80013e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80013ec:	200001f0 	.word	0x200001f0
  ldr r2, =_sidata
 80013f0:	0800457c 	.word	0x0800457c
  ldr r2, =_sbss
 80013f4:	200001f0 	.word	0x200001f0
  ldr r4, =_ebss
 80013f8:	2000035c 	.word	0x2000035c

080013fc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80013fc:	e7fe      	b.n	80013fc <ADC1_2_IRQHandler>

080013fe <__cvt>:
 80013fe:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001402:	ec57 6b10 	vmov	r6, r7, d0
 8001406:	2f00      	cmp	r7, #0
 8001408:	460c      	mov	r4, r1
 800140a:	4619      	mov	r1, r3
 800140c:	463b      	mov	r3, r7
 800140e:	bfbb      	ittet	lt
 8001410:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001414:	461f      	movlt	r7, r3
 8001416:	2300      	movge	r3, #0
 8001418:	232d      	movlt	r3, #45	@ 0x2d
 800141a:	700b      	strb	r3, [r1, #0]
 800141c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800141e:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001422:	4691      	mov	r9, r2
 8001424:	f023 0820 	bic.w	r8, r3, #32
 8001428:	bfbc      	itt	lt
 800142a:	4632      	movlt	r2, r6
 800142c:	4616      	movlt	r6, r2
 800142e:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001432:	d005      	beq.n	8001440 <__cvt+0x42>
 8001434:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001438:	d100      	bne.n	800143c <__cvt+0x3e>
 800143a:	3401      	adds	r4, #1
 800143c:	2102      	movs	r1, #2
 800143e:	e000      	b.n	8001442 <__cvt+0x44>
 8001440:	2103      	movs	r1, #3
 8001442:	ab03      	add	r3, sp, #12
 8001444:	9301      	str	r3, [sp, #4]
 8001446:	ab02      	add	r3, sp, #8
 8001448:	9300      	str	r3, [sp, #0]
 800144a:	ec47 6b10 	vmov	d0, r6, r7
 800144e:	4653      	mov	r3, sl
 8001450:	4622      	mov	r2, r4
 8001452:	f000 fe95 	bl	8002180 <_dtoa_r>
 8001456:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800145a:	4605      	mov	r5, r0
 800145c:	d119      	bne.n	8001492 <__cvt+0x94>
 800145e:	f019 0f01 	tst.w	r9, #1
 8001462:	d00e      	beq.n	8001482 <__cvt+0x84>
 8001464:	eb00 0904 	add.w	r9, r0, r4
 8001468:	2200      	movs	r2, #0
 800146a:	2300      	movs	r3, #0
 800146c:	4630      	mov	r0, r6
 800146e:	4639      	mov	r1, r7
 8001470:	f7ff fb32 	bl	8000ad8 <__aeabi_dcmpeq>
 8001474:	b108      	cbz	r0, 800147a <__cvt+0x7c>
 8001476:	f8cd 900c 	str.w	r9, [sp, #12]
 800147a:	2230      	movs	r2, #48	@ 0x30
 800147c:	9b03      	ldr	r3, [sp, #12]
 800147e:	454b      	cmp	r3, r9
 8001480:	d31e      	bcc.n	80014c0 <__cvt+0xc2>
 8001482:	9b03      	ldr	r3, [sp, #12]
 8001484:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001486:	1b5b      	subs	r3, r3, r5
 8001488:	4628      	mov	r0, r5
 800148a:	6013      	str	r3, [r2, #0]
 800148c:	b004      	add	sp, #16
 800148e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001492:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001496:	eb00 0904 	add.w	r9, r0, r4
 800149a:	d1e5      	bne.n	8001468 <__cvt+0x6a>
 800149c:	7803      	ldrb	r3, [r0, #0]
 800149e:	2b30      	cmp	r3, #48	@ 0x30
 80014a0:	d10a      	bne.n	80014b8 <__cvt+0xba>
 80014a2:	2200      	movs	r2, #0
 80014a4:	2300      	movs	r3, #0
 80014a6:	4630      	mov	r0, r6
 80014a8:	4639      	mov	r1, r7
 80014aa:	f7ff fb15 	bl	8000ad8 <__aeabi_dcmpeq>
 80014ae:	b918      	cbnz	r0, 80014b8 <__cvt+0xba>
 80014b0:	f1c4 0401 	rsb	r4, r4, #1
 80014b4:	f8ca 4000 	str.w	r4, [sl]
 80014b8:	f8da 3000 	ldr.w	r3, [sl]
 80014bc:	4499      	add	r9, r3
 80014be:	e7d3      	b.n	8001468 <__cvt+0x6a>
 80014c0:	1c59      	adds	r1, r3, #1
 80014c2:	9103      	str	r1, [sp, #12]
 80014c4:	701a      	strb	r2, [r3, #0]
 80014c6:	e7d9      	b.n	800147c <__cvt+0x7e>

080014c8 <__exponent>:
 80014c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014ca:	2900      	cmp	r1, #0
 80014cc:	bfba      	itte	lt
 80014ce:	4249      	neglt	r1, r1
 80014d0:	232d      	movlt	r3, #45	@ 0x2d
 80014d2:	232b      	movge	r3, #43	@ 0x2b
 80014d4:	2909      	cmp	r1, #9
 80014d6:	7002      	strb	r2, [r0, #0]
 80014d8:	7043      	strb	r3, [r0, #1]
 80014da:	dd29      	ble.n	8001530 <__exponent+0x68>
 80014dc:	f10d 0307 	add.w	r3, sp, #7
 80014e0:	461d      	mov	r5, r3
 80014e2:	270a      	movs	r7, #10
 80014e4:	461a      	mov	r2, r3
 80014e6:	fbb1 f6f7 	udiv	r6, r1, r7
 80014ea:	fb07 1416 	mls	r4, r7, r6, r1
 80014ee:	3430      	adds	r4, #48	@ 0x30
 80014f0:	f802 4c01 	strb.w	r4, [r2, #-1]
 80014f4:	460c      	mov	r4, r1
 80014f6:	2c63      	cmp	r4, #99	@ 0x63
 80014f8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 80014fc:	4631      	mov	r1, r6
 80014fe:	dcf1      	bgt.n	80014e4 <__exponent+0x1c>
 8001500:	3130      	adds	r1, #48	@ 0x30
 8001502:	1e94      	subs	r4, r2, #2
 8001504:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001508:	1c41      	adds	r1, r0, #1
 800150a:	4623      	mov	r3, r4
 800150c:	42ab      	cmp	r3, r5
 800150e:	d30a      	bcc.n	8001526 <__exponent+0x5e>
 8001510:	f10d 0309 	add.w	r3, sp, #9
 8001514:	1a9b      	subs	r3, r3, r2
 8001516:	42ac      	cmp	r4, r5
 8001518:	bf88      	it	hi
 800151a:	2300      	movhi	r3, #0
 800151c:	3302      	adds	r3, #2
 800151e:	4403      	add	r3, r0
 8001520:	1a18      	subs	r0, r3, r0
 8001522:	b003      	add	sp, #12
 8001524:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001526:	f813 6b01 	ldrb.w	r6, [r3], #1
 800152a:	f801 6f01 	strb.w	r6, [r1, #1]!
 800152e:	e7ed      	b.n	800150c <__exponent+0x44>
 8001530:	2330      	movs	r3, #48	@ 0x30
 8001532:	3130      	adds	r1, #48	@ 0x30
 8001534:	7083      	strb	r3, [r0, #2]
 8001536:	70c1      	strb	r1, [r0, #3]
 8001538:	1d03      	adds	r3, r0, #4
 800153a:	e7f1      	b.n	8001520 <__exponent+0x58>

0800153c <_printf_float>:
 800153c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001540:	b08d      	sub	sp, #52	@ 0x34
 8001542:	460c      	mov	r4, r1
 8001544:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001548:	4616      	mov	r6, r2
 800154a:	461f      	mov	r7, r3
 800154c:	4605      	mov	r5, r0
 800154e:	f000 fd8b 	bl	8002068 <_localeconv_r>
 8001552:	6803      	ldr	r3, [r0, #0]
 8001554:	9304      	str	r3, [sp, #16]
 8001556:	4618      	mov	r0, r3
 8001558:	f7fe fe92 	bl	8000280 <strlen>
 800155c:	2300      	movs	r3, #0
 800155e:	930a      	str	r3, [sp, #40]	@ 0x28
 8001560:	f8d8 3000 	ldr.w	r3, [r8]
 8001564:	9005      	str	r0, [sp, #20]
 8001566:	3307      	adds	r3, #7
 8001568:	f023 0307 	bic.w	r3, r3, #7
 800156c:	f103 0208 	add.w	r2, r3, #8
 8001570:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001574:	f8d4 b000 	ldr.w	fp, [r4]
 8001578:	f8c8 2000 	str.w	r2, [r8]
 800157c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001580:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001584:	9307      	str	r3, [sp, #28]
 8001586:	f8cd 8018 	str.w	r8, [sp, #24]
 800158a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800158e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001592:	4b9c      	ldr	r3, [pc, #624]	@ (8001804 <_printf_float+0x2c8>)
 8001594:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001598:	f7ff fad0 	bl	8000b3c <__aeabi_dcmpun>
 800159c:	bb70      	cbnz	r0, 80015fc <_printf_float+0xc0>
 800159e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80015a2:	4b98      	ldr	r3, [pc, #608]	@ (8001804 <_printf_float+0x2c8>)
 80015a4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80015a8:	f7ff faaa 	bl	8000b00 <__aeabi_dcmple>
 80015ac:	bb30      	cbnz	r0, 80015fc <_printf_float+0xc0>
 80015ae:	2200      	movs	r2, #0
 80015b0:	2300      	movs	r3, #0
 80015b2:	4640      	mov	r0, r8
 80015b4:	4649      	mov	r1, r9
 80015b6:	f7ff fa99 	bl	8000aec <__aeabi_dcmplt>
 80015ba:	b110      	cbz	r0, 80015c2 <_printf_float+0x86>
 80015bc:	232d      	movs	r3, #45	@ 0x2d
 80015be:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80015c2:	4a91      	ldr	r2, [pc, #580]	@ (8001808 <_printf_float+0x2cc>)
 80015c4:	4b91      	ldr	r3, [pc, #580]	@ (800180c <_printf_float+0x2d0>)
 80015c6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80015ca:	bf8c      	ite	hi
 80015cc:	4690      	movhi	r8, r2
 80015ce:	4698      	movls	r8, r3
 80015d0:	2303      	movs	r3, #3
 80015d2:	6123      	str	r3, [r4, #16]
 80015d4:	f02b 0304 	bic.w	r3, fp, #4
 80015d8:	6023      	str	r3, [r4, #0]
 80015da:	f04f 0900 	mov.w	r9, #0
 80015de:	9700      	str	r7, [sp, #0]
 80015e0:	4633      	mov	r3, r6
 80015e2:	aa0b      	add	r2, sp, #44	@ 0x2c
 80015e4:	4621      	mov	r1, r4
 80015e6:	4628      	mov	r0, r5
 80015e8:	f000 fa7c 	bl	8001ae4 <_printf_common>
 80015ec:	3001      	adds	r0, #1
 80015ee:	f040 808d 	bne.w	800170c <_printf_float+0x1d0>
 80015f2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80015f6:	b00d      	add	sp, #52	@ 0x34
 80015f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015fc:	4642      	mov	r2, r8
 80015fe:	464b      	mov	r3, r9
 8001600:	4640      	mov	r0, r8
 8001602:	4649      	mov	r1, r9
 8001604:	f7ff fa9a 	bl	8000b3c <__aeabi_dcmpun>
 8001608:	b140      	cbz	r0, 800161c <_printf_float+0xe0>
 800160a:	464b      	mov	r3, r9
 800160c:	2b00      	cmp	r3, #0
 800160e:	bfbc      	itt	lt
 8001610:	232d      	movlt	r3, #45	@ 0x2d
 8001612:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001616:	4a7e      	ldr	r2, [pc, #504]	@ (8001810 <_printf_float+0x2d4>)
 8001618:	4b7e      	ldr	r3, [pc, #504]	@ (8001814 <_printf_float+0x2d8>)
 800161a:	e7d4      	b.n	80015c6 <_printf_float+0x8a>
 800161c:	6863      	ldr	r3, [r4, #4]
 800161e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001622:	9206      	str	r2, [sp, #24]
 8001624:	1c5a      	adds	r2, r3, #1
 8001626:	d13b      	bne.n	80016a0 <_printf_float+0x164>
 8001628:	2306      	movs	r3, #6
 800162a:	6063      	str	r3, [r4, #4]
 800162c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001630:	2300      	movs	r3, #0
 8001632:	6022      	str	r2, [r4, #0]
 8001634:	9303      	str	r3, [sp, #12]
 8001636:	ab0a      	add	r3, sp, #40	@ 0x28
 8001638:	e9cd a301 	strd	sl, r3, [sp, #4]
 800163c:	ab09      	add	r3, sp, #36	@ 0x24
 800163e:	9300      	str	r3, [sp, #0]
 8001640:	6861      	ldr	r1, [r4, #4]
 8001642:	ec49 8b10 	vmov	d0, r8, r9
 8001646:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800164a:	4628      	mov	r0, r5
 800164c:	f7ff fed7 	bl	80013fe <__cvt>
 8001650:	9b06      	ldr	r3, [sp, #24]
 8001652:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001654:	2b47      	cmp	r3, #71	@ 0x47
 8001656:	4680      	mov	r8, r0
 8001658:	d129      	bne.n	80016ae <_printf_float+0x172>
 800165a:	1cc8      	adds	r0, r1, #3
 800165c:	db02      	blt.n	8001664 <_printf_float+0x128>
 800165e:	6863      	ldr	r3, [r4, #4]
 8001660:	4299      	cmp	r1, r3
 8001662:	dd41      	ble.n	80016e8 <_printf_float+0x1ac>
 8001664:	f1aa 0a02 	sub.w	sl, sl, #2
 8001668:	fa5f fa8a 	uxtb.w	sl, sl
 800166c:	3901      	subs	r1, #1
 800166e:	4652      	mov	r2, sl
 8001670:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001674:	9109      	str	r1, [sp, #36]	@ 0x24
 8001676:	f7ff ff27 	bl	80014c8 <__exponent>
 800167a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800167c:	1813      	adds	r3, r2, r0
 800167e:	2a01      	cmp	r2, #1
 8001680:	4681      	mov	r9, r0
 8001682:	6123      	str	r3, [r4, #16]
 8001684:	dc02      	bgt.n	800168c <_printf_float+0x150>
 8001686:	6822      	ldr	r2, [r4, #0]
 8001688:	07d2      	lsls	r2, r2, #31
 800168a:	d501      	bpl.n	8001690 <_printf_float+0x154>
 800168c:	3301      	adds	r3, #1
 800168e:	6123      	str	r3, [r4, #16]
 8001690:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001694:	2b00      	cmp	r3, #0
 8001696:	d0a2      	beq.n	80015de <_printf_float+0xa2>
 8001698:	232d      	movs	r3, #45	@ 0x2d
 800169a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800169e:	e79e      	b.n	80015de <_printf_float+0xa2>
 80016a0:	9a06      	ldr	r2, [sp, #24]
 80016a2:	2a47      	cmp	r2, #71	@ 0x47
 80016a4:	d1c2      	bne.n	800162c <_printf_float+0xf0>
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d1c0      	bne.n	800162c <_printf_float+0xf0>
 80016aa:	2301      	movs	r3, #1
 80016ac:	e7bd      	b.n	800162a <_printf_float+0xee>
 80016ae:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80016b2:	d9db      	bls.n	800166c <_printf_float+0x130>
 80016b4:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80016b8:	d118      	bne.n	80016ec <_printf_float+0x1b0>
 80016ba:	2900      	cmp	r1, #0
 80016bc:	6863      	ldr	r3, [r4, #4]
 80016be:	dd0b      	ble.n	80016d8 <_printf_float+0x19c>
 80016c0:	6121      	str	r1, [r4, #16]
 80016c2:	b913      	cbnz	r3, 80016ca <_printf_float+0x18e>
 80016c4:	6822      	ldr	r2, [r4, #0]
 80016c6:	07d0      	lsls	r0, r2, #31
 80016c8:	d502      	bpl.n	80016d0 <_printf_float+0x194>
 80016ca:	3301      	adds	r3, #1
 80016cc:	440b      	add	r3, r1
 80016ce:	6123      	str	r3, [r4, #16]
 80016d0:	65a1      	str	r1, [r4, #88]	@ 0x58
 80016d2:	f04f 0900 	mov.w	r9, #0
 80016d6:	e7db      	b.n	8001690 <_printf_float+0x154>
 80016d8:	b913      	cbnz	r3, 80016e0 <_printf_float+0x1a4>
 80016da:	6822      	ldr	r2, [r4, #0]
 80016dc:	07d2      	lsls	r2, r2, #31
 80016de:	d501      	bpl.n	80016e4 <_printf_float+0x1a8>
 80016e0:	3302      	adds	r3, #2
 80016e2:	e7f4      	b.n	80016ce <_printf_float+0x192>
 80016e4:	2301      	movs	r3, #1
 80016e6:	e7f2      	b.n	80016ce <_printf_float+0x192>
 80016e8:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80016ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80016ee:	4299      	cmp	r1, r3
 80016f0:	db05      	blt.n	80016fe <_printf_float+0x1c2>
 80016f2:	6823      	ldr	r3, [r4, #0]
 80016f4:	6121      	str	r1, [r4, #16]
 80016f6:	07d8      	lsls	r0, r3, #31
 80016f8:	d5ea      	bpl.n	80016d0 <_printf_float+0x194>
 80016fa:	1c4b      	adds	r3, r1, #1
 80016fc:	e7e7      	b.n	80016ce <_printf_float+0x192>
 80016fe:	2900      	cmp	r1, #0
 8001700:	bfd4      	ite	le
 8001702:	f1c1 0202 	rsble	r2, r1, #2
 8001706:	2201      	movgt	r2, #1
 8001708:	4413      	add	r3, r2
 800170a:	e7e0      	b.n	80016ce <_printf_float+0x192>
 800170c:	6823      	ldr	r3, [r4, #0]
 800170e:	055a      	lsls	r2, r3, #21
 8001710:	d407      	bmi.n	8001722 <_printf_float+0x1e6>
 8001712:	6923      	ldr	r3, [r4, #16]
 8001714:	4642      	mov	r2, r8
 8001716:	4631      	mov	r1, r6
 8001718:	4628      	mov	r0, r5
 800171a:	47b8      	blx	r7
 800171c:	3001      	adds	r0, #1
 800171e:	d12b      	bne.n	8001778 <_printf_float+0x23c>
 8001720:	e767      	b.n	80015f2 <_printf_float+0xb6>
 8001722:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001726:	f240 80dd 	bls.w	80018e4 <_printf_float+0x3a8>
 800172a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800172e:	2200      	movs	r2, #0
 8001730:	2300      	movs	r3, #0
 8001732:	f7ff f9d1 	bl	8000ad8 <__aeabi_dcmpeq>
 8001736:	2800      	cmp	r0, #0
 8001738:	d033      	beq.n	80017a2 <_printf_float+0x266>
 800173a:	4a37      	ldr	r2, [pc, #220]	@ (8001818 <_printf_float+0x2dc>)
 800173c:	2301      	movs	r3, #1
 800173e:	4631      	mov	r1, r6
 8001740:	4628      	mov	r0, r5
 8001742:	47b8      	blx	r7
 8001744:	3001      	adds	r0, #1
 8001746:	f43f af54 	beq.w	80015f2 <_printf_float+0xb6>
 800174a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800174e:	4543      	cmp	r3, r8
 8001750:	db02      	blt.n	8001758 <_printf_float+0x21c>
 8001752:	6823      	ldr	r3, [r4, #0]
 8001754:	07d8      	lsls	r0, r3, #31
 8001756:	d50f      	bpl.n	8001778 <_printf_float+0x23c>
 8001758:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800175c:	4631      	mov	r1, r6
 800175e:	4628      	mov	r0, r5
 8001760:	47b8      	blx	r7
 8001762:	3001      	adds	r0, #1
 8001764:	f43f af45 	beq.w	80015f2 <_printf_float+0xb6>
 8001768:	f04f 0900 	mov.w	r9, #0
 800176c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001770:	f104 0a1a 	add.w	sl, r4, #26
 8001774:	45c8      	cmp	r8, r9
 8001776:	dc09      	bgt.n	800178c <_printf_float+0x250>
 8001778:	6823      	ldr	r3, [r4, #0]
 800177a:	079b      	lsls	r3, r3, #30
 800177c:	f100 8103 	bmi.w	8001986 <_printf_float+0x44a>
 8001780:	68e0      	ldr	r0, [r4, #12]
 8001782:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001784:	4298      	cmp	r0, r3
 8001786:	bfb8      	it	lt
 8001788:	4618      	movlt	r0, r3
 800178a:	e734      	b.n	80015f6 <_printf_float+0xba>
 800178c:	2301      	movs	r3, #1
 800178e:	4652      	mov	r2, sl
 8001790:	4631      	mov	r1, r6
 8001792:	4628      	mov	r0, r5
 8001794:	47b8      	blx	r7
 8001796:	3001      	adds	r0, #1
 8001798:	f43f af2b 	beq.w	80015f2 <_printf_float+0xb6>
 800179c:	f109 0901 	add.w	r9, r9, #1
 80017a0:	e7e8      	b.n	8001774 <_printf_float+0x238>
 80017a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	dc39      	bgt.n	800181c <_printf_float+0x2e0>
 80017a8:	4a1b      	ldr	r2, [pc, #108]	@ (8001818 <_printf_float+0x2dc>)
 80017aa:	2301      	movs	r3, #1
 80017ac:	4631      	mov	r1, r6
 80017ae:	4628      	mov	r0, r5
 80017b0:	47b8      	blx	r7
 80017b2:	3001      	adds	r0, #1
 80017b4:	f43f af1d 	beq.w	80015f2 <_printf_float+0xb6>
 80017b8:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 80017bc:	ea59 0303 	orrs.w	r3, r9, r3
 80017c0:	d102      	bne.n	80017c8 <_printf_float+0x28c>
 80017c2:	6823      	ldr	r3, [r4, #0]
 80017c4:	07d9      	lsls	r1, r3, #31
 80017c6:	d5d7      	bpl.n	8001778 <_printf_float+0x23c>
 80017c8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80017cc:	4631      	mov	r1, r6
 80017ce:	4628      	mov	r0, r5
 80017d0:	47b8      	blx	r7
 80017d2:	3001      	adds	r0, #1
 80017d4:	f43f af0d 	beq.w	80015f2 <_printf_float+0xb6>
 80017d8:	f04f 0a00 	mov.w	sl, #0
 80017dc:	f104 0b1a 	add.w	fp, r4, #26
 80017e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80017e2:	425b      	negs	r3, r3
 80017e4:	4553      	cmp	r3, sl
 80017e6:	dc01      	bgt.n	80017ec <_printf_float+0x2b0>
 80017e8:	464b      	mov	r3, r9
 80017ea:	e793      	b.n	8001714 <_printf_float+0x1d8>
 80017ec:	2301      	movs	r3, #1
 80017ee:	465a      	mov	r2, fp
 80017f0:	4631      	mov	r1, r6
 80017f2:	4628      	mov	r0, r5
 80017f4:	47b8      	blx	r7
 80017f6:	3001      	adds	r0, #1
 80017f8:	f43f aefb 	beq.w	80015f2 <_printf_float+0xb6>
 80017fc:	f10a 0a01 	add.w	sl, sl, #1
 8001800:	e7ee      	b.n	80017e0 <_printf_float+0x2a4>
 8001802:	bf00      	nop
 8001804:	7fefffff 	.word	0x7fefffff
 8001808:	080041f9 	.word	0x080041f9
 800180c:	080041f5 	.word	0x080041f5
 8001810:	08004201 	.word	0x08004201
 8001814:	080041fd 	.word	0x080041fd
 8001818:	08004205 	.word	0x08004205
 800181c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800181e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001822:	4553      	cmp	r3, sl
 8001824:	bfa8      	it	ge
 8001826:	4653      	movge	r3, sl
 8001828:	2b00      	cmp	r3, #0
 800182a:	4699      	mov	r9, r3
 800182c:	dc36      	bgt.n	800189c <_printf_float+0x360>
 800182e:	f04f 0b00 	mov.w	fp, #0
 8001832:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001836:	f104 021a 	add.w	r2, r4, #26
 800183a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800183c:	9306      	str	r3, [sp, #24]
 800183e:	eba3 0309 	sub.w	r3, r3, r9
 8001842:	455b      	cmp	r3, fp
 8001844:	dc31      	bgt.n	80018aa <_printf_float+0x36e>
 8001846:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001848:	459a      	cmp	sl, r3
 800184a:	dc3a      	bgt.n	80018c2 <_printf_float+0x386>
 800184c:	6823      	ldr	r3, [r4, #0]
 800184e:	07da      	lsls	r2, r3, #31
 8001850:	d437      	bmi.n	80018c2 <_printf_float+0x386>
 8001852:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001854:	ebaa 0903 	sub.w	r9, sl, r3
 8001858:	9b06      	ldr	r3, [sp, #24]
 800185a:	ebaa 0303 	sub.w	r3, sl, r3
 800185e:	4599      	cmp	r9, r3
 8001860:	bfa8      	it	ge
 8001862:	4699      	movge	r9, r3
 8001864:	f1b9 0f00 	cmp.w	r9, #0
 8001868:	dc33      	bgt.n	80018d2 <_printf_float+0x396>
 800186a:	f04f 0800 	mov.w	r8, #0
 800186e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001872:	f104 0b1a 	add.w	fp, r4, #26
 8001876:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001878:	ebaa 0303 	sub.w	r3, sl, r3
 800187c:	eba3 0309 	sub.w	r3, r3, r9
 8001880:	4543      	cmp	r3, r8
 8001882:	f77f af79 	ble.w	8001778 <_printf_float+0x23c>
 8001886:	2301      	movs	r3, #1
 8001888:	465a      	mov	r2, fp
 800188a:	4631      	mov	r1, r6
 800188c:	4628      	mov	r0, r5
 800188e:	47b8      	blx	r7
 8001890:	3001      	adds	r0, #1
 8001892:	f43f aeae 	beq.w	80015f2 <_printf_float+0xb6>
 8001896:	f108 0801 	add.w	r8, r8, #1
 800189a:	e7ec      	b.n	8001876 <_printf_float+0x33a>
 800189c:	4642      	mov	r2, r8
 800189e:	4631      	mov	r1, r6
 80018a0:	4628      	mov	r0, r5
 80018a2:	47b8      	blx	r7
 80018a4:	3001      	adds	r0, #1
 80018a6:	d1c2      	bne.n	800182e <_printf_float+0x2f2>
 80018a8:	e6a3      	b.n	80015f2 <_printf_float+0xb6>
 80018aa:	2301      	movs	r3, #1
 80018ac:	4631      	mov	r1, r6
 80018ae:	4628      	mov	r0, r5
 80018b0:	9206      	str	r2, [sp, #24]
 80018b2:	47b8      	blx	r7
 80018b4:	3001      	adds	r0, #1
 80018b6:	f43f ae9c 	beq.w	80015f2 <_printf_float+0xb6>
 80018ba:	9a06      	ldr	r2, [sp, #24]
 80018bc:	f10b 0b01 	add.w	fp, fp, #1
 80018c0:	e7bb      	b.n	800183a <_printf_float+0x2fe>
 80018c2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80018c6:	4631      	mov	r1, r6
 80018c8:	4628      	mov	r0, r5
 80018ca:	47b8      	blx	r7
 80018cc:	3001      	adds	r0, #1
 80018ce:	d1c0      	bne.n	8001852 <_printf_float+0x316>
 80018d0:	e68f      	b.n	80015f2 <_printf_float+0xb6>
 80018d2:	9a06      	ldr	r2, [sp, #24]
 80018d4:	464b      	mov	r3, r9
 80018d6:	4442      	add	r2, r8
 80018d8:	4631      	mov	r1, r6
 80018da:	4628      	mov	r0, r5
 80018dc:	47b8      	blx	r7
 80018de:	3001      	adds	r0, #1
 80018e0:	d1c3      	bne.n	800186a <_printf_float+0x32e>
 80018e2:	e686      	b.n	80015f2 <_printf_float+0xb6>
 80018e4:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80018e8:	f1ba 0f01 	cmp.w	sl, #1
 80018ec:	dc01      	bgt.n	80018f2 <_printf_float+0x3b6>
 80018ee:	07db      	lsls	r3, r3, #31
 80018f0:	d536      	bpl.n	8001960 <_printf_float+0x424>
 80018f2:	2301      	movs	r3, #1
 80018f4:	4642      	mov	r2, r8
 80018f6:	4631      	mov	r1, r6
 80018f8:	4628      	mov	r0, r5
 80018fa:	47b8      	blx	r7
 80018fc:	3001      	adds	r0, #1
 80018fe:	f43f ae78 	beq.w	80015f2 <_printf_float+0xb6>
 8001902:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001906:	4631      	mov	r1, r6
 8001908:	4628      	mov	r0, r5
 800190a:	47b8      	blx	r7
 800190c:	3001      	adds	r0, #1
 800190e:	f43f ae70 	beq.w	80015f2 <_printf_float+0xb6>
 8001912:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001916:	2200      	movs	r2, #0
 8001918:	2300      	movs	r3, #0
 800191a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 800191e:	f7ff f8db 	bl	8000ad8 <__aeabi_dcmpeq>
 8001922:	b9c0      	cbnz	r0, 8001956 <_printf_float+0x41a>
 8001924:	4653      	mov	r3, sl
 8001926:	f108 0201 	add.w	r2, r8, #1
 800192a:	4631      	mov	r1, r6
 800192c:	4628      	mov	r0, r5
 800192e:	47b8      	blx	r7
 8001930:	3001      	adds	r0, #1
 8001932:	d10c      	bne.n	800194e <_printf_float+0x412>
 8001934:	e65d      	b.n	80015f2 <_printf_float+0xb6>
 8001936:	2301      	movs	r3, #1
 8001938:	465a      	mov	r2, fp
 800193a:	4631      	mov	r1, r6
 800193c:	4628      	mov	r0, r5
 800193e:	47b8      	blx	r7
 8001940:	3001      	adds	r0, #1
 8001942:	f43f ae56 	beq.w	80015f2 <_printf_float+0xb6>
 8001946:	f108 0801 	add.w	r8, r8, #1
 800194a:	45d0      	cmp	r8, sl
 800194c:	dbf3      	blt.n	8001936 <_printf_float+0x3fa>
 800194e:	464b      	mov	r3, r9
 8001950:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001954:	e6df      	b.n	8001716 <_printf_float+0x1da>
 8001956:	f04f 0800 	mov.w	r8, #0
 800195a:	f104 0b1a 	add.w	fp, r4, #26
 800195e:	e7f4      	b.n	800194a <_printf_float+0x40e>
 8001960:	2301      	movs	r3, #1
 8001962:	4642      	mov	r2, r8
 8001964:	e7e1      	b.n	800192a <_printf_float+0x3ee>
 8001966:	2301      	movs	r3, #1
 8001968:	464a      	mov	r2, r9
 800196a:	4631      	mov	r1, r6
 800196c:	4628      	mov	r0, r5
 800196e:	47b8      	blx	r7
 8001970:	3001      	adds	r0, #1
 8001972:	f43f ae3e 	beq.w	80015f2 <_printf_float+0xb6>
 8001976:	f108 0801 	add.w	r8, r8, #1
 800197a:	68e3      	ldr	r3, [r4, #12]
 800197c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800197e:	1a5b      	subs	r3, r3, r1
 8001980:	4543      	cmp	r3, r8
 8001982:	dcf0      	bgt.n	8001966 <_printf_float+0x42a>
 8001984:	e6fc      	b.n	8001780 <_printf_float+0x244>
 8001986:	f04f 0800 	mov.w	r8, #0
 800198a:	f104 0919 	add.w	r9, r4, #25
 800198e:	e7f4      	b.n	800197a <_printf_float+0x43e>

08001990 <malloc>:
 8001990:	4b02      	ldr	r3, [pc, #8]	@ (800199c <malloc+0xc>)
 8001992:	4601      	mov	r1, r0
 8001994:	6818      	ldr	r0, [r3, #0]
 8001996:	f000 b825 	b.w	80019e4 <_malloc_r>
 800199a:	bf00      	nop
 800199c:	20000034 	.word	0x20000034

080019a0 <sbrk_aligned>:
 80019a0:	b570      	push	{r4, r5, r6, lr}
 80019a2:	4e0f      	ldr	r6, [pc, #60]	@ (80019e0 <sbrk_aligned+0x40>)
 80019a4:	460c      	mov	r4, r1
 80019a6:	6831      	ldr	r1, [r6, #0]
 80019a8:	4605      	mov	r5, r0
 80019aa:	b911      	cbnz	r1, 80019b2 <sbrk_aligned+0x12>
 80019ac:	f000 fb1e 	bl	8001fec <_sbrk_r>
 80019b0:	6030      	str	r0, [r6, #0]
 80019b2:	4621      	mov	r1, r4
 80019b4:	4628      	mov	r0, r5
 80019b6:	f000 fb19 	bl	8001fec <_sbrk_r>
 80019ba:	1c43      	adds	r3, r0, #1
 80019bc:	d103      	bne.n	80019c6 <sbrk_aligned+0x26>
 80019be:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 80019c2:	4620      	mov	r0, r4
 80019c4:	bd70      	pop	{r4, r5, r6, pc}
 80019c6:	1cc4      	adds	r4, r0, #3
 80019c8:	f024 0403 	bic.w	r4, r4, #3
 80019cc:	42a0      	cmp	r0, r4
 80019ce:	d0f8      	beq.n	80019c2 <sbrk_aligned+0x22>
 80019d0:	1a21      	subs	r1, r4, r0
 80019d2:	4628      	mov	r0, r5
 80019d4:	f000 fb0a 	bl	8001fec <_sbrk_r>
 80019d8:	3001      	adds	r0, #1
 80019da:	d1f2      	bne.n	80019c2 <sbrk_aligned+0x22>
 80019dc:	e7ef      	b.n	80019be <sbrk_aligned+0x1e>
 80019de:	bf00      	nop
 80019e0:	20000210 	.word	0x20000210

080019e4 <_malloc_r>:
 80019e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80019e8:	1ccd      	adds	r5, r1, #3
 80019ea:	f025 0503 	bic.w	r5, r5, #3
 80019ee:	3508      	adds	r5, #8
 80019f0:	2d0c      	cmp	r5, #12
 80019f2:	bf38      	it	cc
 80019f4:	250c      	movcc	r5, #12
 80019f6:	2d00      	cmp	r5, #0
 80019f8:	4606      	mov	r6, r0
 80019fa:	db01      	blt.n	8001a00 <_malloc_r+0x1c>
 80019fc:	42a9      	cmp	r1, r5
 80019fe:	d904      	bls.n	8001a0a <_malloc_r+0x26>
 8001a00:	230c      	movs	r3, #12
 8001a02:	6033      	str	r3, [r6, #0]
 8001a04:	2000      	movs	r0, #0
 8001a06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a0a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8001ae0 <_malloc_r+0xfc>
 8001a0e:	f000 f9f5 	bl	8001dfc <__malloc_lock>
 8001a12:	f8d8 3000 	ldr.w	r3, [r8]
 8001a16:	461c      	mov	r4, r3
 8001a18:	bb44      	cbnz	r4, 8001a6c <_malloc_r+0x88>
 8001a1a:	4629      	mov	r1, r5
 8001a1c:	4630      	mov	r0, r6
 8001a1e:	f7ff ffbf 	bl	80019a0 <sbrk_aligned>
 8001a22:	1c43      	adds	r3, r0, #1
 8001a24:	4604      	mov	r4, r0
 8001a26:	d158      	bne.n	8001ada <_malloc_r+0xf6>
 8001a28:	f8d8 4000 	ldr.w	r4, [r8]
 8001a2c:	4627      	mov	r7, r4
 8001a2e:	2f00      	cmp	r7, #0
 8001a30:	d143      	bne.n	8001aba <_malloc_r+0xd6>
 8001a32:	2c00      	cmp	r4, #0
 8001a34:	d04b      	beq.n	8001ace <_malloc_r+0xea>
 8001a36:	6823      	ldr	r3, [r4, #0]
 8001a38:	4639      	mov	r1, r7
 8001a3a:	4630      	mov	r0, r6
 8001a3c:	eb04 0903 	add.w	r9, r4, r3
 8001a40:	f000 fad4 	bl	8001fec <_sbrk_r>
 8001a44:	4581      	cmp	r9, r0
 8001a46:	d142      	bne.n	8001ace <_malloc_r+0xea>
 8001a48:	6821      	ldr	r1, [r4, #0]
 8001a4a:	1a6d      	subs	r5, r5, r1
 8001a4c:	4629      	mov	r1, r5
 8001a4e:	4630      	mov	r0, r6
 8001a50:	f7ff ffa6 	bl	80019a0 <sbrk_aligned>
 8001a54:	3001      	adds	r0, #1
 8001a56:	d03a      	beq.n	8001ace <_malloc_r+0xea>
 8001a58:	6823      	ldr	r3, [r4, #0]
 8001a5a:	442b      	add	r3, r5
 8001a5c:	6023      	str	r3, [r4, #0]
 8001a5e:	f8d8 3000 	ldr.w	r3, [r8]
 8001a62:	685a      	ldr	r2, [r3, #4]
 8001a64:	bb62      	cbnz	r2, 8001ac0 <_malloc_r+0xdc>
 8001a66:	f8c8 7000 	str.w	r7, [r8]
 8001a6a:	e00f      	b.n	8001a8c <_malloc_r+0xa8>
 8001a6c:	6822      	ldr	r2, [r4, #0]
 8001a6e:	1b52      	subs	r2, r2, r5
 8001a70:	d420      	bmi.n	8001ab4 <_malloc_r+0xd0>
 8001a72:	2a0b      	cmp	r2, #11
 8001a74:	d917      	bls.n	8001aa6 <_malloc_r+0xc2>
 8001a76:	1961      	adds	r1, r4, r5
 8001a78:	42a3      	cmp	r3, r4
 8001a7a:	6025      	str	r5, [r4, #0]
 8001a7c:	bf18      	it	ne
 8001a7e:	6059      	strne	r1, [r3, #4]
 8001a80:	6863      	ldr	r3, [r4, #4]
 8001a82:	bf08      	it	eq
 8001a84:	f8c8 1000 	streq.w	r1, [r8]
 8001a88:	5162      	str	r2, [r4, r5]
 8001a8a:	604b      	str	r3, [r1, #4]
 8001a8c:	4630      	mov	r0, r6
 8001a8e:	f000 f9bb 	bl	8001e08 <__malloc_unlock>
 8001a92:	f104 000b 	add.w	r0, r4, #11
 8001a96:	1d23      	adds	r3, r4, #4
 8001a98:	f020 0007 	bic.w	r0, r0, #7
 8001a9c:	1ac2      	subs	r2, r0, r3
 8001a9e:	bf1c      	itt	ne
 8001aa0:	1a1b      	subne	r3, r3, r0
 8001aa2:	50a3      	strne	r3, [r4, r2]
 8001aa4:	e7af      	b.n	8001a06 <_malloc_r+0x22>
 8001aa6:	6862      	ldr	r2, [r4, #4]
 8001aa8:	42a3      	cmp	r3, r4
 8001aaa:	bf0c      	ite	eq
 8001aac:	f8c8 2000 	streq.w	r2, [r8]
 8001ab0:	605a      	strne	r2, [r3, #4]
 8001ab2:	e7eb      	b.n	8001a8c <_malloc_r+0xa8>
 8001ab4:	4623      	mov	r3, r4
 8001ab6:	6864      	ldr	r4, [r4, #4]
 8001ab8:	e7ae      	b.n	8001a18 <_malloc_r+0x34>
 8001aba:	463c      	mov	r4, r7
 8001abc:	687f      	ldr	r7, [r7, #4]
 8001abe:	e7b6      	b.n	8001a2e <_malloc_r+0x4a>
 8001ac0:	461a      	mov	r2, r3
 8001ac2:	685b      	ldr	r3, [r3, #4]
 8001ac4:	42a3      	cmp	r3, r4
 8001ac6:	d1fb      	bne.n	8001ac0 <_malloc_r+0xdc>
 8001ac8:	2300      	movs	r3, #0
 8001aca:	6053      	str	r3, [r2, #4]
 8001acc:	e7de      	b.n	8001a8c <_malloc_r+0xa8>
 8001ace:	230c      	movs	r3, #12
 8001ad0:	6033      	str	r3, [r6, #0]
 8001ad2:	4630      	mov	r0, r6
 8001ad4:	f000 f998 	bl	8001e08 <__malloc_unlock>
 8001ad8:	e794      	b.n	8001a04 <_malloc_r+0x20>
 8001ada:	6005      	str	r5, [r0, #0]
 8001adc:	e7d6      	b.n	8001a8c <_malloc_r+0xa8>
 8001ade:	bf00      	nop
 8001ae0:	20000214 	.word	0x20000214

08001ae4 <_printf_common>:
 8001ae4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001ae8:	4616      	mov	r6, r2
 8001aea:	4698      	mov	r8, r3
 8001aec:	688a      	ldr	r2, [r1, #8]
 8001aee:	690b      	ldr	r3, [r1, #16]
 8001af0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001af4:	4293      	cmp	r3, r2
 8001af6:	bfb8      	it	lt
 8001af8:	4613      	movlt	r3, r2
 8001afa:	6033      	str	r3, [r6, #0]
 8001afc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001b00:	4607      	mov	r7, r0
 8001b02:	460c      	mov	r4, r1
 8001b04:	b10a      	cbz	r2, 8001b0a <_printf_common+0x26>
 8001b06:	3301      	adds	r3, #1
 8001b08:	6033      	str	r3, [r6, #0]
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	0699      	lsls	r1, r3, #26
 8001b0e:	bf42      	ittt	mi
 8001b10:	6833      	ldrmi	r3, [r6, #0]
 8001b12:	3302      	addmi	r3, #2
 8001b14:	6033      	strmi	r3, [r6, #0]
 8001b16:	6825      	ldr	r5, [r4, #0]
 8001b18:	f015 0506 	ands.w	r5, r5, #6
 8001b1c:	d106      	bne.n	8001b2c <_printf_common+0x48>
 8001b1e:	f104 0a19 	add.w	sl, r4, #25
 8001b22:	68e3      	ldr	r3, [r4, #12]
 8001b24:	6832      	ldr	r2, [r6, #0]
 8001b26:	1a9b      	subs	r3, r3, r2
 8001b28:	42ab      	cmp	r3, r5
 8001b2a:	dc26      	bgt.n	8001b7a <_printf_common+0x96>
 8001b2c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001b30:	6822      	ldr	r2, [r4, #0]
 8001b32:	3b00      	subs	r3, #0
 8001b34:	bf18      	it	ne
 8001b36:	2301      	movne	r3, #1
 8001b38:	0692      	lsls	r2, r2, #26
 8001b3a:	d42b      	bmi.n	8001b94 <_printf_common+0xb0>
 8001b3c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001b40:	4641      	mov	r1, r8
 8001b42:	4638      	mov	r0, r7
 8001b44:	47c8      	blx	r9
 8001b46:	3001      	adds	r0, #1
 8001b48:	d01e      	beq.n	8001b88 <_printf_common+0xa4>
 8001b4a:	6823      	ldr	r3, [r4, #0]
 8001b4c:	6922      	ldr	r2, [r4, #16]
 8001b4e:	f003 0306 	and.w	r3, r3, #6
 8001b52:	2b04      	cmp	r3, #4
 8001b54:	bf02      	ittt	eq
 8001b56:	68e5      	ldreq	r5, [r4, #12]
 8001b58:	6833      	ldreq	r3, [r6, #0]
 8001b5a:	1aed      	subeq	r5, r5, r3
 8001b5c:	68a3      	ldr	r3, [r4, #8]
 8001b5e:	bf0c      	ite	eq
 8001b60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001b64:	2500      	movne	r5, #0
 8001b66:	4293      	cmp	r3, r2
 8001b68:	bfc4      	itt	gt
 8001b6a:	1a9b      	subgt	r3, r3, r2
 8001b6c:	18ed      	addgt	r5, r5, r3
 8001b6e:	2600      	movs	r6, #0
 8001b70:	341a      	adds	r4, #26
 8001b72:	42b5      	cmp	r5, r6
 8001b74:	d11a      	bne.n	8001bac <_printf_common+0xc8>
 8001b76:	2000      	movs	r0, #0
 8001b78:	e008      	b.n	8001b8c <_printf_common+0xa8>
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	4652      	mov	r2, sl
 8001b7e:	4641      	mov	r1, r8
 8001b80:	4638      	mov	r0, r7
 8001b82:	47c8      	blx	r9
 8001b84:	3001      	adds	r0, #1
 8001b86:	d103      	bne.n	8001b90 <_printf_common+0xac>
 8001b88:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001b8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b90:	3501      	adds	r5, #1
 8001b92:	e7c6      	b.n	8001b22 <_printf_common+0x3e>
 8001b94:	18e1      	adds	r1, r4, r3
 8001b96:	1c5a      	adds	r2, r3, #1
 8001b98:	2030      	movs	r0, #48	@ 0x30
 8001b9a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001b9e:	4422      	add	r2, r4
 8001ba0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001ba4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001ba8:	3302      	adds	r3, #2
 8001baa:	e7c7      	b.n	8001b3c <_printf_common+0x58>
 8001bac:	2301      	movs	r3, #1
 8001bae:	4622      	mov	r2, r4
 8001bb0:	4641      	mov	r1, r8
 8001bb2:	4638      	mov	r0, r7
 8001bb4:	47c8      	blx	r9
 8001bb6:	3001      	adds	r0, #1
 8001bb8:	d0e6      	beq.n	8001b88 <_printf_common+0xa4>
 8001bba:	3601      	adds	r6, #1
 8001bbc:	e7d9      	b.n	8001b72 <_printf_common+0x8e>
	...

08001bc0 <_printf_i>:
 8001bc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001bc4:	7e0f      	ldrb	r7, [r1, #24]
 8001bc6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001bc8:	2f78      	cmp	r7, #120	@ 0x78
 8001bca:	4691      	mov	r9, r2
 8001bcc:	4680      	mov	r8, r0
 8001bce:	460c      	mov	r4, r1
 8001bd0:	469a      	mov	sl, r3
 8001bd2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001bd6:	d807      	bhi.n	8001be8 <_printf_i+0x28>
 8001bd8:	2f62      	cmp	r7, #98	@ 0x62
 8001bda:	d80a      	bhi.n	8001bf2 <_printf_i+0x32>
 8001bdc:	2f00      	cmp	r7, #0
 8001bde:	f000 80d1 	beq.w	8001d84 <_printf_i+0x1c4>
 8001be2:	2f58      	cmp	r7, #88	@ 0x58
 8001be4:	f000 80b8 	beq.w	8001d58 <_printf_i+0x198>
 8001be8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001bec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001bf0:	e03a      	b.n	8001c68 <_printf_i+0xa8>
 8001bf2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001bf6:	2b15      	cmp	r3, #21
 8001bf8:	d8f6      	bhi.n	8001be8 <_printf_i+0x28>
 8001bfa:	a101      	add	r1, pc, #4	@ (adr r1, 8001c00 <_printf_i+0x40>)
 8001bfc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001c00:	08001c59 	.word	0x08001c59
 8001c04:	08001c6d 	.word	0x08001c6d
 8001c08:	08001be9 	.word	0x08001be9
 8001c0c:	08001be9 	.word	0x08001be9
 8001c10:	08001be9 	.word	0x08001be9
 8001c14:	08001be9 	.word	0x08001be9
 8001c18:	08001c6d 	.word	0x08001c6d
 8001c1c:	08001be9 	.word	0x08001be9
 8001c20:	08001be9 	.word	0x08001be9
 8001c24:	08001be9 	.word	0x08001be9
 8001c28:	08001be9 	.word	0x08001be9
 8001c2c:	08001d6b 	.word	0x08001d6b
 8001c30:	08001c97 	.word	0x08001c97
 8001c34:	08001d25 	.word	0x08001d25
 8001c38:	08001be9 	.word	0x08001be9
 8001c3c:	08001be9 	.word	0x08001be9
 8001c40:	08001d8d 	.word	0x08001d8d
 8001c44:	08001be9 	.word	0x08001be9
 8001c48:	08001c97 	.word	0x08001c97
 8001c4c:	08001be9 	.word	0x08001be9
 8001c50:	08001be9 	.word	0x08001be9
 8001c54:	08001d2d 	.word	0x08001d2d
 8001c58:	6833      	ldr	r3, [r6, #0]
 8001c5a:	1d1a      	adds	r2, r3, #4
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	6032      	str	r2, [r6, #0]
 8001c60:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001c64:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001c68:	2301      	movs	r3, #1
 8001c6a:	e09c      	b.n	8001da6 <_printf_i+0x1e6>
 8001c6c:	6833      	ldr	r3, [r6, #0]
 8001c6e:	6820      	ldr	r0, [r4, #0]
 8001c70:	1d19      	adds	r1, r3, #4
 8001c72:	6031      	str	r1, [r6, #0]
 8001c74:	0606      	lsls	r6, r0, #24
 8001c76:	d501      	bpl.n	8001c7c <_printf_i+0xbc>
 8001c78:	681d      	ldr	r5, [r3, #0]
 8001c7a:	e003      	b.n	8001c84 <_printf_i+0xc4>
 8001c7c:	0645      	lsls	r5, r0, #25
 8001c7e:	d5fb      	bpl.n	8001c78 <_printf_i+0xb8>
 8001c80:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001c84:	2d00      	cmp	r5, #0
 8001c86:	da03      	bge.n	8001c90 <_printf_i+0xd0>
 8001c88:	232d      	movs	r3, #45	@ 0x2d
 8001c8a:	426d      	negs	r5, r5
 8001c8c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c90:	4858      	ldr	r0, [pc, #352]	@ (8001df4 <_printf_i+0x234>)
 8001c92:	230a      	movs	r3, #10
 8001c94:	e011      	b.n	8001cba <_printf_i+0xfa>
 8001c96:	6821      	ldr	r1, [r4, #0]
 8001c98:	6833      	ldr	r3, [r6, #0]
 8001c9a:	0608      	lsls	r0, r1, #24
 8001c9c:	f853 5b04 	ldr.w	r5, [r3], #4
 8001ca0:	d402      	bmi.n	8001ca8 <_printf_i+0xe8>
 8001ca2:	0649      	lsls	r1, r1, #25
 8001ca4:	bf48      	it	mi
 8001ca6:	b2ad      	uxthmi	r5, r5
 8001ca8:	2f6f      	cmp	r7, #111	@ 0x6f
 8001caa:	4852      	ldr	r0, [pc, #328]	@ (8001df4 <_printf_i+0x234>)
 8001cac:	6033      	str	r3, [r6, #0]
 8001cae:	bf14      	ite	ne
 8001cb0:	230a      	movne	r3, #10
 8001cb2:	2308      	moveq	r3, #8
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001cba:	6866      	ldr	r6, [r4, #4]
 8001cbc:	60a6      	str	r6, [r4, #8]
 8001cbe:	2e00      	cmp	r6, #0
 8001cc0:	db05      	blt.n	8001cce <_printf_i+0x10e>
 8001cc2:	6821      	ldr	r1, [r4, #0]
 8001cc4:	432e      	orrs	r6, r5
 8001cc6:	f021 0104 	bic.w	r1, r1, #4
 8001cca:	6021      	str	r1, [r4, #0]
 8001ccc:	d04b      	beq.n	8001d66 <_printf_i+0x1a6>
 8001cce:	4616      	mov	r6, r2
 8001cd0:	fbb5 f1f3 	udiv	r1, r5, r3
 8001cd4:	fb03 5711 	mls	r7, r3, r1, r5
 8001cd8:	5dc7      	ldrb	r7, [r0, r7]
 8001cda:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001cde:	462f      	mov	r7, r5
 8001ce0:	42bb      	cmp	r3, r7
 8001ce2:	460d      	mov	r5, r1
 8001ce4:	d9f4      	bls.n	8001cd0 <_printf_i+0x110>
 8001ce6:	2b08      	cmp	r3, #8
 8001ce8:	d10b      	bne.n	8001d02 <_printf_i+0x142>
 8001cea:	6823      	ldr	r3, [r4, #0]
 8001cec:	07df      	lsls	r7, r3, #31
 8001cee:	d508      	bpl.n	8001d02 <_printf_i+0x142>
 8001cf0:	6923      	ldr	r3, [r4, #16]
 8001cf2:	6861      	ldr	r1, [r4, #4]
 8001cf4:	4299      	cmp	r1, r3
 8001cf6:	bfde      	ittt	le
 8001cf8:	2330      	movle	r3, #48	@ 0x30
 8001cfa:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001cfe:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001d02:	1b92      	subs	r2, r2, r6
 8001d04:	6122      	str	r2, [r4, #16]
 8001d06:	f8cd a000 	str.w	sl, [sp]
 8001d0a:	464b      	mov	r3, r9
 8001d0c:	aa03      	add	r2, sp, #12
 8001d0e:	4621      	mov	r1, r4
 8001d10:	4640      	mov	r0, r8
 8001d12:	f7ff fee7 	bl	8001ae4 <_printf_common>
 8001d16:	3001      	adds	r0, #1
 8001d18:	d14a      	bne.n	8001db0 <_printf_i+0x1f0>
 8001d1a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001d1e:	b004      	add	sp, #16
 8001d20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001d24:	6823      	ldr	r3, [r4, #0]
 8001d26:	f043 0320 	orr.w	r3, r3, #32
 8001d2a:	6023      	str	r3, [r4, #0]
 8001d2c:	4832      	ldr	r0, [pc, #200]	@ (8001df8 <_printf_i+0x238>)
 8001d2e:	2778      	movs	r7, #120	@ 0x78
 8001d30:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001d34:	6823      	ldr	r3, [r4, #0]
 8001d36:	6831      	ldr	r1, [r6, #0]
 8001d38:	061f      	lsls	r7, r3, #24
 8001d3a:	f851 5b04 	ldr.w	r5, [r1], #4
 8001d3e:	d402      	bmi.n	8001d46 <_printf_i+0x186>
 8001d40:	065f      	lsls	r7, r3, #25
 8001d42:	bf48      	it	mi
 8001d44:	b2ad      	uxthmi	r5, r5
 8001d46:	6031      	str	r1, [r6, #0]
 8001d48:	07d9      	lsls	r1, r3, #31
 8001d4a:	bf44      	itt	mi
 8001d4c:	f043 0320 	orrmi.w	r3, r3, #32
 8001d50:	6023      	strmi	r3, [r4, #0]
 8001d52:	b11d      	cbz	r5, 8001d5c <_printf_i+0x19c>
 8001d54:	2310      	movs	r3, #16
 8001d56:	e7ad      	b.n	8001cb4 <_printf_i+0xf4>
 8001d58:	4826      	ldr	r0, [pc, #152]	@ (8001df4 <_printf_i+0x234>)
 8001d5a:	e7e9      	b.n	8001d30 <_printf_i+0x170>
 8001d5c:	6823      	ldr	r3, [r4, #0]
 8001d5e:	f023 0320 	bic.w	r3, r3, #32
 8001d62:	6023      	str	r3, [r4, #0]
 8001d64:	e7f6      	b.n	8001d54 <_printf_i+0x194>
 8001d66:	4616      	mov	r6, r2
 8001d68:	e7bd      	b.n	8001ce6 <_printf_i+0x126>
 8001d6a:	6833      	ldr	r3, [r6, #0]
 8001d6c:	6825      	ldr	r5, [r4, #0]
 8001d6e:	6961      	ldr	r1, [r4, #20]
 8001d70:	1d18      	adds	r0, r3, #4
 8001d72:	6030      	str	r0, [r6, #0]
 8001d74:	062e      	lsls	r6, r5, #24
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	d501      	bpl.n	8001d7e <_printf_i+0x1be>
 8001d7a:	6019      	str	r1, [r3, #0]
 8001d7c:	e002      	b.n	8001d84 <_printf_i+0x1c4>
 8001d7e:	0668      	lsls	r0, r5, #25
 8001d80:	d5fb      	bpl.n	8001d7a <_printf_i+0x1ba>
 8001d82:	8019      	strh	r1, [r3, #0]
 8001d84:	2300      	movs	r3, #0
 8001d86:	6123      	str	r3, [r4, #16]
 8001d88:	4616      	mov	r6, r2
 8001d8a:	e7bc      	b.n	8001d06 <_printf_i+0x146>
 8001d8c:	6833      	ldr	r3, [r6, #0]
 8001d8e:	1d1a      	adds	r2, r3, #4
 8001d90:	6032      	str	r2, [r6, #0]
 8001d92:	681e      	ldr	r6, [r3, #0]
 8001d94:	6862      	ldr	r2, [r4, #4]
 8001d96:	2100      	movs	r1, #0
 8001d98:	4630      	mov	r0, r6
 8001d9a:	f7fe fa21 	bl	80001e0 <memchr>
 8001d9e:	b108      	cbz	r0, 8001da4 <_printf_i+0x1e4>
 8001da0:	1b80      	subs	r0, r0, r6
 8001da2:	6060      	str	r0, [r4, #4]
 8001da4:	6863      	ldr	r3, [r4, #4]
 8001da6:	6123      	str	r3, [r4, #16]
 8001da8:	2300      	movs	r3, #0
 8001daa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001dae:	e7aa      	b.n	8001d06 <_printf_i+0x146>
 8001db0:	6923      	ldr	r3, [r4, #16]
 8001db2:	4632      	mov	r2, r6
 8001db4:	4649      	mov	r1, r9
 8001db6:	4640      	mov	r0, r8
 8001db8:	47d0      	blx	sl
 8001dba:	3001      	adds	r0, #1
 8001dbc:	d0ad      	beq.n	8001d1a <_printf_i+0x15a>
 8001dbe:	6823      	ldr	r3, [r4, #0]
 8001dc0:	079b      	lsls	r3, r3, #30
 8001dc2:	d413      	bmi.n	8001dec <_printf_i+0x22c>
 8001dc4:	68e0      	ldr	r0, [r4, #12]
 8001dc6:	9b03      	ldr	r3, [sp, #12]
 8001dc8:	4298      	cmp	r0, r3
 8001dca:	bfb8      	it	lt
 8001dcc:	4618      	movlt	r0, r3
 8001dce:	e7a6      	b.n	8001d1e <_printf_i+0x15e>
 8001dd0:	2301      	movs	r3, #1
 8001dd2:	4632      	mov	r2, r6
 8001dd4:	4649      	mov	r1, r9
 8001dd6:	4640      	mov	r0, r8
 8001dd8:	47d0      	blx	sl
 8001dda:	3001      	adds	r0, #1
 8001ddc:	d09d      	beq.n	8001d1a <_printf_i+0x15a>
 8001dde:	3501      	adds	r5, #1
 8001de0:	68e3      	ldr	r3, [r4, #12]
 8001de2:	9903      	ldr	r1, [sp, #12]
 8001de4:	1a5b      	subs	r3, r3, r1
 8001de6:	42ab      	cmp	r3, r5
 8001de8:	dcf2      	bgt.n	8001dd0 <_printf_i+0x210>
 8001dea:	e7eb      	b.n	8001dc4 <_printf_i+0x204>
 8001dec:	2500      	movs	r5, #0
 8001dee:	f104 0619 	add.w	r6, r4, #25
 8001df2:	e7f5      	b.n	8001de0 <_printf_i+0x220>
 8001df4:	08004207 	.word	0x08004207
 8001df8:	08004218 	.word	0x08004218

08001dfc <__malloc_lock>:
 8001dfc:	4801      	ldr	r0, [pc, #4]	@ (8001e04 <__malloc_lock+0x8>)
 8001dfe:	f000 b930 	b.w	8002062 <__retarget_lock_acquire_recursive>
 8001e02:	bf00      	nop
 8001e04:	20000354 	.word	0x20000354

08001e08 <__malloc_unlock>:
 8001e08:	4801      	ldr	r0, [pc, #4]	@ (8001e10 <__malloc_unlock+0x8>)
 8001e0a:	f000 b92b 	b.w	8002064 <__retarget_lock_release_recursive>
 8001e0e:	bf00      	nop
 8001e10:	20000354 	.word	0x20000354

08001e14 <siprintf>:
 8001e14:	b40e      	push	{r1, r2, r3}
 8001e16:	b510      	push	{r4, lr}
 8001e18:	b09d      	sub	sp, #116	@ 0x74
 8001e1a:	ab1f      	add	r3, sp, #124	@ 0x7c
 8001e1c:	9002      	str	r0, [sp, #8]
 8001e1e:	9006      	str	r0, [sp, #24]
 8001e20:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8001e24:	480a      	ldr	r0, [pc, #40]	@ (8001e50 <siprintf+0x3c>)
 8001e26:	9107      	str	r1, [sp, #28]
 8001e28:	9104      	str	r1, [sp, #16]
 8001e2a:	490a      	ldr	r1, [pc, #40]	@ (8001e54 <siprintf+0x40>)
 8001e2c:	f853 2b04 	ldr.w	r2, [r3], #4
 8001e30:	9105      	str	r1, [sp, #20]
 8001e32:	2400      	movs	r4, #0
 8001e34:	a902      	add	r1, sp, #8
 8001e36:	6800      	ldr	r0, [r0, #0]
 8001e38:	9301      	str	r3, [sp, #4]
 8001e3a:	941b      	str	r4, [sp, #108]	@ 0x6c
 8001e3c:	f001 f816 	bl	8002e6c <_svfiprintf_r>
 8001e40:	9b02      	ldr	r3, [sp, #8]
 8001e42:	701c      	strb	r4, [r3, #0]
 8001e44:	b01d      	add	sp, #116	@ 0x74
 8001e46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e4a:	b003      	add	sp, #12
 8001e4c:	4770      	bx	lr
 8001e4e:	bf00      	nop
 8001e50:	20000034 	.word	0x20000034
 8001e54:	ffff0208 	.word	0xffff0208

08001e58 <std>:
 8001e58:	2300      	movs	r3, #0
 8001e5a:	b510      	push	{r4, lr}
 8001e5c:	4604      	mov	r4, r0
 8001e5e:	e9c0 3300 	strd	r3, r3, [r0]
 8001e62:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001e66:	6083      	str	r3, [r0, #8]
 8001e68:	8181      	strh	r1, [r0, #12]
 8001e6a:	6643      	str	r3, [r0, #100]	@ 0x64
 8001e6c:	81c2      	strh	r2, [r0, #14]
 8001e6e:	6183      	str	r3, [r0, #24]
 8001e70:	4619      	mov	r1, r3
 8001e72:	2208      	movs	r2, #8
 8001e74:	305c      	adds	r0, #92	@ 0x5c
 8001e76:	f000 f8b1 	bl	8001fdc <memset>
 8001e7a:	4b0d      	ldr	r3, [pc, #52]	@ (8001eb0 <std+0x58>)
 8001e7c:	6263      	str	r3, [r4, #36]	@ 0x24
 8001e7e:	4b0d      	ldr	r3, [pc, #52]	@ (8001eb4 <std+0x5c>)
 8001e80:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001e82:	4b0d      	ldr	r3, [pc, #52]	@ (8001eb8 <std+0x60>)
 8001e84:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001e86:	4b0d      	ldr	r3, [pc, #52]	@ (8001ebc <std+0x64>)
 8001e88:	6323      	str	r3, [r4, #48]	@ 0x30
 8001e8a:	4b0d      	ldr	r3, [pc, #52]	@ (8001ec0 <std+0x68>)
 8001e8c:	6224      	str	r4, [r4, #32]
 8001e8e:	429c      	cmp	r4, r3
 8001e90:	d006      	beq.n	8001ea0 <std+0x48>
 8001e92:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001e96:	4294      	cmp	r4, r2
 8001e98:	d002      	beq.n	8001ea0 <std+0x48>
 8001e9a:	33d0      	adds	r3, #208	@ 0xd0
 8001e9c:	429c      	cmp	r4, r3
 8001e9e:	d105      	bne.n	8001eac <std+0x54>
 8001ea0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ea8:	f000 b8da 	b.w	8002060 <__retarget_lock_init_recursive>
 8001eac:	bd10      	pop	{r4, pc}
 8001eae:	bf00      	nop
 8001eb0:	080038b1 	.word	0x080038b1
 8001eb4:	080038d3 	.word	0x080038d3
 8001eb8:	0800390b 	.word	0x0800390b
 8001ebc:	0800392f 	.word	0x0800392f
 8001ec0:	20000218 	.word	0x20000218

08001ec4 <stdio_exit_handler>:
 8001ec4:	4a02      	ldr	r2, [pc, #8]	@ (8001ed0 <stdio_exit_handler+0xc>)
 8001ec6:	4903      	ldr	r1, [pc, #12]	@ (8001ed4 <stdio_exit_handler+0x10>)
 8001ec8:	4803      	ldr	r0, [pc, #12]	@ (8001ed8 <stdio_exit_handler+0x14>)
 8001eca:	f000 b869 	b.w	8001fa0 <_fwalk_sglue>
 8001ece:	bf00      	nop
 8001ed0:	20000028 	.word	0x20000028
 8001ed4:	0800316d 	.word	0x0800316d
 8001ed8:	20000038 	.word	0x20000038

08001edc <cleanup_stdio>:
 8001edc:	6841      	ldr	r1, [r0, #4]
 8001ede:	4b0c      	ldr	r3, [pc, #48]	@ (8001f10 <cleanup_stdio+0x34>)
 8001ee0:	4299      	cmp	r1, r3
 8001ee2:	b510      	push	{r4, lr}
 8001ee4:	4604      	mov	r4, r0
 8001ee6:	d001      	beq.n	8001eec <cleanup_stdio+0x10>
 8001ee8:	f001 f940 	bl	800316c <_fflush_r>
 8001eec:	68a1      	ldr	r1, [r4, #8]
 8001eee:	4b09      	ldr	r3, [pc, #36]	@ (8001f14 <cleanup_stdio+0x38>)
 8001ef0:	4299      	cmp	r1, r3
 8001ef2:	d002      	beq.n	8001efa <cleanup_stdio+0x1e>
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	f001 f939 	bl	800316c <_fflush_r>
 8001efa:	68e1      	ldr	r1, [r4, #12]
 8001efc:	4b06      	ldr	r3, [pc, #24]	@ (8001f18 <cleanup_stdio+0x3c>)
 8001efe:	4299      	cmp	r1, r3
 8001f00:	d004      	beq.n	8001f0c <cleanup_stdio+0x30>
 8001f02:	4620      	mov	r0, r4
 8001f04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f08:	f001 b930 	b.w	800316c <_fflush_r>
 8001f0c:	bd10      	pop	{r4, pc}
 8001f0e:	bf00      	nop
 8001f10:	20000218 	.word	0x20000218
 8001f14:	20000280 	.word	0x20000280
 8001f18:	200002e8 	.word	0x200002e8

08001f1c <global_stdio_init.part.0>:
 8001f1c:	b510      	push	{r4, lr}
 8001f1e:	4b0b      	ldr	r3, [pc, #44]	@ (8001f4c <global_stdio_init.part.0+0x30>)
 8001f20:	4c0b      	ldr	r4, [pc, #44]	@ (8001f50 <global_stdio_init.part.0+0x34>)
 8001f22:	4a0c      	ldr	r2, [pc, #48]	@ (8001f54 <global_stdio_init.part.0+0x38>)
 8001f24:	601a      	str	r2, [r3, #0]
 8001f26:	4620      	mov	r0, r4
 8001f28:	2200      	movs	r2, #0
 8001f2a:	2104      	movs	r1, #4
 8001f2c:	f7ff ff94 	bl	8001e58 <std>
 8001f30:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8001f34:	2201      	movs	r2, #1
 8001f36:	2109      	movs	r1, #9
 8001f38:	f7ff ff8e 	bl	8001e58 <std>
 8001f3c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8001f40:	2202      	movs	r2, #2
 8001f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f46:	2112      	movs	r1, #18
 8001f48:	f7ff bf86 	b.w	8001e58 <std>
 8001f4c:	20000350 	.word	0x20000350
 8001f50:	20000218 	.word	0x20000218
 8001f54:	08001ec5 	.word	0x08001ec5

08001f58 <__sfp_lock_acquire>:
 8001f58:	4801      	ldr	r0, [pc, #4]	@ (8001f60 <__sfp_lock_acquire+0x8>)
 8001f5a:	f000 b882 	b.w	8002062 <__retarget_lock_acquire_recursive>
 8001f5e:	bf00      	nop
 8001f60:	20000355 	.word	0x20000355

08001f64 <__sfp_lock_release>:
 8001f64:	4801      	ldr	r0, [pc, #4]	@ (8001f6c <__sfp_lock_release+0x8>)
 8001f66:	f000 b87d 	b.w	8002064 <__retarget_lock_release_recursive>
 8001f6a:	bf00      	nop
 8001f6c:	20000355 	.word	0x20000355

08001f70 <__sinit>:
 8001f70:	b510      	push	{r4, lr}
 8001f72:	4604      	mov	r4, r0
 8001f74:	f7ff fff0 	bl	8001f58 <__sfp_lock_acquire>
 8001f78:	6a23      	ldr	r3, [r4, #32]
 8001f7a:	b11b      	cbz	r3, 8001f84 <__sinit+0x14>
 8001f7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f80:	f7ff bff0 	b.w	8001f64 <__sfp_lock_release>
 8001f84:	4b04      	ldr	r3, [pc, #16]	@ (8001f98 <__sinit+0x28>)
 8001f86:	6223      	str	r3, [r4, #32]
 8001f88:	4b04      	ldr	r3, [pc, #16]	@ (8001f9c <__sinit+0x2c>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d1f5      	bne.n	8001f7c <__sinit+0xc>
 8001f90:	f7ff ffc4 	bl	8001f1c <global_stdio_init.part.0>
 8001f94:	e7f2      	b.n	8001f7c <__sinit+0xc>
 8001f96:	bf00      	nop
 8001f98:	08001edd 	.word	0x08001edd
 8001f9c:	20000350 	.word	0x20000350

08001fa0 <_fwalk_sglue>:
 8001fa0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001fa4:	4607      	mov	r7, r0
 8001fa6:	4688      	mov	r8, r1
 8001fa8:	4614      	mov	r4, r2
 8001faa:	2600      	movs	r6, #0
 8001fac:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001fb0:	f1b9 0901 	subs.w	r9, r9, #1
 8001fb4:	d505      	bpl.n	8001fc2 <_fwalk_sglue+0x22>
 8001fb6:	6824      	ldr	r4, [r4, #0]
 8001fb8:	2c00      	cmp	r4, #0
 8001fba:	d1f7      	bne.n	8001fac <_fwalk_sglue+0xc>
 8001fbc:	4630      	mov	r0, r6
 8001fbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001fc2:	89ab      	ldrh	r3, [r5, #12]
 8001fc4:	2b01      	cmp	r3, #1
 8001fc6:	d907      	bls.n	8001fd8 <_fwalk_sglue+0x38>
 8001fc8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001fcc:	3301      	adds	r3, #1
 8001fce:	d003      	beq.n	8001fd8 <_fwalk_sglue+0x38>
 8001fd0:	4629      	mov	r1, r5
 8001fd2:	4638      	mov	r0, r7
 8001fd4:	47c0      	blx	r8
 8001fd6:	4306      	orrs	r6, r0
 8001fd8:	3568      	adds	r5, #104	@ 0x68
 8001fda:	e7e9      	b.n	8001fb0 <_fwalk_sglue+0x10>

08001fdc <memset>:
 8001fdc:	4402      	add	r2, r0
 8001fde:	4603      	mov	r3, r0
 8001fe0:	4293      	cmp	r3, r2
 8001fe2:	d100      	bne.n	8001fe6 <memset+0xa>
 8001fe4:	4770      	bx	lr
 8001fe6:	f803 1b01 	strb.w	r1, [r3], #1
 8001fea:	e7f9      	b.n	8001fe0 <memset+0x4>

08001fec <_sbrk_r>:
 8001fec:	b538      	push	{r3, r4, r5, lr}
 8001fee:	4d06      	ldr	r5, [pc, #24]	@ (8002008 <_sbrk_r+0x1c>)
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	4604      	mov	r4, r0
 8001ff4:	4608      	mov	r0, r1
 8001ff6:	602b      	str	r3, [r5, #0]
 8001ff8:	f7ff f9a2 	bl	8001340 <_sbrk>
 8001ffc:	1c43      	adds	r3, r0, #1
 8001ffe:	d102      	bne.n	8002006 <_sbrk_r+0x1a>
 8002000:	682b      	ldr	r3, [r5, #0]
 8002002:	b103      	cbz	r3, 8002006 <_sbrk_r+0x1a>
 8002004:	6023      	str	r3, [r4, #0]
 8002006:	bd38      	pop	{r3, r4, r5, pc}
 8002008:	20000358 	.word	0x20000358

0800200c <__errno>:
 800200c:	4b01      	ldr	r3, [pc, #4]	@ (8002014 <__errno+0x8>)
 800200e:	6818      	ldr	r0, [r3, #0]
 8002010:	4770      	bx	lr
 8002012:	bf00      	nop
 8002014:	20000034 	.word	0x20000034

08002018 <__libc_init_array>:
 8002018:	b570      	push	{r4, r5, r6, lr}
 800201a:	4d0d      	ldr	r5, [pc, #52]	@ (8002050 <__libc_init_array+0x38>)
 800201c:	4c0d      	ldr	r4, [pc, #52]	@ (8002054 <__libc_init_array+0x3c>)
 800201e:	1b64      	subs	r4, r4, r5
 8002020:	10a4      	asrs	r4, r4, #2
 8002022:	2600      	movs	r6, #0
 8002024:	42a6      	cmp	r6, r4
 8002026:	d109      	bne.n	800203c <__libc_init_array+0x24>
 8002028:	4d0b      	ldr	r5, [pc, #44]	@ (8002058 <__libc_init_array+0x40>)
 800202a:	4c0c      	ldr	r4, [pc, #48]	@ (800205c <__libc_init_array+0x44>)
 800202c:	f002 f830 	bl	8004090 <_init>
 8002030:	1b64      	subs	r4, r4, r5
 8002032:	10a4      	asrs	r4, r4, #2
 8002034:	2600      	movs	r6, #0
 8002036:	42a6      	cmp	r6, r4
 8002038:	d105      	bne.n	8002046 <__libc_init_array+0x2e>
 800203a:	bd70      	pop	{r4, r5, r6, pc}
 800203c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002040:	4798      	blx	r3
 8002042:	3601      	adds	r6, #1
 8002044:	e7ee      	b.n	8002024 <__libc_init_array+0xc>
 8002046:	f855 3b04 	ldr.w	r3, [r5], #4
 800204a:	4798      	blx	r3
 800204c:	3601      	adds	r6, #1
 800204e:	e7f2      	b.n	8002036 <__libc_init_array+0x1e>
 8002050:	08004574 	.word	0x08004574
 8002054:	08004574 	.word	0x08004574
 8002058:	08004574 	.word	0x08004574
 800205c:	08004578 	.word	0x08004578

08002060 <__retarget_lock_init_recursive>:
 8002060:	4770      	bx	lr

08002062 <__retarget_lock_acquire_recursive>:
 8002062:	4770      	bx	lr

08002064 <__retarget_lock_release_recursive>:
 8002064:	4770      	bx	lr
	...

08002068 <_localeconv_r>:
 8002068:	4800      	ldr	r0, [pc, #0]	@ (800206c <_localeconv_r+0x4>)
 800206a:	4770      	bx	lr
 800206c:	20000174 	.word	0x20000174

08002070 <quorem>:
 8002070:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002074:	6903      	ldr	r3, [r0, #16]
 8002076:	690c      	ldr	r4, [r1, #16]
 8002078:	42a3      	cmp	r3, r4
 800207a:	4607      	mov	r7, r0
 800207c:	db7e      	blt.n	800217c <quorem+0x10c>
 800207e:	3c01      	subs	r4, #1
 8002080:	f101 0814 	add.w	r8, r1, #20
 8002084:	00a3      	lsls	r3, r4, #2
 8002086:	f100 0514 	add.w	r5, r0, #20
 800208a:	9300      	str	r3, [sp, #0]
 800208c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002090:	9301      	str	r3, [sp, #4]
 8002092:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002096:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800209a:	3301      	adds	r3, #1
 800209c:	429a      	cmp	r2, r3
 800209e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80020a2:	fbb2 f6f3 	udiv	r6, r2, r3
 80020a6:	d32e      	bcc.n	8002106 <quorem+0x96>
 80020a8:	f04f 0a00 	mov.w	sl, #0
 80020ac:	46c4      	mov	ip, r8
 80020ae:	46ae      	mov	lr, r5
 80020b0:	46d3      	mov	fp, sl
 80020b2:	f85c 3b04 	ldr.w	r3, [ip], #4
 80020b6:	b298      	uxth	r0, r3
 80020b8:	fb06 a000 	mla	r0, r6, r0, sl
 80020bc:	0c02      	lsrs	r2, r0, #16
 80020be:	0c1b      	lsrs	r3, r3, #16
 80020c0:	fb06 2303 	mla	r3, r6, r3, r2
 80020c4:	f8de 2000 	ldr.w	r2, [lr]
 80020c8:	b280      	uxth	r0, r0
 80020ca:	b292      	uxth	r2, r2
 80020cc:	1a12      	subs	r2, r2, r0
 80020ce:	445a      	add	r2, fp
 80020d0:	f8de 0000 	ldr.w	r0, [lr]
 80020d4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80020d8:	b29b      	uxth	r3, r3
 80020da:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80020de:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80020e2:	b292      	uxth	r2, r2
 80020e4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80020e8:	45e1      	cmp	r9, ip
 80020ea:	f84e 2b04 	str.w	r2, [lr], #4
 80020ee:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80020f2:	d2de      	bcs.n	80020b2 <quorem+0x42>
 80020f4:	9b00      	ldr	r3, [sp, #0]
 80020f6:	58eb      	ldr	r3, [r5, r3]
 80020f8:	b92b      	cbnz	r3, 8002106 <quorem+0x96>
 80020fa:	9b01      	ldr	r3, [sp, #4]
 80020fc:	3b04      	subs	r3, #4
 80020fe:	429d      	cmp	r5, r3
 8002100:	461a      	mov	r2, r3
 8002102:	d32f      	bcc.n	8002164 <quorem+0xf4>
 8002104:	613c      	str	r4, [r7, #16]
 8002106:	4638      	mov	r0, r7
 8002108:	f001 faca 	bl	80036a0 <__mcmp>
 800210c:	2800      	cmp	r0, #0
 800210e:	db25      	blt.n	800215c <quorem+0xec>
 8002110:	4629      	mov	r1, r5
 8002112:	2000      	movs	r0, #0
 8002114:	f858 2b04 	ldr.w	r2, [r8], #4
 8002118:	f8d1 c000 	ldr.w	ip, [r1]
 800211c:	fa1f fe82 	uxth.w	lr, r2
 8002120:	fa1f f38c 	uxth.w	r3, ip
 8002124:	eba3 030e 	sub.w	r3, r3, lr
 8002128:	4403      	add	r3, r0
 800212a:	0c12      	lsrs	r2, r2, #16
 800212c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002130:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002134:	b29b      	uxth	r3, r3
 8002136:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800213a:	45c1      	cmp	r9, r8
 800213c:	f841 3b04 	str.w	r3, [r1], #4
 8002140:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002144:	d2e6      	bcs.n	8002114 <quorem+0xa4>
 8002146:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800214a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800214e:	b922      	cbnz	r2, 800215a <quorem+0xea>
 8002150:	3b04      	subs	r3, #4
 8002152:	429d      	cmp	r5, r3
 8002154:	461a      	mov	r2, r3
 8002156:	d30b      	bcc.n	8002170 <quorem+0x100>
 8002158:	613c      	str	r4, [r7, #16]
 800215a:	3601      	adds	r6, #1
 800215c:	4630      	mov	r0, r6
 800215e:	b003      	add	sp, #12
 8002160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002164:	6812      	ldr	r2, [r2, #0]
 8002166:	3b04      	subs	r3, #4
 8002168:	2a00      	cmp	r2, #0
 800216a:	d1cb      	bne.n	8002104 <quorem+0x94>
 800216c:	3c01      	subs	r4, #1
 800216e:	e7c6      	b.n	80020fe <quorem+0x8e>
 8002170:	6812      	ldr	r2, [r2, #0]
 8002172:	3b04      	subs	r3, #4
 8002174:	2a00      	cmp	r2, #0
 8002176:	d1ef      	bne.n	8002158 <quorem+0xe8>
 8002178:	3c01      	subs	r4, #1
 800217a:	e7ea      	b.n	8002152 <quorem+0xe2>
 800217c:	2000      	movs	r0, #0
 800217e:	e7ee      	b.n	800215e <quorem+0xee>

08002180 <_dtoa_r>:
 8002180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002184:	69c7      	ldr	r7, [r0, #28]
 8002186:	b097      	sub	sp, #92	@ 0x5c
 8002188:	ed8d 0b04 	vstr	d0, [sp, #16]
 800218c:	ec55 4b10 	vmov	r4, r5, d0
 8002190:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8002192:	9107      	str	r1, [sp, #28]
 8002194:	4681      	mov	r9, r0
 8002196:	920c      	str	r2, [sp, #48]	@ 0x30
 8002198:	9311      	str	r3, [sp, #68]	@ 0x44
 800219a:	b97f      	cbnz	r7, 80021bc <_dtoa_r+0x3c>
 800219c:	2010      	movs	r0, #16
 800219e:	f7ff fbf7 	bl	8001990 <malloc>
 80021a2:	4602      	mov	r2, r0
 80021a4:	f8c9 001c 	str.w	r0, [r9, #28]
 80021a8:	b920      	cbnz	r0, 80021b4 <_dtoa_r+0x34>
 80021aa:	4ba9      	ldr	r3, [pc, #676]	@ (8002450 <_dtoa_r+0x2d0>)
 80021ac:	21ef      	movs	r1, #239	@ 0xef
 80021ae:	48a9      	ldr	r0, [pc, #676]	@ (8002454 <_dtoa_r+0x2d4>)
 80021b0:	f001 fc5e 	bl	8003a70 <__assert_func>
 80021b4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80021b8:	6007      	str	r7, [r0, #0]
 80021ba:	60c7      	str	r7, [r0, #12]
 80021bc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80021c0:	6819      	ldr	r1, [r3, #0]
 80021c2:	b159      	cbz	r1, 80021dc <_dtoa_r+0x5c>
 80021c4:	685a      	ldr	r2, [r3, #4]
 80021c6:	604a      	str	r2, [r1, #4]
 80021c8:	2301      	movs	r3, #1
 80021ca:	4093      	lsls	r3, r2
 80021cc:	608b      	str	r3, [r1, #8]
 80021ce:	4648      	mov	r0, r9
 80021d0:	f001 f834 	bl	800323c <_Bfree>
 80021d4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80021d8:	2200      	movs	r2, #0
 80021da:	601a      	str	r2, [r3, #0]
 80021dc:	1e2b      	subs	r3, r5, #0
 80021de:	bfb9      	ittee	lt
 80021e0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80021e4:	9305      	strlt	r3, [sp, #20]
 80021e6:	2300      	movge	r3, #0
 80021e8:	6033      	strge	r3, [r6, #0]
 80021ea:	9f05      	ldr	r7, [sp, #20]
 80021ec:	4b9a      	ldr	r3, [pc, #616]	@ (8002458 <_dtoa_r+0x2d8>)
 80021ee:	bfbc      	itt	lt
 80021f0:	2201      	movlt	r2, #1
 80021f2:	6032      	strlt	r2, [r6, #0]
 80021f4:	43bb      	bics	r3, r7
 80021f6:	d112      	bne.n	800221e <_dtoa_r+0x9e>
 80021f8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80021fa:	f242 730f 	movw	r3, #9999	@ 0x270f
 80021fe:	6013      	str	r3, [r2, #0]
 8002200:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002204:	4323      	orrs	r3, r4
 8002206:	f000 855a 	beq.w	8002cbe <_dtoa_r+0xb3e>
 800220a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800220c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 800246c <_dtoa_r+0x2ec>
 8002210:	2b00      	cmp	r3, #0
 8002212:	f000 855c 	beq.w	8002cce <_dtoa_r+0xb4e>
 8002216:	f10a 0303 	add.w	r3, sl, #3
 800221a:	f000 bd56 	b.w	8002cca <_dtoa_r+0xb4a>
 800221e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002222:	2200      	movs	r2, #0
 8002224:	ec51 0b17 	vmov	r0, r1, d7
 8002228:	2300      	movs	r3, #0
 800222a:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 800222e:	f7fe fc53 	bl	8000ad8 <__aeabi_dcmpeq>
 8002232:	4680      	mov	r8, r0
 8002234:	b158      	cbz	r0, 800224e <_dtoa_r+0xce>
 8002236:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002238:	2301      	movs	r3, #1
 800223a:	6013      	str	r3, [r2, #0]
 800223c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800223e:	b113      	cbz	r3, 8002246 <_dtoa_r+0xc6>
 8002240:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002242:	4b86      	ldr	r3, [pc, #536]	@ (800245c <_dtoa_r+0x2dc>)
 8002244:	6013      	str	r3, [r2, #0]
 8002246:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8002470 <_dtoa_r+0x2f0>
 800224a:	f000 bd40 	b.w	8002cce <_dtoa_r+0xb4e>
 800224e:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8002252:	aa14      	add	r2, sp, #80	@ 0x50
 8002254:	a915      	add	r1, sp, #84	@ 0x54
 8002256:	4648      	mov	r0, r9
 8002258:	f001 fad2 	bl	8003800 <__d2b>
 800225c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002260:	9002      	str	r0, [sp, #8]
 8002262:	2e00      	cmp	r6, #0
 8002264:	d078      	beq.n	8002358 <_dtoa_r+0x1d8>
 8002266:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002268:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 800226c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002270:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002274:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002278:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800227c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002280:	4619      	mov	r1, r3
 8002282:	2200      	movs	r2, #0
 8002284:	4b76      	ldr	r3, [pc, #472]	@ (8002460 <_dtoa_r+0x2e0>)
 8002286:	f7fe f807 	bl	8000298 <__aeabi_dsub>
 800228a:	a36b      	add	r3, pc, #428	@ (adr r3, 8002438 <_dtoa_r+0x2b8>)
 800228c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002290:	f7fe f9ba 	bl	8000608 <__aeabi_dmul>
 8002294:	a36a      	add	r3, pc, #424	@ (adr r3, 8002440 <_dtoa_r+0x2c0>)
 8002296:	e9d3 2300 	ldrd	r2, r3, [r3]
 800229a:	f7fd ffff 	bl	800029c <__adddf3>
 800229e:	4604      	mov	r4, r0
 80022a0:	4630      	mov	r0, r6
 80022a2:	460d      	mov	r5, r1
 80022a4:	f7fe f946 	bl	8000534 <__aeabi_i2d>
 80022a8:	a367      	add	r3, pc, #412	@ (adr r3, 8002448 <_dtoa_r+0x2c8>)
 80022aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022ae:	f7fe f9ab 	bl	8000608 <__aeabi_dmul>
 80022b2:	4602      	mov	r2, r0
 80022b4:	460b      	mov	r3, r1
 80022b6:	4620      	mov	r0, r4
 80022b8:	4629      	mov	r1, r5
 80022ba:	f7fd ffef 	bl	800029c <__adddf3>
 80022be:	4604      	mov	r4, r0
 80022c0:	460d      	mov	r5, r1
 80022c2:	f7fe fc51 	bl	8000b68 <__aeabi_d2iz>
 80022c6:	2200      	movs	r2, #0
 80022c8:	4607      	mov	r7, r0
 80022ca:	2300      	movs	r3, #0
 80022cc:	4620      	mov	r0, r4
 80022ce:	4629      	mov	r1, r5
 80022d0:	f7fe fc0c 	bl	8000aec <__aeabi_dcmplt>
 80022d4:	b140      	cbz	r0, 80022e8 <_dtoa_r+0x168>
 80022d6:	4638      	mov	r0, r7
 80022d8:	f7fe f92c 	bl	8000534 <__aeabi_i2d>
 80022dc:	4622      	mov	r2, r4
 80022de:	462b      	mov	r3, r5
 80022e0:	f7fe fbfa 	bl	8000ad8 <__aeabi_dcmpeq>
 80022e4:	b900      	cbnz	r0, 80022e8 <_dtoa_r+0x168>
 80022e6:	3f01      	subs	r7, #1
 80022e8:	2f16      	cmp	r7, #22
 80022ea:	d852      	bhi.n	8002392 <_dtoa_r+0x212>
 80022ec:	4b5d      	ldr	r3, [pc, #372]	@ (8002464 <_dtoa_r+0x2e4>)
 80022ee:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80022f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022f6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80022fa:	f7fe fbf7 	bl	8000aec <__aeabi_dcmplt>
 80022fe:	2800      	cmp	r0, #0
 8002300:	d049      	beq.n	8002396 <_dtoa_r+0x216>
 8002302:	3f01      	subs	r7, #1
 8002304:	2300      	movs	r3, #0
 8002306:	9310      	str	r3, [sp, #64]	@ 0x40
 8002308:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800230a:	1b9b      	subs	r3, r3, r6
 800230c:	1e5a      	subs	r2, r3, #1
 800230e:	bf45      	ittet	mi
 8002310:	f1c3 0301 	rsbmi	r3, r3, #1
 8002314:	9300      	strmi	r3, [sp, #0]
 8002316:	2300      	movpl	r3, #0
 8002318:	2300      	movmi	r3, #0
 800231a:	9206      	str	r2, [sp, #24]
 800231c:	bf54      	ite	pl
 800231e:	9300      	strpl	r3, [sp, #0]
 8002320:	9306      	strmi	r3, [sp, #24]
 8002322:	2f00      	cmp	r7, #0
 8002324:	db39      	blt.n	800239a <_dtoa_r+0x21a>
 8002326:	9b06      	ldr	r3, [sp, #24]
 8002328:	970d      	str	r7, [sp, #52]	@ 0x34
 800232a:	443b      	add	r3, r7
 800232c:	9306      	str	r3, [sp, #24]
 800232e:	2300      	movs	r3, #0
 8002330:	9308      	str	r3, [sp, #32]
 8002332:	9b07      	ldr	r3, [sp, #28]
 8002334:	2b09      	cmp	r3, #9
 8002336:	d863      	bhi.n	8002400 <_dtoa_r+0x280>
 8002338:	2b05      	cmp	r3, #5
 800233a:	bfc4      	itt	gt
 800233c:	3b04      	subgt	r3, #4
 800233e:	9307      	strgt	r3, [sp, #28]
 8002340:	9b07      	ldr	r3, [sp, #28]
 8002342:	f1a3 0302 	sub.w	r3, r3, #2
 8002346:	bfcc      	ite	gt
 8002348:	2400      	movgt	r4, #0
 800234a:	2401      	movle	r4, #1
 800234c:	2b03      	cmp	r3, #3
 800234e:	d863      	bhi.n	8002418 <_dtoa_r+0x298>
 8002350:	e8df f003 	tbb	[pc, r3]
 8002354:	2b375452 	.word	0x2b375452
 8002358:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800235c:	441e      	add	r6, r3
 800235e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002362:	2b20      	cmp	r3, #32
 8002364:	bfc1      	itttt	gt
 8002366:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800236a:	409f      	lslgt	r7, r3
 800236c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002370:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002374:	bfd6      	itet	le
 8002376:	f1c3 0320 	rsble	r3, r3, #32
 800237a:	ea47 0003 	orrgt.w	r0, r7, r3
 800237e:	fa04 f003 	lslle.w	r0, r4, r3
 8002382:	f7fe f8c7 	bl	8000514 <__aeabi_ui2d>
 8002386:	2201      	movs	r2, #1
 8002388:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800238c:	3e01      	subs	r6, #1
 800238e:	9212      	str	r2, [sp, #72]	@ 0x48
 8002390:	e776      	b.n	8002280 <_dtoa_r+0x100>
 8002392:	2301      	movs	r3, #1
 8002394:	e7b7      	b.n	8002306 <_dtoa_r+0x186>
 8002396:	9010      	str	r0, [sp, #64]	@ 0x40
 8002398:	e7b6      	b.n	8002308 <_dtoa_r+0x188>
 800239a:	9b00      	ldr	r3, [sp, #0]
 800239c:	1bdb      	subs	r3, r3, r7
 800239e:	9300      	str	r3, [sp, #0]
 80023a0:	427b      	negs	r3, r7
 80023a2:	9308      	str	r3, [sp, #32]
 80023a4:	2300      	movs	r3, #0
 80023a6:	930d      	str	r3, [sp, #52]	@ 0x34
 80023a8:	e7c3      	b.n	8002332 <_dtoa_r+0x1b2>
 80023aa:	2301      	movs	r3, #1
 80023ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80023ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80023b0:	eb07 0b03 	add.w	fp, r7, r3
 80023b4:	f10b 0301 	add.w	r3, fp, #1
 80023b8:	2b01      	cmp	r3, #1
 80023ba:	9303      	str	r3, [sp, #12]
 80023bc:	bfb8      	it	lt
 80023be:	2301      	movlt	r3, #1
 80023c0:	e006      	b.n	80023d0 <_dtoa_r+0x250>
 80023c2:	2301      	movs	r3, #1
 80023c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80023c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	dd28      	ble.n	800241e <_dtoa_r+0x29e>
 80023cc:	469b      	mov	fp, r3
 80023ce:	9303      	str	r3, [sp, #12]
 80023d0:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80023d4:	2100      	movs	r1, #0
 80023d6:	2204      	movs	r2, #4
 80023d8:	f102 0514 	add.w	r5, r2, #20
 80023dc:	429d      	cmp	r5, r3
 80023de:	d926      	bls.n	800242e <_dtoa_r+0x2ae>
 80023e0:	6041      	str	r1, [r0, #4]
 80023e2:	4648      	mov	r0, r9
 80023e4:	f000 feea 	bl	80031bc <_Balloc>
 80023e8:	4682      	mov	sl, r0
 80023ea:	2800      	cmp	r0, #0
 80023ec:	d142      	bne.n	8002474 <_dtoa_r+0x2f4>
 80023ee:	4b1e      	ldr	r3, [pc, #120]	@ (8002468 <_dtoa_r+0x2e8>)
 80023f0:	4602      	mov	r2, r0
 80023f2:	f240 11af 	movw	r1, #431	@ 0x1af
 80023f6:	e6da      	b.n	80021ae <_dtoa_r+0x2e>
 80023f8:	2300      	movs	r3, #0
 80023fa:	e7e3      	b.n	80023c4 <_dtoa_r+0x244>
 80023fc:	2300      	movs	r3, #0
 80023fe:	e7d5      	b.n	80023ac <_dtoa_r+0x22c>
 8002400:	2401      	movs	r4, #1
 8002402:	2300      	movs	r3, #0
 8002404:	9307      	str	r3, [sp, #28]
 8002406:	9409      	str	r4, [sp, #36]	@ 0x24
 8002408:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 800240c:	2200      	movs	r2, #0
 800240e:	f8cd b00c 	str.w	fp, [sp, #12]
 8002412:	2312      	movs	r3, #18
 8002414:	920c      	str	r2, [sp, #48]	@ 0x30
 8002416:	e7db      	b.n	80023d0 <_dtoa_r+0x250>
 8002418:	2301      	movs	r3, #1
 800241a:	9309      	str	r3, [sp, #36]	@ 0x24
 800241c:	e7f4      	b.n	8002408 <_dtoa_r+0x288>
 800241e:	f04f 0b01 	mov.w	fp, #1
 8002422:	f8cd b00c 	str.w	fp, [sp, #12]
 8002426:	465b      	mov	r3, fp
 8002428:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 800242c:	e7d0      	b.n	80023d0 <_dtoa_r+0x250>
 800242e:	3101      	adds	r1, #1
 8002430:	0052      	lsls	r2, r2, #1
 8002432:	e7d1      	b.n	80023d8 <_dtoa_r+0x258>
 8002434:	f3af 8000 	nop.w
 8002438:	636f4361 	.word	0x636f4361
 800243c:	3fd287a7 	.word	0x3fd287a7
 8002440:	8b60c8b3 	.word	0x8b60c8b3
 8002444:	3fc68a28 	.word	0x3fc68a28
 8002448:	509f79fb 	.word	0x509f79fb
 800244c:	3fd34413 	.word	0x3fd34413
 8002450:	08004236 	.word	0x08004236
 8002454:	0800424d 	.word	0x0800424d
 8002458:	7ff00000 	.word	0x7ff00000
 800245c:	08004206 	.word	0x08004206
 8002460:	3ff80000 	.word	0x3ff80000
 8002464:	080043a0 	.word	0x080043a0
 8002468:	080042a5 	.word	0x080042a5
 800246c:	08004232 	.word	0x08004232
 8002470:	08004205 	.word	0x08004205
 8002474:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002478:	6018      	str	r0, [r3, #0]
 800247a:	9b03      	ldr	r3, [sp, #12]
 800247c:	2b0e      	cmp	r3, #14
 800247e:	f200 80a1 	bhi.w	80025c4 <_dtoa_r+0x444>
 8002482:	2c00      	cmp	r4, #0
 8002484:	f000 809e 	beq.w	80025c4 <_dtoa_r+0x444>
 8002488:	2f00      	cmp	r7, #0
 800248a:	dd33      	ble.n	80024f4 <_dtoa_r+0x374>
 800248c:	4b9c      	ldr	r3, [pc, #624]	@ (8002700 <_dtoa_r+0x580>)
 800248e:	f007 020f 	and.w	r2, r7, #15
 8002492:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002496:	ed93 7b00 	vldr	d7, [r3]
 800249a:	05f8      	lsls	r0, r7, #23
 800249c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 80024a0:	ea4f 1427 	mov.w	r4, r7, asr #4
 80024a4:	d516      	bpl.n	80024d4 <_dtoa_r+0x354>
 80024a6:	4b97      	ldr	r3, [pc, #604]	@ (8002704 <_dtoa_r+0x584>)
 80024a8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80024ac:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80024b0:	f7fe f9d4 	bl	800085c <__aeabi_ddiv>
 80024b4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80024b8:	f004 040f 	and.w	r4, r4, #15
 80024bc:	2603      	movs	r6, #3
 80024be:	4d91      	ldr	r5, [pc, #580]	@ (8002704 <_dtoa_r+0x584>)
 80024c0:	b954      	cbnz	r4, 80024d8 <_dtoa_r+0x358>
 80024c2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80024c6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80024ca:	f7fe f9c7 	bl	800085c <__aeabi_ddiv>
 80024ce:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80024d2:	e028      	b.n	8002526 <_dtoa_r+0x3a6>
 80024d4:	2602      	movs	r6, #2
 80024d6:	e7f2      	b.n	80024be <_dtoa_r+0x33e>
 80024d8:	07e1      	lsls	r1, r4, #31
 80024da:	d508      	bpl.n	80024ee <_dtoa_r+0x36e>
 80024dc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80024e0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80024e4:	f7fe f890 	bl	8000608 <__aeabi_dmul>
 80024e8:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80024ec:	3601      	adds	r6, #1
 80024ee:	1064      	asrs	r4, r4, #1
 80024f0:	3508      	adds	r5, #8
 80024f2:	e7e5      	b.n	80024c0 <_dtoa_r+0x340>
 80024f4:	f000 80af 	beq.w	8002656 <_dtoa_r+0x4d6>
 80024f8:	427c      	negs	r4, r7
 80024fa:	4b81      	ldr	r3, [pc, #516]	@ (8002700 <_dtoa_r+0x580>)
 80024fc:	4d81      	ldr	r5, [pc, #516]	@ (8002704 <_dtoa_r+0x584>)
 80024fe:	f004 020f 	and.w	r2, r4, #15
 8002502:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002506:	e9d3 2300 	ldrd	r2, r3, [r3]
 800250a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800250e:	f7fe f87b 	bl	8000608 <__aeabi_dmul>
 8002512:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002516:	1124      	asrs	r4, r4, #4
 8002518:	2300      	movs	r3, #0
 800251a:	2602      	movs	r6, #2
 800251c:	2c00      	cmp	r4, #0
 800251e:	f040 808f 	bne.w	8002640 <_dtoa_r+0x4c0>
 8002522:	2b00      	cmp	r3, #0
 8002524:	d1d3      	bne.n	80024ce <_dtoa_r+0x34e>
 8002526:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002528:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800252c:	2b00      	cmp	r3, #0
 800252e:	f000 8094 	beq.w	800265a <_dtoa_r+0x4da>
 8002532:	4b75      	ldr	r3, [pc, #468]	@ (8002708 <_dtoa_r+0x588>)
 8002534:	2200      	movs	r2, #0
 8002536:	4620      	mov	r0, r4
 8002538:	4629      	mov	r1, r5
 800253a:	f7fe fad7 	bl	8000aec <__aeabi_dcmplt>
 800253e:	2800      	cmp	r0, #0
 8002540:	f000 808b 	beq.w	800265a <_dtoa_r+0x4da>
 8002544:	9b03      	ldr	r3, [sp, #12]
 8002546:	2b00      	cmp	r3, #0
 8002548:	f000 8087 	beq.w	800265a <_dtoa_r+0x4da>
 800254c:	f1bb 0f00 	cmp.w	fp, #0
 8002550:	dd34      	ble.n	80025bc <_dtoa_r+0x43c>
 8002552:	4620      	mov	r0, r4
 8002554:	4b6d      	ldr	r3, [pc, #436]	@ (800270c <_dtoa_r+0x58c>)
 8002556:	2200      	movs	r2, #0
 8002558:	4629      	mov	r1, r5
 800255a:	f7fe f855 	bl	8000608 <__aeabi_dmul>
 800255e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002562:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8002566:	3601      	adds	r6, #1
 8002568:	465c      	mov	r4, fp
 800256a:	4630      	mov	r0, r6
 800256c:	f7fd ffe2 	bl	8000534 <__aeabi_i2d>
 8002570:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002574:	f7fe f848 	bl	8000608 <__aeabi_dmul>
 8002578:	4b65      	ldr	r3, [pc, #404]	@ (8002710 <_dtoa_r+0x590>)
 800257a:	2200      	movs	r2, #0
 800257c:	f7fd fe8e 	bl	800029c <__adddf3>
 8002580:	4605      	mov	r5, r0
 8002582:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002586:	2c00      	cmp	r4, #0
 8002588:	d16a      	bne.n	8002660 <_dtoa_r+0x4e0>
 800258a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800258e:	4b61      	ldr	r3, [pc, #388]	@ (8002714 <_dtoa_r+0x594>)
 8002590:	2200      	movs	r2, #0
 8002592:	f7fd fe81 	bl	8000298 <__aeabi_dsub>
 8002596:	4602      	mov	r2, r0
 8002598:	460b      	mov	r3, r1
 800259a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800259e:	462a      	mov	r2, r5
 80025a0:	4633      	mov	r3, r6
 80025a2:	f7fe fac1 	bl	8000b28 <__aeabi_dcmpgt>
 80025a6:	2800      	cmp	r0, #0
 80025a8:	f040 8298 	bne.w	8002adc <_dtoa_r+0x95c>
 80025ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025b0:	462a      	mov	r2, r5
 80025b2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80025b6:	f7fe fa99 	bl	8000aec <__aeabi_dcmplt>
 80025ba:	bb38      	cbnz	r0, 800260c <_dtoa_r+0x48c>
 80025bc:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 80025c0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80025c4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	f2c0 8157 	blt.w	800287a <_dtoa_r+0x6fa>
 80025cc:	2f0e      	cmp	r7, #14
 80025ce:	f300 8154 	bgt.w	800287a <_dtoa_r+0x6fa>
 80025d2:	4b4b      	ldr	r3, [pc, #300]	@ (8002700 <_dtoa_r+0x580>)
 80025d4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80025d8:	ed93 7b00 	vldr	d7, [r3]
 80025dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80025de:	2b00      	cmp	r3, #0
 80025e0:	ed8d 7b00 	vstr	d7, [sp]
 80025e4:	f280 80e5 	bge.w	80027b2 <_dtoa_r+0x632>
 80025e8:	9b03      	ldr	r3, [sp, #12]
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	f300 80e1 	bgt.w	80027b2 <_dtoa_r+0x632>
 80025f0:	d10c      	bne.n	800260c <_dtoa_r+0x48c>
 80025f2:	4b48      	ldr	r3, [pc, #288]	@ (8002714 <_dtoa_r+0x594>)
 80025f4:	2200      	movs	r2, #0
 80025f6:	ec51 0b17 	vmov	r0, r1, d7
 80025fa:	f7fe f805 	bl	8000608 <__aeabi_dmul>
 80025fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002602:	f7fe fa87 	bl	8000b14 <__aeabi_dcmpge>
 8002606:	2800      	cmp	r0, #0
 8002608:	f000 8266 	beq.w	8002ad8 <_dtoa_r+0x958>
 800260c:	2400      	movs	r4, #0
 800260e:	4625      	mov	r5, r4
 8002610:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002612:	4656      	mov	r6, sl
 8002614:	ea6f 0803 	mvn.w	r8, r3
 8002618:	2700      	movs	r7, #0
 800261a:	4621      	mov	r1, r4
 800261c:	4648      	mov	r0, r9
 800261e:	f000 fe0d 	bl	800323c <_Bfree>
 8002622:	2d00      	cmp	r5, #0
 8002624:	f000 80bd 	beq.w	80027a2 <_dtoa_r+0x622>
 8002628:	b12f      	cbz	r7, 8002636 <_dtoa_r+0x4b6>
 800262a:	42af      	cmp	r7, r5
 800262c:	d003      	beq.n	8002636 <_dtoa_r+0x4b6>
 800262e:	4639      	mov	r1, r7
 8002630:	4648      	mov	r0, r9
 8002632:	f000 fe03 	bl	800323c <_Bfree>
 8002636:	4629      	mov	r1, r5
 8002638:	4648      	mov	r0, r9
 800263a:	f000 fdff 	bl	800323c <_Bfree>
 800263e:	e0b0      	b.n	80027a2 <_dtoa_r+0x622>
 8002640:	07e2      	lsls	r2, r4, #31
 8002642:	d505      	bpl.n	8002650 <_dtoa_r+0x4d0>
 8002644:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002648:	f7fd ffde 	bl	8000608 <__aeabi_dmul>
 800264c:	3601      	adds	r6, #1
 800264e:	2301      	movs	r3, #1
 8002650:	1064      	asrs	r4, r4, #1
 8002652:	3508      	adds	r5, #8
 8002654:	e762      	b.n	800251c <_dtoa_r+0x39c>
 8002656:	2602      	movs	r6, #2
 8002658:	e765      	b.n	8002526 <_dtoa_r+0x3a6>
 800265a:	9c03      	ldr	r4, [sp, #12]
 800265c:	46b8      	mov	r8, r7
 800265e:	e784      	b.n	800256a <_dtoa_r+0x3ea>
 8002660:	4b27      	ldr	r3, [pc, #156]	@ (8002700 <_dtoa_r+0x580>)
 8002662:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002664:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002668:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800266c:	4454      	add	r4, sl
 800266e:	2900      	cmp	r1, #0
 8002670:	d054      	beq.n	800271c <_dtoa_r+0x59c>
 8002672:	4929      	ldr	r1, [pc, #164]	@ (8002718 <_dtoa_r+0x598>)
 8002674:	2000      	movs	r0, #0
 8002676:	f7fe f8f1 	bl	800085c <__aeabi_ddiv>
 800267a:	4633      	mov	r3, r6
 800267c:	462a      	mov	r2, r5
 800267e:	f7fd fe0b 	bl	8000298 <__aeabi_dsub>
 8002682:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002686:	4656      	mov	r6, sl
 8002688:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800268c:	f7fe fa6c 	bl	8000b68 <__aeabi_d2iz>
 8002690:	4605      	mov	r5, r0
 8002692:	f7fd ff4f 	bl	8000534 <__aeabi_i2d>
 8002696:	4602      	mov	r2, r0
 8002698:	460b      	mov	r3, r1
 800269a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800269e:	f7fd fdfb 	bl	8000298 <__aeabi_dsub>
 80026a2:	3530      	adds	r5, #48	@ 0x30
 80026a4:	4602      	mov	r2, r0
 80026a6:	460b      	mov	r3, r1
 80026a8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80026ac:	f806 5b01 	strb.w	r5, [r6], #1
 80026b0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80026b4:	f7fe fa1a 	bl	8000aec <__aeabi_dcmplt>
 80026b8:	2800      	cmp	r0, #0
 80026ba:	d172      	bne.n	80027a2 <_dtoa_r+0x622>
 80026bc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80026c0:	4911      	ldr	r1, [pc, #68]	@ (8002708 <_dtoa_r+0x588>)
 80026c2:	2000      	movs	r0, #0
 80026c4:	f7fd fde8 	bl	8000298 <__aeabi_dsub>
 80026c8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80026cc:	f7fe fa0e 	bl	8000aec <__aeabi_dcmplt>
 80026d0:	2800      	cmp	r0, #0
 80026d2:	f040 80b4 	bne.w	800283e <_dtoa_r+0x6be>
 80026d6:	42a6      	cmp	r6, r4
 80026d8:	f43f af70 	beq.w	80025bc <_dtoa_r+0x43c>
 80026dc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80026e0:	4b0a      	ldr	r3, [pc, #40]	@ (800270c <_dtoa_r+0x58c>)
 80026e2:	2200      	movs	r2, #0
 80026e4:	f7fd ff90 	bl	8000608 <__aeabi_dmul>
 80026e8:	4b08      	ldr	r3, [pc, #32]	@ (800270c <_dtoa_r+0x58c>)
 80026ea:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80026ee:	2200      	movs	r2, #0
 80026f0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026f4:	f7fd ff88 	bl	8000608 <__aeabi_dmul>
 80026f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80026fc:	e7c4      	b.n	8002688 <_dtoa_r+0x508>
 80026fe:	bf00      	nop
 8002700:	080043a0 	.word	0x080043a0
 8002704:	08004378 	.word	0x08004378
 8002708:	3ff00000 	.word	0x3ff00000
 800270c:	40240000 	.word	0x40240000
 8002710:	401c0000 	.word	0x401c0000
 8002714:	40140000 	.word	0x40140000
 8002718:	3fe00000 	.word	0x3fe00000
 800271c:	4631      	mov	r1, r6
 800271e:	4628      	mov	r0, r5
 8002720:	f7fd ff72 	bl	8000608 <__aeabi_dmul>
 8002724:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002728:	9413      	str	r4, [sp, #76]	@ 0x4c
 800272a:	4656      	mov	r6, sl
 800272c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002730:	f7fe fa1a 	bl	8000b68 <__aeabi_d2iz>
 8002734:	4605      	mov	r5, r0
 8002736:	f7fd fefd 	bl	8000534 <__aeabi_i2d>
 800273a:	4602      	mov	r2, r0
 800273c:	460b      	mov	r3, r1
 800273e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002742:	f7fd fda9 	bl	8000298 <__aeabi_dsub>
 8002746:	3530      	adds	r5, #48	@ 0x30
 8002748:	f806 5b01 	strb.w	r5, [r6], #1
 800274c:	4602      	mov	r2, r0
 800274e:	460b      	mov	r3, r1
 8002750:	42a6      	cmp	r6, r4
 8002752:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002756:	f04f 0200 	mov.w	r2, #0
 800275a:	d124      	bne.n	80027a6 <_dtoa_r+0x626>
 800275c:	4baf      	ldr	r3, [pc, #700]	@ (8002a1c <_dtoa_r+0x89c>)
 800275e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002762:	f7fd fd9b 	bl	800029c <__adddf3>
 8002766:	4602      	mov	r2, r0
 8002768:	460b      	mov	r3, r1
 800276a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800276e:	f7fe f9db 	bl	8000b28 <__aeabi_dcmpgt>
 8002772:	2800      	cmp	r0, #0
 8002774:	d163      	bne.n	800283e <_dtoa_r+0x6be>
 8002776:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800277a:	49a8      	ldr	r1, [pc, #672]	@ (8002a1c <_dtoa_r+0x89c>)
 800277c:	2000      	movs	r0, #0
 800277e:	f7fd fd8b 	bl	8000298 <__aeabi_dsub>
 8002782:	4602      	mov	r2, r0
 8002784:	460b      	mov	r3, r1
 8002786:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800278a:	f7fe f9af 	bl	8000aec <__aeabi_dcmplt>
 800278e:	2800      	cmp	r0, #0
 8002790:	f43f af14 	beq.w	80025bc <_dtoa_r+0x43c>
 8002794:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002796:	1e73      	subs	r3, r6, #1
 8002798:	9313      	str	r3, [sp, #76]	@ 0x4c
 800279a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800279e:	2b30      	cmp	r3, #48	@ 0x30
 80027a0:	d0f8      	beq.n	8002794 <_dtoa_r+0x614>
 80027a2:	4647      	mov	r7, r8
 80027a4:	e03b      	b.n	800281e <_dtoa_r+0x69e>
 80027a6:	4b9e      	ldr	r3, [pc, #632]	@ (8002a20 <_dtoa_r+0x8a0>)
 80027a8:	f7fd ff2e 	bl	8000608 <__aeabi_dmul>
 80027ac:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80027b0:	e7bc      	b.n	800272c <_dtoa_r+0x5ac>
 80027b2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80027b6:	4656      	mov	r6, sl
 80027b8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80027bc:	4620      	mov	r0, r4
 80027be:	4629      	mov	r1, r5
 80027c0:	f7fe f84c 	bl	800085c <__aeabi_ddiv>
 80027c4:	f7fe f9d0 	bl	8000b68 <__aeabi_d2iz>
 80027c8:	4680      	mov	r8, r0
 80027ca:	f7fd feb3 	bl	8000534 <__aeabi_i2d>
 80027ce:	e9dd 2300 	ldrd	r2, r3, [sp]
 80027d2:	f7fd ff19 	bl	8000608 <__aeabi_dmul>
 80027d6:	4602      	mov	r2, r0
 80027d8:	460b      	mov	r3, r1
 80027da:	4620      	mov	r0, r4
 80027dc:	4629      	mov	r1, r5
 80027de:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80027e2:	f7fd fd59 	bl	8000298 <__aeabi_dsub>
 80027e6:	f806 4b01 	strb.w	r4, [r6], #1
 80027ea:	9d03      	ldr	r5, [sp, #12]
 80027ec:	eba6 040a 	sub.w	r4, r6, sl
 80027f0:	42a5      	cmp	r5, r4
 80027f2:	4602      	mov	r2, r0
 80027f4:	460b      	mov	r3, r1
 80027f6:	d133      	bne.n	8002860 <_dtoa_r+0x6e0>
 80027f8:	f7fd fd50 	bl	800029c <__adddf3>
 80027fc:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002800:	4604      	mov	r4, r0
 8002802:	460d      	mov	r5, r1
 8002804:	f7fe f990 	bl	8000b28 <__aeabi_dcmpgt>
 8002808:	b9c0      	cbnz	r0, 800283c <_dtoa_r+0x6bc>
 800280a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800280e:	4620      	mov	r0, r4
 8002810:	4629      	mov	r1, r5
 8002812:	f7fe f961 	bl	8000ad8 <__aeabi_dcmpeq>
 8002816:	b110      	cbz	r0, 800281e <_dtoa_r+0x69e>
 8002818:	f018 0f01 	tst.w	r8, #1
 800281c:	d10e      	bne.n	800283c <_dtoa_r+0x6bc>
 800281e:	9902      	ldr	r1, [sp, #8]
 8002820:	4648      	mov	r0, r9
 8002822:	f000 fd0b 	bl	800323c <_Bfree>
 8002826:	2300      	movs	r3, #0
 8002828:	7033      	strb	r3, [r6, #0]
 800282a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800282c:	3701      	adds	r7, #1
 800282e:	601f      	str	r7, [r3, #0]
 8002830:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002832:	2b00      	cmp	r3, #0
 8002834:	f000 824b 	beq.w	8002cce <_dtoa_r+0xb4e>
 8002838:	601e      	str	r6, [r3, #0]
 800283a:	e248      	b.n	8002cce <_dtoa_r+0xb4e>
 800283c:	46b8      	mov	r8, r7
 800283e:	4633      	mov	r3, r6
 8002840:	461e      	mov	r6, r3
 8002842:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002846:	2a39      	cmp	r2, #57	@ 0x39
 8002848:	d106      	bne.n	8002858 <_dtoa_r+0x6d8>
 800284a:	459a      	cmp	sl, r3
 800284c:	d1f8      	bne.n	8002840 <_dtoa_r+0x6c0>
 800284e:	2230      	movs	r2, #48	@ 0x30
 8002850:	f108 0801 	add.w	r8, r8, #1
 8002854:	f88a 2000 	strb.w	r2, [sl]
 8002858:	781a      	ldrb	r2, [r3, #0]
 800285a:	3201      	adds	r2, #1
 800285c:	701a      	strb	r2, [r3, #0]
 800285e:	e7a0      	b.n	80027a2 <_dtoa_r+0x622>
 8002860:	4b6f      	ldr	r3, [pc, #444]	@ (8002a20 <_dtoa_r+0x8a0>)
 8002862:	2200      	movs	r2, #0
 8002864:	f7fd fed0 	bl	8000608 <__aeabi_dmul>
 8002868:	2200      	movs	r2, #0
 800286a:	2300      	movs	r3, #0
 800286c:	4604      	mov	r4, r0
 800286e:	460d      	mov	r5, r1
 8002870:	f7fe f932 	bl	8000ad8 <__aeabi_dcmpeq>
 8002874:	2800      	cmp	r0, #0
 8002876:	d09f      	beq.n	80027b8 <_dtoa_r+0x638>
 8002878:	e7d1      	b.n	800281e <_dtoa_r+0x69e>
 800287a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800287c:	2a00      	cmp	r2, #0
 800287e:	f000 80ea 	beq.w	8002a56 <_dtoa_r+0x8d6>
 8002882:	9a07      	ldr	r2, [sp, #28]
 8002884:	2a01      	cmp	r2, #1
 8002886:	f300 80cd 	bgt.w	8002a24 <_dtoa_r+0x8a4>
 800288a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800288c:	2a00      	cmp	r2, #0
 800288e:	f000 80c1 	beq.w	8002a14 <_dtoa_r+0x894>
 8002892:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002896:	9c08      	ldr	r4, [sp, #32]
 8002898:	9e00      	ldr	r6, [sp, #0]
 800289a:	9a00      	ldr	r2, [sp, #0]
 800289c:	441a      	add	r2, r3
 800289e:	9200      	str	r2, [sp, #0]
 80028a0:	9a06      	ldr	r2, [sp, #24]
 80028a2:	2101      	movs	r1, #1
 80028a4:	441a      	add	r2, r3
 80028a6:	4648      	mov	r0, r9
 80028a8:	9206      	str	r2, [sp, #24]
 80028aa:	f000 fd7b 	bl	80033a4 <__i2b>
 80028ae:	4605      	mov	r5, r0
 80028b0:	b166      	cbz	r6, 80028cc <_dtoa_r+0x74c>
 80028b2:	9b06      	ldr	r3, [sp, #24]
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	dd09      	ble.n	80028cc <_dtoa_r+0x74c>
 80028b8:	42b3      	cmp	r3, r6
 80028ba:	9a00      	ldr	r2, [sp, #0]
 80028bc:	bfa8      	it	ge
 80028be:	4633      	movge	r3, r6
 80028c0:	1ad2      	subs	r2, r2, r3
 80028c2:	9200      	str	r2, [sp, #0]
 80028c4:	9a06      	ldr	r2, [sp, #24]
 80028c6:	1af6      	subs	r6, r6, r3
 80028c8:	1ad3      	subs	r3, r2, r3
 80028ca:	9306      	str	r3, [sp, #24]
 80028cc:	9b08      	ldr	r3, [sp, #32]
 80028ce:	b30b      	cbz	r3, 8002914 <_dtoa_r+0x794>
 80028d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80028d2:	2b00      	cmp	r3, #0
 80028d4:	f000 80c6 	beq.w	8002a64 <_dtoa_r+0x8e4>
 80028d8:	2c00      	cmp	r4, #0
 80028da:	f000 80c0 	beq.w	8002a5e <_dtoa_r+0x8de>
 80028de:	4629      	mov	r1, r5
 80028e0:	4622      	mov	r2, r4
 80028e2:	4648      	mov	r0, r9
 80028e4:	f000 fe16 	bl	8003514 <__pow5mult>
 80028e8:	9a02      	ldr	r2, [sp, #8]
 80028ea:	4601      	mov	r1, r0
 80028ec:	4605      	mov	r5, r0
 80028ee:	4648      	mov	r0, r9
 80028f0:	f000 fd6e 	bl	80033d0 <__multiply>
 80028f4:	9902      	ldr	r1, [sp, #8]
 80028f6:	4680      	mov	r8, r0
 80028f8:	4648      	mov	r0, r9
 80028fa:	f000 fc9f 	bl	800323c <_Bfree>
 80028fe:	9b08      	ldr	r3, [sp, #32]
 8002900:	1b1b      	subs	r3, r3, r4
 8002902:	9308      	str	r3, [sp, #32]
 8002904:	f000 80b1 	beq.w	8002a6a <_dtoa_r+0x8ea>
 8002908:	9a08      	ldr	r2, [sp, #32]
 800290a:	4641      	mov	r1, r8
 800290c:	4648      	mov	r0, r9
 800290e:	f000 fe01 	bl	8003514 <__pow5mult>
 8002912:	9002      	str	r0, [sp, #8]
 8002914:	2101      	movs	r1, #1
 8002916:	4648      	mov	r0, r9
 8002918:	f000 fd44 	bl	80033a4 <__i2b>
 800291c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800291e:	4604      	mov	r4, r0
 8002920:	2b00      	cmp	r3, #0
 8002922:	f000 81d8 	beq.w	8002cd6 <_dtoa_r+0xb56>
 8002926:	461a      	mov	r2, r3
 8002928:	4601      	mov	r1, r0
 800292a:	4648      	mov	r0, r9
 800292c:	f000 fdf2 	bl	8003514 <__pow5mult>
 8002930:	9b07      	ldr	r3, [sp, #28]
 8002932:	2b01      	cmp	r3, #1
 8002934:	4604      	mov	r4, r0
 8002936:	f300 809f 	bgt.w	8002a78 <_dtoa_r+0x8f8>
 800293a:	9b04      	ldr	r3, [sp, #16]
 800293c:	2b00      	cmp	r3, #0
 800293e:	f040 8097 	bne.w	8002a70 <_dtoa_r+0x8f0>
 8002942:	9b05      	ldr	r3, [sp, #20]
 8002944:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002948:	2b00      	cmp	r3, #0
 800294a:	f040 8093 	bne.w	8002a74 <_dtoa_r+0x8f4>
 800294e:	9b05      	ldr	r3, [sp, #20]
 8002950:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002954:	0d1b      	lsrs	r3, r3, #20
 8002956:	051b      	lsls	r3, r3, #20
 8002958:	b133      	cbz	r3, 8002968 <_dtoa_r+0x7e8>
 800295a:	9b00      	ldr	r3, [sp, #0]
 800295c:	3301      	adds	r3, #1
 800295e:	9300      	str	r3, [sp, #0]
 8002960:	9b06      	ldr	r3, [sp, #24]
 8002962:	3301      	adds	r3, #1
 8002964:	9306      	str	r3, [sp, #24]
 8002966:	2301      	movs	r3, #1
 8002968:	9308      	str	r3, [sp, #32]
 800296a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800296c:	2b00      	cmp	r3, #0
 800296e:	f000 81b8 	beq.w	8002ce2 <_dtoa_r+0xb62>
 8002972:	6923      	ldr	r3, [r4, #16]
 8002974:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002978:	6918      	ldr	r0, [r3, #16]
 800297a:	f000 fcc7 	bl	800330c <__hi0bits>
 800297e:	f1c0 0020 	rsb	r0, r0, #32
 8002982:	9b06      	ldr	r3, [sp, #24]
 8002984:	4418      	add	r0, r3
 8002986:	f010 001f 	ands.w	r0, r0, #31
 800298a:	f000 8082 	beq.w	8002a92 <_dtoa_r+0x912>
 800298e:	f1c0 0320 	rsb	r3, r0, #32
 8002992:	2b04      	cmp	r3, #4
 8002994:	dd73      	ble.n	8002a7e <_dtoa_r+0x8fe>
 8002996:	9b00      	ldr	r3, [sp, #0]
 8002998:	f1c0 001c 	rsb	r0, r0, #28
 800299c:	4403      	add	r3, r0
 800299e:	9300      	str	r3, [sp, #0]
 80029a0:	9b06      	ldr	r3, [sp, #24]
 80029a2:	4403      	add	r3, r0
 80029a4:	4406      	add	r6, r0
 80029a6:	9306      	str	r3, [sp, #24]
 80029a8:	9b00      	ldr	r3, [sp, #0]
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	dd05      	ble.n	80029ba <_dtoa_r+0x83a>
 80029ae:	9902      	ldr	r1, [sp, #8]
 80029b0:	461a      	mov	r2, r3
 80029b2:	4648      	mov	r0, r9
 80029b4:	f000 fe08 	bl	80035c8 <__lshift>
 80029b8:	9002      	str	r0, [sp, #8]
 80029ba:	9b06      	ldr	r3, [sp, #24]
 80029bc:	2b00      	cmp	r3, #0
 80029be:	dd05      	ble.n	80029cc <_dtoa_r+0x84c>
 80029c0:	4621      	mov	r1, r4
 80029c2:	461a      	mov	r2, r3
 80029c4:	4648      	mov	r0, r9
 80029c6:	f000 fdff 	bl	80035c8 <__lshift>
 80029ca:	4604      	mov	r4, r0
 80029cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d061      	beq.n	8002a96 <_dtoa_r+0x916>
 80029d2:	9802      	ldr	r0, [sp, #8]
 80029d4:	4621      	mov	r1, r4
 80029d6:	f000 fe63 	bl	80036a0 <__mcmp>
 80029da:	2800      	cmp	r0, #0
 80029dc:	da5b      	bge.n	8002a96 <_dtoa_r+0x916>
 80029de:	2300      	movs	r3, #0
 80029e0:	9902      	ldr	r1, [sp, #8]
 80029e2:	220a      	movs	r2, #10
 80029e4:	4648      	mov	r0, r9
 80029e6:	f000 fc4b 	bl	8003280 <__multadd>
 80029ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80029ec:	9002      	str	r0, [sp, #8]
 80029ee:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	f000 8177 	beq.w	8002ce6 <_dtoa_r+0xb66>
 80029f8:	4629      	mov	r1, r5
 80029fa:	2300      	movs	r3, #0
 80029fc:	220a      	movs	r2, #10
 80029fe:	4648      	mov	r0, r9
 8002a00:	f000 fc3e 	bl	8003280 <__multadd>
 8002a04:	f1bb 0f00 	cmp.w	fp, #0
 8002a08:	4605      	mov	r5, r0
 8002a0a:	dc6f      	bgt.n	8002aec <_dtoa_r+0x96c>
 8002a0c:	9b07      	ldr	r3, [sp, #28]
 8002a0e:	2b02      	cmp	r3, #2
 8002a10:	dc49      	bgt.n	8002aa6 <_dtoa_r+0x926>
 8002a12:	e06b      	b.n	8002aec <_dtoa_r+0x96c>
 8002a14:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002a16:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002a1a:	e73c      	b.n	8002896 <_dtoa_r+0x716>
 8002a1c:	3fe00000 	.word	0x3fe00000
 8002a20:	40240000 	.word	0x40240000
 8002a24:	9b03      	ldr	r3, [sp, #12]
 8002a26:	1e5c      	subs	r4, r3, #1
 8002a28:	9b08      	ldr	r3, [sp, #32]
 8002a2a:	42a3      	cmp	r3, r4
 8002a2c:	db09      	blt.n	8002a42 <_dtoa_r+0x8c2>
 8002a2e:	1b1c      	subs	r4, r3, r4
 8002a30:	9b03      	ldr	r3, [sp, #12]
 8002a32:	2b00      	cmp	r3, #0
 8002a34:	f6bf af30 	bge.w	8002898 <_dtoa_r+0x718>
 8002a38:	9b00      	ldr	r3, [sp, #0]
 8002a3a:	9a03      	ldr	r2, [sp, #12]
 8002a3c:	1a9e      	subs	r6, r3, r2
 8002a3e:	2300      	movs	r3, #0
 8002a40:	e72b      	b.n	800289a <_dtoa_r+0x71a>
 8002a42:	9b08      	ldr	r3, [sp, #32]
 8002a44:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8002a46:	9408      	str	r4, [sp, #32]
 8002a48:	1ae3      	subs	r3, r4, r3
 8002a4a:	441a      	add	r2, r3
 8002a4c:	9e00      	ldr	r6, [sp, #0]
 8002a4e:	9b03      	ldr	r3, [sp, #12]
 8002a50:	920d      	str	r2, [sp, #52]	@ 0x34
 8002a52:	2400      	movs	r4, #0
 8002a54:	e721      	b.n	800289a <_dtoa_r+0x71a>
 8002a56:	9c08      	ldr	r4, [sp, #32]
 8002a58:	9e00      	ldr	r6, [sp, #0]
 8002a5a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8002a5c:	e728      	b.n	80028b0 <_dtoa_r+0x730>
 8002a5e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8002a62:	e751      	b.n	8002908 <_dtoa_r+0x788>
 8002a64:	9a08      	ldr	r2, [sp, #32]
 8002a66:	9902      	ldr	r1, [sp, #8]
 8002a68:	e750      	b.n	800290c <_dtoa_r+0x78c>
 8002a6a:	f8cd 8008 	str.w	r8, [sp, #8]
 8002a6e:	e751      	b.n	8002914 <_dtoa_r+0x794>
 8002a70:	2300      	movs	r3, #0
 8002a72:	e779      	b.n	8002968 <_dtoa_r+0x7e8>
 8002a74:	9b04      	ldr	r3, [sp, #16]
 8002a76:	e777      	b.n	8002968 <_dtoa_r+0x7e8>
 8002a78:	2300      	movs	r3, #0
 8002a7a:	9308      	str	r3, [sp, #32]
 8002a7c:	e779      	b.n	8002972 <_dtoa_r+0x7f2>
 8002a7e:	d093      	beq.n	80029a8 <_dtoa_r+0x828>
 8002a80:	9a00      	ldr	r2, [sp, #0]
 8002a82:	331c      	adds	r3, #28
 8002a84:	441a      	add	r2, r3
 8002a86:	9200      	str	r2, [sp, #0]
 8002a88:	9a06      	ldr	r2, [sp, #24]
 8002a8a:	441a      	add	r2, r3
 8002a8c:	441e      	add	r6, r3
 8002a8e:	9206      	str	r2, [sp, #24]
 8002a90:	e78a      	b.n	80029a8 <_dtoa_r+0x828>
 8002a92:	4603      	mov	r3, r0
 8002a94:	e7f4      	b.n	8002a80 <_dtoa_r+0x900>
 8002a96:	9b03      	ldr	r3, [sp, #12]
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	46b8      	mov	r8, r7
 8002a9c:	dc20      	bgt.n	8002ae0 <_dtoa_r+0x960>
 8002a9e:	469b      	mov	fp, r3
 8002aa0:	9b07      	ldr	r3, [sp, #28]
 8002aa2:	2b02      	cmp	r3, #2
 8002aa4:	dd1e      	ble.n	8002ae4 <_dtoa_r+0x964>
 8002aa6:	f1bb 0f00 	cmp.w	fp, #0
 8002aaa:	f47f adb1 	bne.w	8002610 <_dtoa_r+0x490>
 8002aae:	4621      	mov	r1, r4
 8002ab0:	465b      	mov	r3, fp
 8002ab2:	2205      	movs	r2, #5
 8002ab4:	4648      	mov	r0, r9
 8002ab6:	f000 fbe3 	bl	8003280 <__multadd>
 8002aba:	4601      	mov	r1, r0
 8002abc:	4604      	mov	r4, r0
 8002abe:	9802      	ldr	r0, [sp, #8]
 8002ac0:	f000 fdee 	bl	80036a0 <__mcmp>
 8002ac4:	2800      	cmp	r0, #0
 8002ac6:	f77f ada3 	ble.w	8002610 <_dtoa_r+0x490>
 8002aca:	4656      	mov	r6, sl
 8002acc:	2331      	movs	r3, #49	@ 0x31
 8002ace:	f806 3b01 	strb.w	r3, [r6], #1
 8002ad2:	f108 0801 	add.w	r8, r8, #1
 8002ad6:	e59f      	b.n	8002618 <_dtoa_r+0x498>
 8002ad8:	9c03      	ldr	r4, [sp, #12]
 8002ada:	46b8      	mov	r8, r7
 8002adc:	4625      	mov	r5, r4
 8002ade:	e7f4      	b.n	8002aca <_dtoa_r+0x94a>
 8002ae0:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8002ae4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	f000 8101 	beq.w	8002cee <_dtoa_r+0xb6e>
 8002aec:	2e00      	cmp	r6, #0
 8002aee:	dd05      	ble.n	8002afc <_dtoa_r+0x97c>
 8002af0:	4629      	mov	r1, r5
 8002af2:	4632      	mov	r2, r6
 8002af4:	4648      	mov	r0, r9
 8002af6:	f000 fd67 	bl	80035c8 <__lshift>
 8002afa:	4605      	mov	r5, r0
 8002afc:	9b08      	ldr	r3, [sp, #32]
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d05c      	beq.n	8002bbc <_dtoa_r+0xa3c>
 8002b02:	6869      	ldr	r1, [r5, #4]
 8002b04:	4648      	mov	r0, r9
 8002b06:	f000 fb59 	bl	80031bc <_Balloc>
 8002b0a:	4606      	mov	r6, r0
 8002b0c:	b928      	cbnz	r0, 8002b1a <_dtoa_r+0x99a>
 8002b0e:	4b82      	ldr	r3, [pc, #520]	@ (8002d18 <_dtoa_r+0xb98>)
 8002b10:	4602      	mov	r2, r0
 8002b12:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002b16:	f7ff bb4a 	b.w	80021ae <_dtoa_r+0x2e>
 8002b1a:	692a      	ldr	r2, [r5, #16]
 8002b1c:	3202      	adds	r2, #2
 8002b1e:	0092      	lsls	r2, r2, #2
 8002b20:	f105 010c 	add.w	r1, r5, #12
 8002b24:	300c      	adds	r0, #12
 8002b26:	f000 ff95 	bl	8003a54 <memcpy>
 8002b2a:	2201      	movs	r2, #1
 8002b2c:	4631      	mov	r1, r6
 8002b2e:	4648      	mov	r0, r9
 8002b30:	f000 fd4a 	bl	80035c8 <__lshift>
 8002b34:	f10a 0301 	add.w	r3, sl, #1
 8002b38:	9300      	str	r3, [sp, #0]
 8002b3a:	eb0a 030b 	add.w	r3, sl, fp
 8002b3e:	9308      	str	r3, [sp, #32]
 8002b40:	9b04      	ldr	r3, [sp, #16]
 8002b42:	f003 0301 	and.w	r3, r3, #1
 8002b46:	462f      	mov	r7, r5
 8002b48:	9306      	str	r3, [sp, #24]
 8002b4a:	4605      	mov	r5, r0
 8002b4c:	9b00      	ldr	r3, [sp, #0]
 8002b4e:	9802      	ldr	r0, [sp, #8]
 8002b50:	4621      	mov	r1, r4
 8002b52:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 8002b56:	f7ff fa8b 	bl	8002070 <quorem>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	3330      	adds	r3, #48	@ 0x30
 8002b5e:	9003      	str	r0, [sp, #12]
 8002b60:	4639      	mov	r1, r7
 8002b62:	9802      	ldr	r0, [sp, #8]
 8002b64:	9309      	str	r3, [sp, #36]	@ 0x24
 8002b66:	f000 fd9b 	bl	80036a0 <__mcmp>
 8002b6a:	462a      	mov	r2, r5
 8002b6c:	9004      	str	r0, [sp, #16]
 8002b6e:	4621      	mov	r1, r4
 8002b70:	4648      	mov	r0, r9
 8002b72:	f000 fdb1 	bl	80036d8 <__mdiff>
 8002b76:	68c2      	ldr	r2, [r0, #12]
 8002b78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002b7a:	4606      	mov	r6, r0
 8002b7c:	bb02      	cbnz	r2, 8002bc0 <_dtoa_r+0xa40>
 8002b7e:	4601      	mov	r1, r0
 8002b80:	9802      	ldr	r0, [sp, #8]
 8002b82:	f000 fd8d 	bl	80036a0 <__mcmp>
 8002b86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002b88:	4602      	mov	r2, r0
 8002b8a:	4631      	mov	r1, r6
 8002b8c:	4648      	mov	r0, r9
 8002b8e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002b90:	9309      	str	r3, [sp, #36]	@ 0x24
 8002b92:	f000 fb53 	bl	800323c <_Bfree>
 8002b96:	9b07      	ldr	r3, [sp, #28]
 8002b98:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002b9a:	9e00      	ldr	r6, [sp, #0]
 8002b9c:	ea42 0103 	orr.w	r1, r2, r3
 8002ba0:	9b06      	ldr	r3, [sp, #24]
 8002ba2:	4319      	orrs	r1, r3
 8002ba4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ba6:	d10d      	bne.n	8002bc4 <_dtoa_r+0xa44>
 8002ba8:	2b39      	cmp	r3, #57	@ 0x39
 8002baa:	d027      	beq.n	8002bfc <_dtoa_r+0xa7c>
 8002bac:	9a04      	ldr	r2, [sp, #16]
 8002bae:	2a00      	cmp	r2, #0
 8002bb0:	dd01      	ble.n	8002bb6 <_dtoa_r+0xa36>
 8002bb2:	9b03      	ldr	r3, [sp, #12]
 8002bb4:	3331      	adds	r3, #49	@ 0x31
 8002bb6:	f88b 3000 	strb.w	r3, [fp]
 8002bba:	e52e      	b.n	800261a <_dtoa_r+0x49a>
 8002bbc:	4628      	mov	r0, r5
 8002bbe:	e7b9      	b.n	8002b34 <_dtoa_r+0x9b4>
 8002bc0:	2201      	movs	r2, #1
 8002bc2:	e7e2      	b.n	8002b8a <_dtoa_r+0xa0a>
 8002bc4:	9904      	ldr	r1, [sp, #16]
 8002bc6:	2900      	cmp	r1, #0
 8002bc8:	db04      	blt.n	8002bd4 <_dtoa_r+0xa54>
 8002bca:	9807      	ldr	r0, [sp, #28]
 8002bcc:	4301      	orrs	r1, r0
 8002bce:	9806      	ldr	r0, [sp, #24]
 8002bd0:	4301      	orrs	r1, r0
 8002bd2:	d120      	bne.n	8002c16 <_dtoa_r+0xa96>
 8002bd4:	2a00      	cmp	r2, #0
 8002bd6:	ddee      	ble.n	8002bb6 <_dtoa_r+0xa36>
 8002bd8:	9902      	ldr	r1, [sp, #8]
 8002bda:	9300      	str	r3, [sp, #0]
 8002bdc:	2201      	movs	r2, #1
 8002bde:	4648      	mov	r0, r9
 8002be0:	f000 fcf2 	bl	80035c8 <__lshift>
 8002be4:	4621      	mov	r1, r4
 8002be6:	9002      	str	r0, [sp, #8]
 8002be8:	f000 fd5a 	bl	80036a0 <__mcmp>
 8002bec:	2800      	cmp	r0, #0
 8002bee:	9b00      	ldr	r3, [sp, #0]
 8002bf0:	dc02      	bgt.n	8002bf8 <_dtoa_r+0xa78>
 8002bf2:	d1e0      	bne.n	8002bb6 <_dtoa_r+0xa36>
 8002bf4:	07da      	lsls	r2, r3, #31
 8002bf6:	d5de      	bpl.n	8002bb6 <_dtoa_r+0xa36>
 8002bf8:	2b39      	cmp	r3, #57	@ 0x39
 8002bfa:	d1da      	bne.n	8002bb2 <_dtoa_r+0xa32>
 8002bfc:	2339      	movs	r3, #57	@ 0x39
 8002bfe:	f88b 3000 	strb.w	r3, [fp]
 8002c02:	4633      	mov	r3, r6
 8002c04:	461e      	mov	r6, r3
 8002c06:	3b01      	subs	r3, #1
 8002c08:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002c0c:	2a39      	cmp	r2, #57	@ 0x39
 8002c0e:	d04e      	beq.n	8002cae <_dtoa_r+0xb2e>
 8002c10:	3201      	adds	r2, #1
 8002c12:	701a      	strb	r2, [r3, #0]
 8002c14:	e501      	b.n	800261a <_dtoa_r+0x49a>
 8002c16:	2a00      	cmp	r2, #0
 8002c18:	dd03      	ble.n	8002c22 <_dtoa_r+0xaa2>
 8002c1a:	2b39      	cmp	r3, #57	@ 0x39
 8002c1c:	d0ee      	beq.n	8002bfc <_dtoa_r+0xa7c>
 8002c1e:	3301      	adds	r3, #1
 8002c20:	e7c9      	b.n	8002bb6 <_dtoa_r+0xa36>
 8002c22:	9a00      	ldr	r2, [sp, #0]
 8002c24:	9908      	ldr	r1, [sp, #32]
 8002c26:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002c2a:	428a      	cmp	r2, r1
 8002c2c:	d028      	beq.n	8002c80 <_dtoa_r+0xb00>
 8002c2e:	9902      	ldr	r1, [sp, #8]
 8002c30:	2300      	movs	r3, #0
 8002c32:	220a      	movs	r2, #10
 8002c34:	4648      	mov	r0, r9
 8002c36:	f000 fb23 	bl	8003280 <__multadd>
 8002c3a:	42af      	cmp	r7, r5
 8002c3c:	9002      	str	r0, [sp, #8]
 8002c3e:	f04f 0300 	mov.w	r3, #0
 8002c42:	f04f 020a 	mov.w	r2, #10
 8002c46:	4639      	mov	r1, r7
 8002c48:	4648      	mov	r0, r9
 8002c4a:	d107      	bne.n	8002c5c <_dtoa_r+0xadc>
 8002c4c:	f000 fb18 	bl	8003280 <__multadd>
 8002c50:	4607      	mov	r7, r0
 8002c52:	4605      	mov	r5, r0
 8002c54:	9b00      	ldr	r3, [sp, #0]
 8002c56:	3301      	adds	r3, #1
 8002c58:	9300      	str	r3, [sp, #0]
 8002c5a:	e777      	b.n	8002b4c <_dtoa_r+0x9cc>
 8002c5c:	f000 fb10 	bl	8003280 <__multadd>
 8002c60:	4629      	mov	r1, r5
 8002c62:	4607      	mov	r7, r0
 8002c64:	2300      	movs	r3, #0
 8002c66:	220a      	movs	r2, #10
 8002c68:	4648      	mov	r0, r9
 8002c6a:	f000 fb09 	bl	8003280 <__multadd>
 8002c6e:	4605      	mov	r5, r0
 8002c70:	e7f0      	b.n	8002c54 <_dtoa_r+0xad4>
 8002c72:	f1bb 0f00 	cmp.w	fp, #0
 8002c76:	bfcc      	ite	gt
 8002c78:	465e      	movgt	r6, fp
 8002c7a:	2601      	movle	r6, #1
 8002c7c:	4456      	add	r6, sl
 8002c7e:	2700      	movs	r7, #0
 8002c80:	9902      	ldr	r1, [sp, #8]
 8002c82:	9300      	str	r3, [sp, #0]
 8002c84:	2201      	movs	r2, #1
 8002c86:	4648      	mov	r0, r9
 8002c88:	f000 fc9e 	bl	80035c8 <__lshift>
 8002c8c:	4621      	mov	r1, r4
 8002c8e:	9002      	str	r0, [sp, #8]
 8002c90:	f000 fd06 	bl	80036a0 <__mcmp>
 8002c94:	2800      	cmp	r0, #0
 8002c96:	dcb4      	bgt.n	8002c02 <_dtoa_r+0xa82>
 8002c98:	d102      	bne.n	8002ca0 <_dtoa_r+0xb20>
 8002c9a:	9b00      	ldr	r3, [sp, #0]
 8002c9c:	07db      	lsls	r3, r3, #31
 8002c9e:	d4b0      	bmi.n	8002c02 <_dtoa_r+0xa82>
 8002ca0:	4633      	mov	r3, r6
 8002ca2:	461e      	mov	r6, r3
 8002ca4:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002ca8:	2a30      	cmp	r2, #48	@ 0x30
 8002caa:	d0fa      	beq.n	8002ca2 <_dtoa_r+0xb22>
 8002cac:	e4b5      	b.n	800261a <_dtoa_r+0x49a>
 8002cae:	459a      	cmp	sl, r3
 8002cb0:	d1a8      	bne.n	8002c04 <_dtoa_r+0xa84>
 8002cb2:	2331      	movs	r3, #49	@ 0x31
 8002cb4:	f108 0801 	add.w	r8, r8, #1
 8002cb8:	f88a 3000 	strb.w	r3, [sl]
 8002cbc:	e4ad      	b.n	800261a <_dtoa_r+0x49a>
 8002cbe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002cc0:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8002d1c <_dtoa_r+0xb9c>
 8002cc4:	b11b      	cbz	r3, 8002cce <_dtoa_r+0xb4e>
 8002cc6:	f10a 0308 	add.w	r3, sl, #8
 8002cca:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002ccc:	6013      	str	r3, [r2, #0]
 8002cce:	4650      	mov	r0, sl
 8002cd0:	b017      	add	sp, #92	@ 0x5c
 8002cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cd6:	9b07      	ldr	r3, [sp, #28]
 8002cd8:	2b01      	cmp	r3, #1
 8002cda:	f77f ae2e 	ble.w	800293a <_dtoa_r+0x7ba>
 8002cde:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002ce0:	9308      	str	r3, [sp, #32]
 8002ce2:	2001      	movs	r0, #1
 8002ce4:	e64d      	b.n	8002982 <_dtoa_r+0x802>
 8002ce6:	f1bb 0f00 	cmp.w	fp, #0
 8002cea:	f77f aed9 	ble.w	8002aa0 <_dtoa_r+0x920>
 8002cee:	4656      	mov	r6, sl
 8002cf0:	9802      	ldr	r0, [sp, #8]
 8002cf2:	4621      	mov	r1, r4
 8002cf4:	f7ff f9bc 	bl	8002070 <quorem>
 8002cf8:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8002cfc:	f806 3b01 	strb.w	r3, [r6], #1
 8002d00:	eba6 020a 	sub.w	r2, r6, sl
 8002d04:	4593      	cmp	fp, r2
 8002d06:	ddb4      	ble.n	8002c72 <_dtoa_r+0xaf2>
 8002d08:	9902      	ldr	r1, [sp, #8]
 8002d0a:	2300      	movs	r3, #0
 8002d0c:	220a      	movs	r2, #10
 8002d0e:	4648      	mov	r0, r9
 8002d10:	f000 fab6 	bl	8003280 <__multadd>
 8002d14:	9002      	str	r0, [sp, #8]
 8002d16:	e7eb      	b.n	8002cf0 <_dtoa_r+0xb70>
 8002d18:	080042a5 	.word	0x080042a5
 8002d1c:	08004229 	.word	0x08004229

08002d20 <_free_r>:
 8002d20:	b538      	push	{r3, r4, r5, lr}
 8002d22:	4605      	mov	r5, r0
 8002d24:	2900      	cmp	r1, #0
 8002d26:	d041      	beq.n	8002dac <_free_r+0x8c>
 8002d28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002d2c:	1f0c      	subs	r4, r1, #4
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	bfb8      	it	lt
 8002d32:	18e4      	addlt	r4, r4, r3
 8002d34:	f7ff f862 	bl	8001dfc <__malloc_lock>
 8002d38:	4a1d      	ldr	r2, [pc, #116]	@ (8002db0 <_free_r+0x90>)
 8002d3a:	6813      	ldr	r3, [r2, #0]
 8002d3c:	b933      	cbnz	r3, 8002d4c <_free_r+0x2c>
 8002d3e:	6063      	str	r3, [r4, #4]
 8002d40:	6014      	str	r4, [r2, #0]
 8002d42:	4628      	mov	r0, r5
 8002d44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002d48:	f7ff b85e 	b.w	8001e08 <__malloc_unlock>
 8002d4c:	42a3      	cmp	r3, r4
 8002d4e:	d908      	bls.n	8002d62 <_free_r+0x42>
 8002d50:	6820      	ldr	r0, [r4, #0]
 8002d52:	1821      	adds	r1, r4, r0
 8002d54:	428b      	cmp	r3, r1
 8002d56:	bf01      	itttt	eq
 8002d58:	6819      	ldreq	r1, [r3, #0]
 8002d5a:	685b      	ldreq	r3, [r3, #4]
 8002d5c:	1809      	addeq	r1, r1, r0
 8002d5e:	6021      	streq	r1, [r4, #0]
 8002d60:	e7ed      	b.n	8002d3e <_free_r+0x1e>
 8002d62:	461a      	mov	r2, r3
 8002d64:	685b      	ldr	r3, [r3, #4]
 8002d66:	b10b      	cbz	r3, 8002d6c <_free_r+0x4c>
 8002d68:	42a3      	cmp	r3, r4
 8002d6a:	d9fa      	bls.n	8002d62 <_free_r+0x42>
 8002d6c:	6811      	ldr	r1, [r2, #0]
 8002d6e:	1850      	adds	r0, r2, r1
 8002d70:	42a0      	cmp	r0, r4
 8002d72:	d10b      	bne.n	8002d8c <_free_r+0x6c>
 8002d74:	6820      	ldr	r0, [r4, #0]
 8002d76:	4401      	add	r1, r0
 8002d78:	1850      	adds	r0, r2, r1
 8002d7a:	4283      	cmp	r3, r0
 8002d7c:	6011      	str	r1, [r2, #0]
 8002d7e:	d1e0      	bne.n	8002d42 <_free_r+0x22>
 8002d80:	6818      	ldr	r0, [r3, #0]
 8002d82:	685b      	ldr	r3, [r3, #4]
 8002d84:	6053      	str	r3, [r2, #4]
 8002d86:	4408      	add	r0, r1
 8002d88:	6010      	str	r0, [r2, #0]
 8002d8a:	e7da      	b.n	8002d42 <_free_r+0x22>
 8002d8c:	d902      	bls.n	8002d94 <_free_r+0x74>
 8002d8e:	230c      	movs	r3, #12
 8002d90:	602b      	str	r3, [r5, #0]
 8002d92:	e7d6      	b.n	8002d42 <_free_r+0x22>
 8002d94:	6820      	ldr	r0, [r4, #0]
 8002d96:	1821      	adds	r1, r4, r0
 8002d98:	428b      	cmp	r3, r1
 8002d9a:	bf04      	itt	eq
 8002d9c:	6819      	ldreq	r1, [r3, #0]
 8002d9e:	685b      	ldreq	r3, [r3, #4]
 8002da0:	6063      	str	r3, [r4, #4]
 8002da2:	bf04      	itt	eq
 8002da4:	1809      	addeq	r1, r1, r0
 8002da6:	6021      	streq	r1, [r4, #0]
 8002da8:	6054      	str	r4, [r2, #4]
 8002daa:	e7ca      	b.n	8002d42 <_free_r+0x22>
 8002dac:	bd38      	pop	{r3, r4, r5, pc}
 8002dae:	bf00      	nop
 8002db0:	20000214 	.word	0x20000214

08002db4 <__ssputs_r>:
 8002db4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002db8:	688e      	ldr	r6, [r1, #8]
 8002dba:	461f      	mov	r7, r3
 8002dbc:	42be      	cmp	r6, r7
 8002dbe:	680b      	ldr	r3, [r1, #0]
 8002dc0:	4682      	mov	sl, r0
 8002dc2:	460c      	mov	r4, r1
 8002dc4:	4690      	mov	r8, r2
 8002dc6:	d82d      	bhi.n	8002e24 <__ssputs_r+0x70>
 8002dc8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8002dcc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8002dd0:	d026      	beq.n	8002e20 <__ssputs_r+0x6c>
 8002dd2:	6965      	ldr	r5, [r4, #20]
 8002dd4:	6909      	ldr	r1, [r1, #16]
 8002dd6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002dda:	eba3 0901 	sub.w	r9, r3, r1
 8002dde:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002de2:	1c7b      	adds	r3, r7, #1
 8002de4:	444b      	add	r3, r9
 8002de6:	106d      	asrs	r5, r5, #1
 8002de8:	429d      	cmp	r5, r3
 8002dea:	bf38      	it	cc
 8002dec:	461d      	movcc	r5, r3
 8002dee:	0553      	lsls	r3, r2, #21
 8002df0:	d527      	bpl.n	8002e42 <__ssputs_r+0x8e>
 8002df2:	4629      	mov	r1, r5
 8002df4:	f7fe fdf6 	bl	80019e4 <_malloc_r>
 8002df8:	4606      	mov	r6, r0
 8002dfa:	b360      	cbz	r0, 8002e56 <__ssputs_r+0xa2>
 8002dfc:	6921      	ldr	r1, [r4, #16]
 8002dfe:	464a      	mov	r2, r9
 8002e00:	f000 fe28 	bl	8003a54 <memcpy>
 8002e04:	89a3      	ldrh	r3, [r4, #12]
 8002e06:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8002e0a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002e0e:	81a3      	strh	r3, [r4, #12]
 8002e10:	6126      	str	r6, [r4, #16]
 8002e12:	6165      	str	r5, [r4, #20]
 8002e14:	444e      	add	r6, r9
 8002e16:	eba5 0509 	sub.w	r5, r5, r9
 8002e1a:	6026      	str	r6, [r4, #0]
 8002e1c:	60a5      	str	r5, [r4, #8]
 8002e1e:	463e      	mov	r6, r7
 8002e20:	42be      	cmp	r6, r7
 8002e22:	d900      	bls.n	8002e26 <__ssputs_r+0x72>
 8002e24:	463e      	mov	r6, r7
 8002e26:	6820      	ldr	r0, [r4, #0]
 8002e28:	4632      	mov	r2, r6
 8002e2a:	4641      	mov	r1, r8
 8002e2c:	f000 fdb1 	bl	8003992 <memmove>
 8002e30:	68a3      	ldr	r3, [r4, #8]
 8002e32:	1b9b      	subs	r3, r3, r6
 8002e34:	60a3      	str	r3, [r4, #8]
 8002e36:	6823      	ldr	r3, [r4, #0]
 8002e38:	4433      	add	r3, r6
 8002e3a:	6023      	str	r3, [r4, #0]
 8002e3c:	2000      	movs	r0, #0
 8002e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e42:	462a      	mov	r2, r5
 8002e44:	f000 fd77 	bl	8003936 <_realloc_r>
 8002e48:	4606      	mov	r6, r0
 8002e4a:	2800      	cmp	r0, #0
 8002e4c:	d1e0      	bne.n	8002e10 <__ssputs_r+0x5c>
 8002e4e:	6921      	ldr	r1, [r4, #16]
 8002e50:	4650      	mov	r0, sl
 8002e52:	f7ff ff65 	bl	8002d20 <_free_r>
 8002e56:	230c      	movs	r3, #12
 8002e58:	f8ca 3000 	str.w	r3, [sl]
 8002e5c:	89a3      	ldrh	r3, [r4, #12]
 8002e5e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002e62:	81a3      	strh	r3, [r4, #12]
 8002e64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002e68:	e7e9      	b.n	8002e3e <__ssputs_r+0x8a>
	...

08002e6c <_svfiprintf_r>:
 8002e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e70:	4698      	mov	r8, r3
 8002e72:	898b      	ldrh	r3, [r1, #12]
 8002e74:	061b      	lsls	r3, r3, #24
 8002e76:	b09d      	sub	sp, #116	@ 0x74
 8002e78:	4607      	mov	r7, r0
 8002e7a:	460d      	mov	r5, r1
 8002e7c:	4614      	mov	r4, r2
 8002e7e:	d510      	bpl.n	8002ea2 <_svfiprintf_r+0x36>
 8002e80:	690b      	ldr	r3, [r1, #16]
 8002e82:	b973      	cbnz	r3, 8002ea2 <_svfiprintf_r+0x36>
 8002e84:	2140      	movs	r1, #64	@ 0x40
 8002e86:	f7fe fdad 	bl	80019e4 <_malloc_r>
 8002e8a:	6028      	str	r0, [r5, #0]
 8002e8c:	6128      	str	r0, [r5, #16]
 8002e8e:	b930      	cbnz	r0, 8002e9e <_svfiprintf_r+0x32>
 8002e90:	230c      	movs	r3, #12
 8002e92:	603b      	str	r3, [r7, #0]
 8002e94:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002e98:	b01d      	add	sp, #116	@ 0x74
 8002e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e9e:	2340      	movs	r3, #64	@ 0x40
 8002ea0:	616b      	str	r3, [r5, #20]
 8002ea2:	2300      	movs	r3, #0
 8002ea4:	9309      	str	r3, [sp, #36]	@ 0x24
 8002ea6:	2320      	movs	r3, #32
 8002ea8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8002eac:	f8cd 800c 	str.w	r8, [sp, #12]
 8002eb0:	2330      	movs	r3, #48	@ 0x30
 8002eb2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003050 <_svfiprintf_r+0x1e4>
 8002eb6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8002eba:	f04f 0901 	mov.w	r9, #1
 8002ebe:	4623      	mov	r3, r4
 8002ec0:	469a      	mov	sl, r3
 8002ec2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002ec6:	b10a      	cbz	r2, 8002ecc <_svfiprintf_r+0x60>
 8002ec8:	2a25      	cmp	r2, #37	@ 0x25
 8002eca:	d1f9      	bne.n	8002ec0 <_svfiprintf_r+0x54>
 8002ecc:	ebba 0b04 	subs.w	fp, sl, r4
 8002ed0:	d00b      	beq.n	8002eea <_svfiprintf_r+0x7e>
 8002ed2:	465b      	mov	r3, fp
 8002ed4:	4622      	mov	r2, r4
 8002ed6:	4629      	mov	r1, r5
 8002ed8:	4638      	mov	r0, r7
 8002eda:	f7ff ff6b 	bl	8002db4 <__ssputs_r>
 8002ede:	3001      	adds	r0, #1
 8002ee0:	f000 80a7 	beq.w	8003032 <_svfiprintf_r+0x1c6>
 8002ee4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002ee6:	445a      	add	r2, fp
 8002ee8:	9209      	str	r2, [sp, #36]	@ 0x24
 8002eea:	f89a 3000 	ldrb.w	r3, [sl]
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	f000 809f 	beq.w	8003032 <_svfiprintf_r+0x1c6>
 8002ef4:	2300      	movs	r3, #0
 8002ef6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8002efa:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002efe:	f10a 0a01 	add.w	sl, sl, #1
 8002f02:	9304      	str	r3, [sp, #16]
 8002f04:	9307      	str	r3, [sp, #28]
 8002f06:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8002f0a:	931a      	str	r3, [sp, #104]	@ 0x68
 8002f0c:	4654      	mov	r4, sl
 8002f0e:	2205      	movs	r2, #5
 8002f10:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002f14:	484e      	ldr	r0, [pc, #312]	@ (8003050 <_svfiprintf_r+0x1e4>)
 8002f16:	f7fd f963 	bl	80001e0 <memchr>
 8002f1a:	9a04      	ldr	r2, [sp, #16]
 8002f1c:	b9d8      	cbnz	r0, 8002f56 <_svfiprintf_r+0xea>
 8002f1e:	06d0      	lsls	r0, r2, #27
 8002f20:	bf44      	itt	mi
 8002f22:	2320      	movmi	r3, #32
 8002f24:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8002f28:	0711      	lsls	r1, r2, #28
 8002f2a:	bf44      	itt	mi
 8002f2c:	232b      	movmi	r3, #43	@ 0x2b
 8002f2e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8002f32:	f89a 3000 	ldrb.w	r3, [sl]
 8002f36:	2b2a      	cmp	r3, #42	@ 0x2a
 8002f38:	d015      	beq.n	8002f66 <_svfiprintf_r+0xfa>
 8002f3a:	9a07      	ldr	r2, [sp, #28]
 8002f3c:	4654      	mov	r4, sl
 8002f3e:	2000      	movs	r0, #0
 8002f40:	f04f 0c0a 	mov.w	ip, #10
 8002f44:	4621      	mov	r1, r4
 8002f46:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002f4a:	3b30      	subs	r3, #48	@ 0x30
 8002f4c:	2b09      	cmp	r3, #9
 8002f4e:	d94b      	bls.n	8002fe8 <_svfiprintf_r+0x17c>
 8002f50:	b1b0      	cbz	r0, 8002f80 <_svfiprintf_r+0x114>
 8002f52:	9207      	str	r2, [sp, #28]
 8002f54:	e014      	b.n	8002f80 <_svfiprintf_r+0x114>
 8002f56:	eba0 0308 	sub.w	r3, r0, r8
 8002f5a:	fa09 f303 	lsl.w	r3, r9, r3
 8002f5e:	4313      	orrs	r3, r2
 8002f60:	9304      	str	r3, [sp, #16]
 8002f62:	46a2      	mov	sl, r4
 8002f64:	e7d2      	b.n	8002f0c <_svfiprintf_r+0xa0>
 8002f66:	9b03      	ldr	r3, [sp, #12]
 8002f68:	1d19      	adds	r1, r3, #4
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	9103      	str	r1, [sp, #12]
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	bfbb      	ittet	lt
 8002f72:	425b      	neglt	r3, r3
 8002f74:	f042 0202 	orrlt.w	r2, r2, #2
 8002f78:	9307      	strge	r3, [sp, #28]
 8002f7a:	9307      	strlt	r3, [sp, #28]
 8002f7c:	bfb8      	it	lt
 8002f7e:	9204      	strlt	r2, [sp, #16]
 8002f80:	7823      	ldrb	r3, [r4, #0]
 8002f82:	2b2e      	cmp	r3, #46	@ 0x2e
 8002f84:	d10a      	bne.n	8002f9c <_svfiprintf_r+0x130>
 8002f86:	7863      	ldrb	r3, [r4, #1]
 8002f88:	2b2a      	cmp	r3, #42	@ 0x2a
 8002f8a:	d132      	bne.n	8002ff2 <_svfiprintf_r+0x186>
 8002f8c:	9b03      	ldr	r3, [sp, #12]
 8002f8e:	1d1a      	adds	r2, r3, #4
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	9203      	str	r2, [sp, #12]
 8002f94:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8002f98:	3402      	adds	r4, #2
 8002f9a:	9305      	str	r3, [sp, #20]
 8002f9c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003060 <_svfiprintf_r+0x1f4>
 8002fa0:	7821      	ldrb	r1, [r4, #0]
 8002fa2:	2203      	movs	r2, #3
 8002fa4:	4650      	mov	r0, sl
 8002fa6:	f7fd f91b 	bl	80001e0 <memchr>
 8002faa:	b138      	cbz	r0, 8002fbc <_svfiprintf_r+0x150>
 8002fac:	9b04      	ldr	r3, [sp, #16]
 8002fae:	eba0 000a 	sub.w	r0, r0, sl
 8002fb2:	2240      	movs	r2, #64	@ 0x40
 8002fb4:	4082      	lsls	r2, r0
 8002fb6:	4313      	orrs	r3, r2
 8002fb8:	3401      	adds	r4, #1
 8002fba:	9304      	str	r3, [sp, #16]
 8002fbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002fc0:	4824      	ldr	r0, [pc, #144]	@ (8003054 <_svfiprintf_r+0x1e8>)
 8002fc2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8002fc6:	2206      	movs	r2, #6
 8002fc8:	f7fd f90a 	bl	80001e0 <memchr>
 8002fcc:	2800      	cmp	r0, #0
 8002fce:	d036      	beq.n	800303e <_svfiprintf_r+0x1d2>
 8002fd0:	4b21      	ldr	r3, [pc, #132]	@ (8003058 <_svfiprintf_r+0x1ec>)
 8002fd2:	bb1b      	cbnz	r3, 800301c <_svfiprintf_r+0x1b0>
 8002fd4:	9b03      	ldr	r3, [sp, #12]
 8002fd6:	3307      	adds	r3, #7
 8002fd8:	f023 0307 	bic.w	r3, r3, #7
 8002fdc:	3308      	adds	r3, #8
 8002fde:	9303      	str	r3, [sp, #12]
 8002fe0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fe2:	4433      	add	r3, r6
 8002fe4:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fe6:	e76a      	b.n	8002ebe <_svfiprintf_r+0x52>
 8002fe8:	fb0c 3202 	mla	r2, ip, r2, r3
 8002fec:	460c      	mov	r4, r1
 8002fee:	2001      	movs	r0, #1
 8002ff0:	e7a8      	b.n	8002f44 <_svfiprintf_r+0xd8>
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	3401      	adds	r4, #1
 8002ff6:	9305      	str	r3, [sp, #20]
 8002ff8:	4619      	mov	r1, r3
 8002ffa:	f04f 0c0a 	mov.w	ip, #10
 8002ffe:	4620      	mov	r0, r4
 8003000:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003004:	3a30      	subs	r2, #48	@ 0x30
 8003006:	2a09      	cmp	r2, #9
 8003008:	d903      	bls.n	8003012 <_svfiprintf_r+0x1a6>
 800300a:	2b00      	cmp	r3, #0
 800300c:	d0c6      	beq.n	8002f9c <_svfiprintf_r+0x130>
 800300e:	9105      	str	r1, [sp, #20]
 8003010:	e7c4      	b.n	8002f9c <_svfiprintf_r+0x130>
 8003012:	fb0c 2101 	mla	r1, ip, r1, r2
 8003016:	4604      	mov	r4, r0
 8003018:	2301      	movs	r3, #1
 800301a:	e7f0      	b.n	8002ffe <_svfiprintf_r+0x192>
 800301c:	ab03      	add	r3, sp, #12
 800301e:	9300      	str	r3, [sp, #0]
 8003020:	462a      	mov	r2, r5
 8003022:	4b0e      	ldr	r3, [pc, #56]	@ (800305c <_svfiprintf_r+0x1f0>)
 8003024:	a904      	add	r1, sp, #16
 8003026:	4638      	mov	r0, r7
 8003028:	f7fe fa88 	bl	800153c <_printf_float>
 800302c:	1c42      	adds	r2, r0, #1
 800302e:	4606      	mov	r6, r0
 8003030:	d1d6      	bne.n	8002fe0 <_svfiprintf_r+0x174>
 8003032:	89ab      	ldrh	r3, [r5, #12]
 8003034:	065b      	lsls	r3, r3, #25
 8003036:	f53f af2d 	bmi.w	8002e94 <_svfiprintf_r+0x28>
 800303a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800303c:	e72c      	b.n	8002e98 <_svfiprintf_r+0x2c>
 800303e:	ab03      	add	r3, sp, #12
 8003040:	9300      	str	r3, [sp, #0]
 8003042:	462a      	mov	r2, r5
 8003044:	4b05      	ldr	r3, [pc, #20]	@ (800305c <_svfiprintf_r+0x1f0>)
 8003046:	a904      	add	r1, sp, #16
 8003048:	4638      	mov	r0, r7
 800304a:	f7fe fdb9 	bl	8001bc0 <_printf_i>
 800304e:	e7ed      	b.n	800302c <_svfiprintf_r+0x1c0>
 8003050:	080042b6 	.word	0x080042b6
 8003054:	080042c0 	.word	0x080042c0
 8003058:	0800153d 	.word	0x0800153d
 800305c:	08002db5 	.word	0x08002db5
 8003060:	080042bc 	.word	0x080042bc

08003064 <__sflush_r>:
 8003064:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800306c:	0716      	lsls	r6, r2, #28
 800306e:	4605      	mov	r5, r0
 8003070:	460c      	mov	r4, r1
 8003072:	d454      	bmi.n	800311e <__sflush_r+0xba>
 8003074:	684b      	ldr	r3, [r1, #4]
 8003076:	2b00      	cmp	r3, #0
 8003078:	dc02      	bgt.n	8003080 <__sflush_r+0x1c>
 800307a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800307c:	2b00      	cmp	r3, #0
 800307e:	dd48      	ble.n	8003112 <__sflush_r+0xae>
 8003080:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003082:	2e00      	cmp	r6, #0
 8003084:	d045      	beq.n	8003112 <__sflush_r+0xae>
 8003086:	2300      	movs	r3, #0
 8003088:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800308c:	682f      	ldr	r7, [r5, #0]
 800308e:	6a21      	ldr	r1, [r4, #32]
 8003090:	602b      	str	r3, [r5, #0]
 8003092:	d030      	beq.n	80030f6 <__sflush_r+0x92>
 8003094:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003096:	89a3      	ldrh	r3, [r4, #12]
 8003098:	0759      	lsls	r1, r3, #29
 800309a:	d505      	bpl.n	80030a8 <__sflush_r+0x44>
 800309c:	6863      	ldr	r3, [r4, #4]
 800309e:	1ad2      	subs	r2, r2, r3
 80030a0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80030a2:	b10b      	cbz	r3, 80030a8 <__sflush_r+0x44>
 80030a4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80030a6:	1ad2      	subs	r2, r2, r3
 80030a8:	2300      	movs	r3, #0
 80030aa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80030ac:	6a21      	ldr	r1, [r4, #32]
 80030ae:	4628      	mov	r0, r5
 80030b0:	47b0      	blx	r6
 80030b2:	1c43      	adds	r3, r0, #1
 80030b4:	89a3      	ldrh	r3, [r4, #12]
 80030b6:	d106      	bne.n	80030c6 <__sflush_r+0x62>
 80030b8:	6829      	ldr	r1, [r5, #0]
 80030ba:	291d      	cmp	r1, #29
 80030bc:	d82b      	bhi.n	8003116 <__sflush_r+0xb2>
 80030be:	4a2a      	ldr	r2, [pc, #168]	@ (8003168 <__sflush_r+0x104>)
 80030c0:	40ca      	lsrs	r2, r1
 80030c2:	07d6      	lsls	r6, r2, #31
 80030c4:	d527      	bpl.n	8003116 <__sflush_r+0xb2>
 80030c6:	2200      	movs	r2, #0
 80030c8:	6062      	str	r2, [r4, #4]
 80030ca:	04d9      	lsls	r1, r3, #19
 80030cc:	6922      	ldr	r2, [r4, #16]
 80030ce:	6022      	str	r2, [r4, #0]
 80030d0:	d504      	bpl.n	80030dc <__sflush_r+0x78>
 80030d2:	1c42      	adds	r2, r0, #1
 80030d4:	d101      	bne.n	80030da <__sflush_r+0x76>
 80030d6:	682b      	ldr	r3, [r5, #0]
 80030d8:	b903      	cbnz	r3, 80030dc <__sflush_r+0x78>
 80030da:	6560      	str	r0, [r4, #84]	@ 0x54
 80030dc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80030de:	602f      	str	r7, [r5, #0]
 80030e0:	b1b9      	cbz	r1, 8003112 <__sflush_r+0xae>
 80030e2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80030e6:	4299      	cmp	r1, r3
 80030e8:	d002      	beq.n	80030f0 <__sflush_r+0x8c>
 80030ea:	4628      	mov	r0, r5
 80030ec:	f7ff fe18 	bl	8002d20 <_free_r>
 80030f0:	2300      	movs	r3, #0
 80030f2:	6363      	str	r3, [r4, #52]	@ 0x34
 80030f4:	e00d      	b.n	8003112 <__sflush_r+0xae>
 80030f6:	2301      	movs	r3, #1
 80030f8:	4628      	mov	r0, r5
 80030fa:	47b0      	blx	r6
 80030fc:	4602      	mov	r2, r0
 80030fe:	1c50      	adds	r0, r2, #1
 8003100:	d1c9      	bne.n	8003096 <__sflush_r+0x32>
 8003102:	682b      	ldr	r3, [r5, #0]
 8003104:	2b00      	cmp	r3, #0
 8003106:	d0c6      	beq.n	8003096 <__sflush_r+0x32>
 8003108:	2b1d      	cmp	r3, #29
 800310a:	d001      	beq.n	8003110 <__sflush_r+0xac>
 800310c:	2b16      	cmp	r3, #22
 800310e:	d11e      	bne.n	800314e <__sflush_r+0xea>
 8003110:	602f      	str	r7, [r5, #0]
 8003112:	2000      	movs	r0, #0
 8003114:	e022      	b.n	800315c <__sflush_r+0xf8>
 8003116:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800311a:	b21b      	sxth	r3, r3
 800311c:	e01b      	b.n	8003156 <__sflush_r+0xf2>
 800311e:	690f      	ldr	r7, [r1, #16]
 8003120:	2f00      	cmp	r7, #0
 8003122:	d0f6      	beq.n	8003112 <__sflush_r+0xae>
 8003124:	0793      	lsls	r3, r2, #30
 8003126:	680e      	ldr	r6, [r1, #0]
 8003128:	bf08      	it	eq
 800312a:	694b      	ldreq	r3, [r1, #20]
 800312c:	600f      	str	r7, [r1, #0]
 800312e:	bf18      	it	ne
 8003130:	2300      	movne	r3, #0
 8003132:	eba6 0807 	sub.w	r8, r6, r7
 8003136:	608b      	str	r3, [r1, #8]
 8003138:	f1b8 0f00 	cmp.w	r8, #0
 800313c:	dde9      	ble.n	8003112 <__sflush_r+0xae>
 800313e:	6a21      	ldr	r1, [r4, #32]
 8003140:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003142:	4643      	mov	r3, r8
 8003144:	463a      	mov	r2, r7
 8003146:	4628      	mov	r0, r5
 8003148:	47b0      	blx	r6
 800314a:	2800      	cmp	r0, #0
 800314c:	dc08      	bgt.n	8003160 <__sflush_r+0xfc>
 800314e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003152:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003156:	81a3      	strh	r3, [r4, #12]
 8003158:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800315c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003160:	4407      	add	r7, r0
 8003162:	eba8 0800 	sub.w	r8, r8, r0
 8003166:	e7e7      	b.n	8003138 <__sflush_r+0xd4>
 8003168:	20400001 	.word	0x20400001

0800316c <_fflush_r>:
 800316c:	b538      	push	{r3, r4, r5, lr}
 800316e:	690b      	ldr	r3, [r1, #16]
 8003170:	4605      	mov	r5, r0
 8003172:	460c      	mov	r4, r1
 8003174:	b913      	cbnz	r3, 800317c <_fflush_r+0x10>
 8003176:	2500      	movs	r5, #0
 8003178:	4628      	mov	r0, r5
 800317a:	bd38      	pop	{r3, r4, r5, pc}
 800317c:	b118      	cbz	r0, 8003186 <_fflush_r+0x1a>
 800317e:	6a03      	ldr	r3, [r0, #32]
 8003180:	b90b      	cbnz	r3, 8003186 <_fflush_r+0x1a>
 8003182:	f7fe fef5 	bl	8001f70 <__sinit>
 8003186:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800318a:	2b00      	cmp	r3, #0
 800318c:	d0f3      	beq.n	8003176 <_fflush_r+0xa>
 800318e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003190:	07d0      	lsls	r0, r2, #31
 8003192:	d404      	bmi.n	800319e <_fflush_r+0x32>
 8003194:	0599      	lsls	r1, r3, #22
 8003196:	d402      	bmi.n	800319e <_fflush_r+0x32>
 8003198:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800319a:	f7fe ff62 	bl	8002062 <__retarget_lock_acquire_recursive>
 800319e:	4628      	mov	r0, r5
 80031a0:	4621      	mov	r1, r4
 80031a2:	f7ff ff5f 	bl	8003064 <__sflush_r>
 80031a6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80031a8:	07da      	lsls	r2, r3, #31
 80031aa:	4605      	mov	r5, r0
 80031ac:	d4e4      	bmi.n	8003178 <_fflush_r+0xc>
 80031ae:	89a3      	ldrh	r3, [r4, #12]
 80031b0:	059b      	lsls	r3, r3, #22
 80031b2:	d4e1      	bmi.n	8003178 <_fflush_r+0xc>
 80031b4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80031b6:	f7fe ff55 	bl	8002064 <__retarget_lock_release_recursive>
 80031ba:	e7dd      	b.n	8003178 <_fflush_r+0xc>

080031bc <_Balloc>:
 80031bc:	b570      	push	{r4, r5, r6, lr}
 80031be:	69c6      	ldr	r6, [r0, #28]
 80031c0:	4604      	mov	r4, r0
 80031c2:	460d      	mov	r5, r1
 80031c4:	b976      	cbnz	r6, 80031e4 <_Balloc+0x28>
 80031c6:	2010      	movs	r0, #16
 80031c8:	f7fe fbe2 	bl	8001990 <malloc>
 80031cc:	4602      	mov	r2, r0
 80031ce:	61e0      	str	r0, [r4, #28]
 80031d0:	b920      	cbnz	r0, 80031dc <_Balloc+0x20>
 80031d2:	4b18      	ldr	r3, [pc, #96]	@ (8003234 <_Balloc+0x78>)
 80031d4:	4818      	ldr	r0, [pc, #96]	@ (8003238 <_Balloc+0x7c>)
 80031d6:	216b      	movs	r1, #107	@ 0x6b
 80031d8:	f000 fc4a 	bl	8003a70 <__assert_func>
 80031dc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80031e0:	6006      	str	r6, [r0, #0]
 80031e2:	60c6      	str	r6, [r0, #12]
 80031e4:	69e6      	ldr	r6, [r4, #28]
 80031e6:	68f3      	ldr	r3, [r6, #12]
 80031e8:	b183      	cbz	r3, 800320c <_Balloc+0x50>
 80031ea:	69e3      	ldr	r3, [r4, #28]
 80031ec:	68db      	ldr	r3, [r3, #12]
 80031ee:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80031f2:	b9b8      	cbnz	r0, 8003224 <_Balloc+0x68>
 80031f4:	2101      	movs	r1, #1
 80031f6:	fa01 f605 	lsl.w	r6, r1, r5
 80031fa:	1d72      	adds	r2, r6, #5
 80031fc:	0092      	lsls	r2, r2, #2
 80031fe:	4620      	mov	r0, r4
 8003200:	f000 fc54 	bl	8003aac <_calloc_r>
 8003204:	b160      	cbz	r0, 8003220 <_Balloc+0x64>
 8003206:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800320a:	e00e      	b.n	800322a <_Balloc+0x6e>
 800320c:	2221      	movs	r2, #33	@ 0x21
 800320e:	2104      	movs	r1, #4
 8003210:	4620      	mov	r0, r4
 8003212:	f000 fc4b 	bl	8003aac <_calloc_r>
 8003216:	69e3      	ldr	r3, [r4, #28]
 8003218:	60f0      	str	r0, [r6, #12]
 800321a:	68db      	ldr	r3, [r3, #12]
 800321c:	2b00      	cmp	r3, #0
 800321e:	d1e4      	bne.n	80031ea <_Balloc+0x2e>
 8003220:	2000      	movs	r0, #0
 8003222:	bd70      	pop	{r4, r5, r6, pc}
 8003224:	6802      	ldr	r2, [r0, #0]
 8003226:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800322a:	2300      	movs	r3, #0
 800322c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003230:	e7f7      	b.n	8003222 <_Balloc+0x66>
 8003232:	bf00      	nop
 8003234:	08004236 	.word	0x08004236
 8003238:	080042c7 	.word	0x080042c7

0800323c <_Bfree>:
 800323c:	b570      	push	{r4, r5, r6, lr}
 800323e:	69c6      	ldr	r6, [r0, #28]
 8003240:	4605      	mov	r5, r0
 8003242:	460c      	mov	r4, r1
 8003244:	b976      	cbnz	r6, 8003264 <_Bfree+0x28>
 8003246:	2010      	movs	r0, #16
 8003248:	f7fe fba2 	bl	8001990 <malloc>
 800324c:	4602      	mov	r2, r0
 800324e:	61e8      	str	r0, [r5, #28]
 8003250:	b920      	cbnz	r0, 800325c <_Bfree+0x20>
 8003252:	4b09      	ldr	r3, [pc, #36]	@ (8003278 <_Bfree+0x3c>)
 8003254:	4809      	ldr	r0, [pc, #36]	@ (800327c <_Bfree+0x40>)
 8003256:	218f      	movs	r1, #143	@ 0x8f
 8003258:	f000 fc0a 	bl	8003a70 <__assert_func>
 800325c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003260:	6006      	str	r6, [r0, #0]
 8003262:	60c6      	str	r6, [r0, #12]
 8003264:	b13c      	cbz	r4, 8003276 <_Bfree+0x3a>
 8003266:	69eb      	ldr	r3, [r5, #28]
 8003268:	6862      	ldr	r2, [r4, #4]
 800326a:	68db      	ldr	r3, [r3, #12]
 800326c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003270:	6021      	str	r1, [r4, #0]
 8003272:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003276:	bd70      	pop	{r4, r5, r6, pc}
 8003278:	08004236 	.word	0x08004236
 800327c:	080042c7 	.word	0x080042c7

08003280 <__multadd>:
 8003280:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003284:	690d      	ldr	r5, [r1, #16]
 8003286:	4607      	mov	r7, r0
 8003288:	460c      	mov	r4, r1
 800328a:	461e      	mov	r6, r3
 800328c:	f101 0c14 	add.w	ip, r1, #20
 8003290:	2000      	movs	r0, #0
 8003292:	f8dc 3000 	ldr.w	r3, [ip]
 8003296:	b299      	uxth	r1, r3
 8003298:	fb02 6101 	mla	r1, r2, r1, r6
 800329c:	0c1e      	lsrs	r6, r3, #16
 800329e:	0c0b      	lsrs	r3, r1, #16
 80032a0:	fb02 3306 	mla	r3, r2, r6, r3
 80032a4:	b289      	uxth	r1, r1
 80032a6:	3001      	adds	r0, #1
 80032a8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80032ac:	4285      	cmp	r5, r0
 80032ae:	f84c 1b04 	str.w	r1, [ip], #4
 80032b2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80032b6:	dcec      	bgt.n	8003292 <__multadd+0x12>
 80032b8:	b30e      	cbz	r6, 80032fe <__multadd+0x7e>
 80032ba:	68a3      	ldr	r3, [r4, #8]
 80032bc:	42ab      	cmp	r3, r5
 80032be:	dc19      	bgt.n	80032f4 <__multadd+0x74>
 80032c0:	6861      	ldr	r1, [r4, #4]
 80032c2:	4638      	mov	r0, r7
 80032c4:	3101      	adds	r1, #1
 80032c6:	f7ff ff79 	bl	80031bc <_Balloc>
 80032ca:	4680      	mov	r8, r0
 80032cc:	b928      	cbnz	r0, 80032da <__multadd+0x5a>
 80032ce:	4602      	mov	r2, r0
 80032d0:	4b0c      	ldr	r3, [pc, #48]	@ (8003304 <__multadd+0x84>)
 80032d2:	480d      	ldr	r0, [pc, #52]	@ (8003308 <__multadd+0x88>)
 80032d4:	21ba      	movs	r1, #186	@ 0xba
 80032d6:	f000 fbcb 	bl	8003a70 <__assert_func>
 80032da:	6922      	ldr	r2, [r4, #16]
 80032dc:	3202      	adds	r2, #2
 80032de:	f104 010c 	add.w	r1, r4, #12
 80032e2:	0092      	lsls	r2, r2, #2
 80032e4:	300c      	adds	r0, #12
 80032e6:	f000 fbb5 	bl	8003a54 <memcpy>
 80032ea:	4621      	mov	r1, r4
 80032ec:	4638      	mov	r0, r7
 80032ee:	f7ff ffa5 	bl	800323c <_Bfree>
 80032f2:	4644      	mov	r4, r8
 80032f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80032f8:	3501      	adds	r5, #1
 80032fa:	615e      	str	r6, [r3, #20]
 80032fc:	6125      	str	r5, [r4, #16]
 80032fe:	4620      	mov	r0, r4
 8003300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003304:	080042a5 	.word	0x080042a5
 8003308:	080042c7 	.word	0x080042c7

0800330c <__hi0bits>:
 800330c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003310:	4603      	mov	r3, r0
 8003312:	bf36      	itet	cc
 8003314:	0403      	lslcc	r3, r0, #16
 8003316:	2000      	movcs	r0, #0
 8003318:	2010      	movcc	r0, #16
 800331a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800331e:	bf3c      	itt	cc
 8003320:	021b      	lslcc	r3, r3, #8
 8003322:	3008      	addcc	r0, #8
 8003324:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003328:	bf3c      	itt	cc
 800332a:	011b      	lslcc	r3, r3, #4
 800332c:	3004      	addcc	r0, #4
 800332e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003332:	bf3c      	itt	cc
 8003334:	009b      	lslcc	r3, r3, #2
 8003336:	3002      	addcc	r0, #2
 8003338:	2b00      	cmp	r3, #0
 800333a:	db05      	blt.n	8003348 <__hi0bits+0x3c>
 800333c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003340:	f100 0001 	add.w	r0, r0, #1
 8003344:	bf08      	it	eq
 8003346:	2020      	moveq	r0, #32
 8003348:	4770      	bx	lr

0800334a <__lo0bits>:
 800334a:	6803      	ldr	r3, [r0, #0]
 800334c:	4602      	mov	r2, r0
 800334e:	f013 0007 	ands.w	r0, r3, #7
 8003352:	d00b      	beq.n	800336c <__lo0bits+0x22>
 8003354:	07d9      	lsls	r1, r3, #31
 8003356:	d421      	bmi.n	800339c <__lo0bits+0x52>
 8003358:	0798      	lsls	r0, r3, #30
 800335a:	bf49      	itett	mi
 800335c:	085b      	lsrmi	r3, r3, #1
 800335e:	089b      	lsrpl	r3, r3, #2
 8003360:	2001      	movmi	r0, #1
 8003362:	6013      	strmi	r3, [r2, #0]
 8003364:	bf5c      	itt	pl
 8003366:	6013      	strpl	r3, [r2, #0]
 8003368:	2002      	movpl	r0, #2
 800336a:	4770      	bx	lr
 800336c:	b299      	uxth	r1, r3
 800336e:	b909      	cbnz	r1, 8003374 <__lo0bits+0x2a>
 8003370:	0c1b      	lsrs	r3, r3, #16
 8003372:	2010      	movs	r0, #16
 8003374:	b2d9      	uxtb	r1, r3
 8003376:	b909      	cbnz	r1, 800337c <__lo0bits+0x32>
 8003378:	3008      	adds	r0, #8
 800337a:	0a1b      	lsrs	r3, r3, #8
 800337c:	0719      	lsls	r1, r3, #28
 800337e:	bf04      	itt	eq
 8003380:	091b      	lsreq	r3, r3, #4
 8003382:	3004      	addeq	r0, #4
 8003384:	0799      	lsls	r1, r3, #30
 8003386:	bf04      	itt	eq
 8003388:	089b      	lsreq	r3, r3, #2
 800338a:	3002      	addeq	r0, #2
 800338c:	07d9      	lsls	r1, r3, #31
 800338e:	d403      	bmi.n	8003398 <__lo0bits+0x4e>
 8003390:	085b      	lsrs	r3, r3, #1
 8003392:	f100 0001 	add.w	r0, r0, #1
 8003396:	d003      	beq.n	80033a0 <__lo0bits+0x56>
 8003398:	6013      	str	r3, [r2, #0]
 800339a:	4770      	bx	lr
 800339c:	2000      	movs	r0, #0
 800339e:	4770      	bx	lr
 80033a0:	2020      	movs	r0, #32
 80033a2:	4770      	bx	lr

080033a4 <__i2b>:
 80033a4:	b510      	push	{r4, lr}
 80033a6:	460c      	mov	r4, r1
 80033a8:	2101      	movs	r1, #1
 80033aa:	f7ff ff07 	bl	80031bc <_Balloc>
 80033ae:	4602      	mov	r2, r0
 80033b0:	b928      	cbnz	r0, 80033be <__i2b+0x1a>
 80033b2:	4b05      	ldr	r3, [pc, #20]	@ (80033c8 <__i2b+0x24>)
 80033b4:	4805      	ldr	r0, [pc, #20]	@ (80033cc <__i2b+0x28>)
 80033b6:	f240 1145 	movw	r1, #325	@ 0x145
 80033ba:	f000 fb59 	bl	8003a70 <__assert_func>
 80033be:	2301      	movs	r3, #1
 80033c0:	6144      	str	r4, [r0, #20]
 80033c2:	6103      	str	r3, [r0, #16]
 80033c4:	bd10      	pop	{r4, pc}
 80033c6:	bf00      	nop
 80033c8:	080042a5 	.word	0x080042a5
 80033cc:	080042c7 	.word	0x080042c7

080033d0 <__multiply>:
 80033d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033d4:	4617      	mov	r7, r2
 80033d6:	690a      	ldr	r2, [r1, #16]
 80033d8:	693b      	ldr	r3, [r7, #16]
 80033da:	429a      	cmp	r2, r3
 80033dc:	bfa8      	it	ge
 80033de:	463b      	movge	r3, r7
 80033e0:	4689      	mov	r9, r1
 80033e2:	bfa4      	itt	ge
 80033e4:	460f      	movge	r7, r1
 80033e6:	4699      	movge	r9, r3
 80033e8:	693d      	ldr	r5, [r7, #16]
 80033ea:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80033ee:	68bb      	ldr	r3, [r7, #8]
 80033f0:	6879      	ldr	r1, [r7, #4]
 80033f2:	eb05 060a 	add.w	r6, r5, sl
 80033f6:	42b3      	cmp	r3, r6
 80033f8:	b085      	sub	sp, #20
 80033fa:	bfb8      	it	lt
 80033fc:	3101      	addlt	r1, #1
 80033fe:	f7ff fedd 	bl	80031bc <_Balloc>
 8003402:	b930      	cbnz	r0, 8003412 <__multiply+0x42>
 8003404:	4602      	mov	r2, r0
 8003406:	4b41      	ldr	r3, [pc, #260]	@ (800350c <__multiply+0x13c>)
 8003408:	4841      	ldr	r0, [pc, #260]	@ (8003510 <__multiply+0x140>)
 800340a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800340e:	f000 fb2f 	bl	8003a70 <__assert_func>
 8003412:	f100 0414 	add.w	r4, r0, #20
 8003416:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800341a:	4623      	mov	r3, r4
 800341c:	2200      	movs	r2, #0
 800341e:	4573      	cmp	r3, lr
 8003420:	d320      	bcc.n	8003464 <__multiply+0x94>
 8003422:	f107 0814 	add.w	r8, r7, #20
 8003426:	f109 0114 	add.w	r1, r9, #20
 800342a:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800342e:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8003432:	9302      	str	r3, [sp, #8]
 8003434:	1beb      	subs	r3, r5, r7
 8003436:	3b15      	subs	r3, #21
 8003438:	f023 0303 	bic.w	r3, r3, #3
 800343c:	3304      	adds	r3, #4
 800343e:	3715      	adds	r7, #21
 8003440:	42bd      	cmp	r5, r7
 8003442:	bf38      	it	cc
 8003444:	2304      	movcc	r3, #4
 8003446:	9301      	str	r3, [sp, #4]
 8003448:	9b02      	ldr	r3, [sp, #8]
 800344a:	9103      	str	r1, [sp, #12]
 800344c:	428b      	cmp	r3, r1
 800344e:	d80c      	bhi.n	800346a <__multiply+0x9a>
 8003450:	2e00      	cmp	r6, #0
 8003452:	dd03      	ble.n	800345c <__multiply+0x8c>
 8003454:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8003458:	2b00      	cmp	r3, #0
 800345a:	d055      	beq.n	8003508 <__multiply+0x138>
 800345c:	6106      	str	r6, [r0, #16]
 800345e:	b005      	add	sp, #20
 8003460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003464:	f843 2b04 	str.w	r2, [r3], #4
 8003468:	e7d9      	b.n	800341e <__multiply+0x4e>
 800346a:	f8b1 a000 	ldrh.w	sl, [r1]
 800346e:	f1ba 0f00 	cmp.w	sl, #0
 8003472:	d01f      	beq.n	80034b4 <__multiply+0xe4>
 8003474:	46c4      	mov	ip, r8
 8003476:	46a1      	mov	r9, r4
 8003478:	2700      	movs	r7, #0
 800347a:	f85c 2b04 	ldr.w	r2, [ip], #4
 800347e:	f8d9 3000 	ldr.w	r3, [r9]
 8003482:	fa1f fb82 	uxth.w	fp, r2
 8003486:	b29b      	uxth	r3, r3
 8003488:	fb0a 330b 	mla	r3, sl, fp, r3
 800348c:	443b      	add	r3, r7
 800348e:	f8d9 7000 	ldr.w	r7, [r9]
 8003492:	0c12      	lsrs	r2, r2, #16
 8003494:	0c3f      	lsrs	r7, r7, #16
 8003496:	fb0a 7202 	mla	r2, sl, r2, r7
 800349a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800349e:	b29b      	uxth	r3, r3
 80034a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80034a4:	4565      	cmp	r5, ip
 80034a6:	f849 3b04 	str.w	r3, [r9], #4
 80034aa:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80034ae:	d8e4      	bhi.n	800347a <__multiply+0xaa>
 80034b0:	9b01      	ldr	r3, [sp, #4]
 80034b2:	50e7      	str	r7, [r4, r3]
 80034b4:	9b03      	ldr	r3, [sp, #12]
 80034b6:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80034ba:	3104      	adds	r1, #4
 80034bc:	f1b9 0f00 	cmp.w	r9, #0
 80034c0:	d020      	beq.n	8003504 <__multiply+0x134>
 80034c2:	6823      	ldr	r3, [r4, #0]
 80034c4:	4647      	mov	r7, r8
 80034c6:	46a4      	mov	ip, r4
 80034c8:	f04f 0a00 	mov.w	sl, #0
 80034cc:	f8b7 b000 	ldrh.w	fp, [r7]
 80034d0:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80034d4:	fb09 220b 	mla	r2, r9, fp, r2
 80034d8:	4452      	add	r2, sl
 80034da:	b29b      	uxth	r3, r3
 80034dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80034e0:	f84c 3b04 	str.w	r3, [ip], #4
 80034e4:	f857 3b04 	ldr.w	r3, [r7], #4
 80034e8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80034ec:	f8bc 3000 	ldrh.w	r3, [ip]
 80034f0:	fb09 330a 	mla	r3, r9, sl, r3
 80034f4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80034f8:	42bd      	cmp	r5, r7
 80034fa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80034fe:	d8e5      	bhi.n	80034cc <__multiply+0xfc>
 8003500:	9a01      	ldr	r2, [sp, #4]
 8003502:	50a3      	str	r3, [r4, r2]
 8003504:	3404      	adds	r4, #4
 8003506:	e79f      	b.n	8003448 <__multiply+0x78>
 8003508:	3e01      	subs	r6, #1
 800350a:	e7a1      	b.n	8003450 <__multiply+0x80>
 800350c:	080042a5 	.word	0x080042a5
 8003510:	080042c7 	.word	0x080042c7

08003514 <__pow5mult>:
 8003514:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003518:	4615      	mov	r5, r2
 800351a:	f012 0203 	ands.w	r2, r2, #3
 800351e:	4607      	mov	r7, r0
 8003520:	460e      	mov	r6, r1
 8003522:	d007      	beq.n	8003534 <__pow5mult+0x20>
 8003524:	4c25      	ldr	r4, [pc, #148]	@ (80035bc <__pow5mult+0xa8>)
 8003526:	3a01      	subs	r2, #1
 8003528:	2300      	movs	r3, #0
 800352a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800352e:	f7ff fea7 	bl	8003280 <__multadd>
 8003532:	4606      	mov	r6, r0
 8003534:	10ad      	asrs	r5, r5, #2
 8003536:	d03d      	beq.n	80035b4 <__pow5mult+0xa0>
 8003538:	69fc      	ldr	r4, [r7, #28]
 800353a:	b97c      	cbnz	r4, 800355c <__pow5mult+0x48>
 800353c:	2010      	movs	r0, #16
 800353e:	f7fe fa27 	bl	8001990 <malloc>
 8003542:	4602      	mov	r2, r0
 8003544:	61f8      	str	r0, [r7, #28]
 8003546:	b928      	cbnz	r0, 8003554 <__pow5mult+0x40>
 8003548:	4b1d      	ldr	r3, [pc, #116]	@ (80035c0 <__pow5mult+0xac>)
 800354a:	481e      	ldr	r0, [pc, #120]	@ (80035c4 <__pow5mult+0xb0>)
 800354c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003550:	f000 fa8e 	bl	8003a70 <__assert_func>
 8003554:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003558:	6004      	str	r4, [r0, #0]
 800355a:	60c4      	str	r4, [r0, #12]
 800355c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003560:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003564:	b94c      	cbnz	r4, 800357a <__pow5mult+0x66>
 8003566:	f240 2171 	movw	r1, #625	@ 0x271
 800356a:	4638      	mov	r0, r7
 800356c:	f7ff ff1a 	bl	80033a4 <__i2b>
 8003570:	2300      	movs	r3, #0
 8003572:	f8c8 0008 	str.w	r0, [r8, #8]
 8003576:	4604      	mov	r4, r0
 8003578:	6003      	str	r3, [r0, #0]
 800357a:	f04f 0900 	mov.w	r9, #0
 800357e:	07eb      	lsls	r3, r5, #31
 8003580:	d50a      	bpl.n	8003598 <__pow5mult+0x84>
 8003582:	4631      	mov	r1, r6
 8003584:	4622      	mov	r2, r4
 8003586:	4638      	mov	r0, r7
 8003588:	f7ff ff22 	bl	80033d0 <__multiply>
 800358c:	4631      	mov	r1, r6
 800358e:	4680      	mov	r8, r0
 8003590:	4638      	mov	r0, r7
 8003592:	f7ff fe53 	bl	800323c <_Bfree>
 8003596:	4646      	mov	r6, r8
 8003598:	106d      	asrs	r5, r5, #1
 800359a:	d00b      	beq.n	80035b4 <__pow5mult+0xa0>
 800359c:	6820      	ldr	r0, [r4, #0]
 800359e:	b938      	cbnz	r0, 80035b0 <__pow5mult+0x9c>
 80035a0:	4622      	mov	r2, r4
 80035a2:	4621      	mov	r1, r4
 80035a4:	4638      	mov	r0, r7
 80035a6:	f7ff ff13 	bl	80033d0 <__multiply>
 80035aa:	6020      	str	r0, [r4, #0]
 80035ac:	f8c0 9000 	str.w	r9, [r0]
 80035b0:	4604      	mov	r4, r0
 80035b2:	e7e4      	b.n	800357e <__pow5mult+0x6a>
 80035b4:	4630      	mov	r0, r6
 80035b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80035ba:	bf00      	nop
 80035bc:	08004368 	.word	0x08004368
 80035c0:	08004236 	.word	0x08004236
 80035c4:	080042c7 	.word	0x080042c7

080035c8 <__lshift>:
 80035c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80035cc:	460c      	mov	r4, r1
 80035ce:	6849      	ldr	r1, [r1, #4]
 80035d0:	6923      	ldr	r3, [r4, #16]
 80035d2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80035d6:	68a3      	ldr	r3, [r4, #8]
 80035d8:	4607      	mov	r7, r0
 80035da:	4691      	mov	r9, r2
 80035dc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80035e0:	f108 0601 	add.w	r6, r8, #1
 80035e4:	42b3      	cmp	r3, r6
 80035e6:	db0b      	blt.n	8003600 <__lshift+0x38>
 80035e8:	4638      	mov	r0, r7
 80035ea:	f7ff fde7 	bl	80031bc <_Balloc>
 80035ee:	4605      	mov	r5, r0
 80035f0:	b948      	cbnz	r0, 8003606 <__lshift+0x3e>
 80035f2:	4602      	mov	r2, r0
 80035f4:	4b28      	ldr	r3, [pc, #160]	@ (8003698 <__lshift+0xd0>)
 80035f6:	4829      	ldr	r0, [pc, #164]	@ (800369c <__lshift+0xd4>)
 80035f8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80035fc:	f000 fa38 	bl	8003a70 <__assert_func>
 8003600:	3101      	adds	r1, #1
 8003602:	005b      	lsls	r3, r3, #1
 8003604:	e7ee      	b.n	80035e4 <__lshift+0x1c>
 8003606:	2300      	movs	r3, #0
 8003608:	f100 0114 	add.w	r1, r0, #20
 800360c:	f100 0210 	add.w	r2, r0, #16
 8003610:	4618      	mov	r0, r3
 8003612:	4553      	cmp	r3, sl
 8003614:	db33      	blt.n	800367e <__lshift+0xb6>
 8003616:	6920      	ldr	r0, [r4, #16]
 8003618:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800361c:	f104 0314 	add.w	r3, r4, #20
 8003620:	f019 091f 	ands.w	r9, r9, #31
 8003624:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003628:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800362c:	d02b      	beq.n	8003686 <__lshift+0xbe>
 800362e:	f1c9 0e20 	rsb	lr, r9, #32
 8003632:	468a      	mov	sl, r1
 8003634:	2200      	movs	r2, #0
 8003636:	6818      	ldr	r0, [r3, #0]
 8003638:	fa00 f009 	lsl.w	r0, r0, r9
 800363c:	4310      	orrs	r0, r2
 800363e:	f84a 0b04 	str.w	r0, [sl], #4
 8003642:	f853 2b04 	ldr.w	r2, [r3], #4
 8003646:	459c      	cmp	ip, r3
 8003648:	fa22 f20e 	lsr.w	r2, r2, lr
 800364c:	d8f3      	bhi.n	8003636 <__lshift+0x6e>
 800364e:	ebac 0304 	sub.w	r3, ip, r4
 8003652:	3b15      	subs	r3, #21
 8003654:	f023 0303 	bic.w	r3, r3, #3
 8003658:	3304      	adds	r3, #4
 800365a:	f104 0015 	add.w	r0, r4, #21
 800365e:	4560      	cmp	r0, ip
 8003660:	bf88      	it	hi
 8003662:	2304      	movhi	r3, #4
 8003664:	50ca      	str	r2, [r1, r3]
 8003666:	b10a      	cbz	r2, 800366c <__lshift+0xa4>
 8003668:	f108 0602 	add.w	r6, r8, #2
 800366c:	3e01      	subs	r6, #1
 800366e:	4638      	mov	r0, r7
 8003670:	612e      	str	r6, [r5, #16]
 8003672:	4621      	mov	r1, r4
 8003674:	f7ff fde2 	bl	800323c <_Bfree>
 8003678:	4628      	mov	r0, r5
 800367a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800367e:	f842 0f04 	str.w	r0, [r2, #4]!
 8003682:	3301      	adds	r3, #1
 8003684:	e7c5      	b.n	8003612 <__lshift+0x4a>
 8003686:	3904      	subs	r1, #4
 8003688:	f853 2b04 	ldr.w	r2, [r3], #4
 800368c:	f841 2f04 	str.w	r2, [r1, #4]!
 8003690:	459c      	cmp	ip, r3
 8003692:	d8f9      	bhi.n	8003688 <__lshift+0xc0>
 8003694:	e7ea      	b.n	800366c <__lshift+0xa4>
 8003696:	bf00      	nop
 8003698:	080042a5 	.word	0x080042a5
 800369c:	080042c7 	.word	0x080042c7

080036a0 <__mcmp>:
 80036a0:	690a      	ldr	r2, [r1, #16]
 80036a2:	4603      	mov	r3, r0
 80036a4:	6900      	ldr	r0, [r0, #16]
 80036a6:	1a80      	subs	r0, r0, r2
 80036a8:	b530      	push	{r4, r5, lr}
 80036aa:	d10e      	bne.n	80036ca <__mcmp+0x2a>
 80036ac:	3314      	adds	r3, #20
 80036ae:	3114      	adds	r1, #20
 80036b0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80036b4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80036b8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80036bc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80036c0:	4295      	cmp	r5, r2
 80036c2:	d003      	beq.n	80036cc <__mcmp+0x2c>
 80036c4:	d205      	bcs.n	80036d2 <__mcmp+0x32>
 80036c6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80036ca:	bd30      	pop	{r4, r5, pc}
 80036cc:	42a3      	cmp	r3, r4
 80036ce:	d3f3      	bcc.n	80036b8 <__mcmp+0x18>
 80036d0:	e7fb      	b.n	80036ca <__mcmp+0x2a>
 80036d2:	2001      	movs	r0, #1
 80036d4:	e7f9      	b.n	80036ca <__mcmp+0x2a>
	...

080036d8 <__mdiff>:
 80036d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036dc:	4689      	mov	r9, r1
 80036de:	4606      	mov	r6, r0
 80036e0:	4611      	mov	r1, r2
 80036e2:	4648      	mov	r0, r9
 80036e4:	4614      	mov	r4, r2
 80036e6:	f7ff ffdb 	bl	80036a0 <__mcmp>
 80036ea:	1e05      	subs	r5, r0, #0
 80036ec:	d112      	bne.n	8003714 <__mdiff+0x3c>
 80036ee:	4629      	mov	r1, r5
 80036f0:	4630      	mov	r0, r6
 80036f2:	f7ff fd63 	bl	80031bc <_Balloc>
 80036f6:	4602      	mov	r2, r0
 80036f8:	b928      	cbnz	r0, 8003706 <__mdiff+0x2e>
 80036fa:	4b3f      	ldr	r3, [pc, #252]	@ (80037f8 <__mdiff+0x120>)
 80036fc:	f240 2137 	movw	r1, #567	@ 0x237
 8003700:	483e      	ldr	r0, [pc, #248]	@ (80037fc <__mdiff+0x124>)
 8003702:	f000 f9b5 	bl	8003a70 <__assert_func>
 8003706:	2301      	movs	r3, #1
 8003708:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800370c:	4610      	mov	r0, r2
 800370e:	b003      	add	sp, #12
 8003710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003714:	bfbc      	itt	lt
 8003716:	464b      	movlt	r3, r9
 8003718:	46a1      	movlt	r9, r4
 800371a:	4630      	mov	r0, r6
 800371c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003720:	bfba      	itte	lt
 8003722:	461c      	movlt	r4, r3
 8003724:	2501      	movlt	r5, #1
 8003726:	2500      	movge	r5, #0
 8003728:	f7ff fd48 	bl	80031bc <_Balloc>
 800372c:	4602      	mov	r2, r0
 800372e:	b918      	cbnz	r0, 8003738 <__mdiff+0x60>
 8003730:	4b31      	ldr	r3, [pc, #196]	@ (80037f8 <__mdiff+0x120>)
 8003732:	f240 2145 	movw	r1, #581	@ 0x245
 8003736:	e7e3      	b.n	8003700 <__mdiff+0x28>
 8003738:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800373c:	6926      	ldr	r6, [r4, #16]
 800373e:	60c5      	str	r5, [r0, #12]
 8003740:	f109 0310 	add.w	r3, r9, #16
 8003744:	f109 0514 	add.w	r5, r9, #20
 8003748:	f104 0e14 	add.w	lr, r4, #20
 800374c:	f100 0b14 	add.w	fp, r0, #20
 8003750:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003754:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003758:	9301      	str	r3, [sp, #4]
 800375a:	46d9      	mov	r9, fp
 800375c:	f04f 0c00 	mov.w	ip, #0
 8003760:	9b01      	ldr	r3, [sp, #4]
 8003762:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003766:	f853 af04 	ldr.w	sl, [r3, #4]!
 800376a:	9301      	str	r3, [sp, #4]
 800376c:	fa1f f38a 	uxth.w	r3, sl
 8003770:	4619      	mov	r1, r3
 8003772:	b283      	uxth	r3, r0
 8003774:	1acb      	subs	r3, r1, r3
 8003776:	0c00      	lsrs	r0, r0, #16
 8003778:	4463      	add	r3, ip
 800377a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800377e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003782:	b29b      	uxth	r3, r3
 8003784:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003788:	4576      	cmp	r6, lr
 800378a:	f849 3b04 	str.w	r3, [r9], #4
 800378e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003792:	d8e5      	bhi.n	8003760 <__mdiff+0x88>
 8003794:	1b33      	subs	r3, r6, r4
 8003796:	3b15      	subs	r3, #21
 8003798:	f023 0303 	bic.w	r3, r3, #3
 800379c:	3415      	adds	r4, #21
 800379e:	3304      	adds	r3, #4
 80037a0:	42a6      	cmp	r6, r4
 80037a2:	bf38      	it	cc
 80037a4:	2304      	movcc	r3, #4
 80037a6:	441d      	add	r5, r3
 80037a8:	445b      	add	r3, fp
 80037aa:	461e      	mov	r6, r3
 80037ac:	462c      	mov	r4, r5
 80037ae:	4544      	cmp	r4, r8
 80037b0:	d30e      	bcc.n	80037d0 <__mdiff+0xf8>
 80037b2:	f108 0103 	add.w	r1, r8, #3
 80037b6:	1b49      	subs	r1, r1, r5
 80037b8:	f021 0103 	bic.w	r1, r1, #3
 80037bc:	3d03      	subs	r5, #3
 80037be:	45a8      	cmp	r8, r5
 80037c0:	bf38      	it	cc
 80037c2:	2100      	movcc	r1, #0
 80037c4:	440b      	add	r3, r1
 80037c6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80037ca:	b191      	cbz	r1, 80037f2 <__mdiff+0x11a>
 80037cc:	6117      	str	r7, [r2, #16]
 80037ce:	e79d      	b.n	800370c <__mdiff+0x34>
 80037d0:	f854 1b04 	ldr.w	r1, [r4], #4
 80037d4:	46e6      	mov	lr, ip
 80037d6:	0c08      	lsrs	r0, r1, #16
 80037d8:	fa1c fc81 	uxtah	ip, ip, r1
 80037dc:	4471      	add	r1, lr
 80037de:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80037e2:	b289      	uxth	r1, r1
 80037e4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80037e8:	f846 1b04 	str.w	r1, [r6], #4
 80037ec:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80037f0:	e7dd      	b.n	80037ae <__mdiff+0xd6>
 80037f2:	3f01      	subs	r7, #1
 80037f4:	e7e7      	b.n	80037c6 <__mdiff+0xee>
 80037f6:	bf00      	nop
 80037f8:	080042a5 	.word	0x080042a5
 80037fc:	080042c7 	.word	0x080042c7

08003800 <__d2b>:
 8003800:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003804:	460f      	mov	r7, r1
 8003806:	2101      	movs	r1, #1
 8003808:	ec59 8b10 	vmov	r8, r9, d0
 800380c:	4616      	mov	r6, r2
 800380e:	f7ff fcd5 	bl	80031bc <_Balloc>
 8003812:	4604      	mov	r4, r0
 8003814:	b930      	cbnz	r0, 8003824 <__d2b+0x24>
 8003816:	4602      	mov	r2, r0
 8003818:	4b23      	ldr	r3, [pc, #140]	@ (80038a8 <__d2b+0xa8>)
 800381a:	4824      	ldr	r0, [pc, #144]	@ (80038ac <__d2b+0xac>)
 800381c:	f240 310f 	movw	r1, #783	@ 0x30f
 8003820:	f000 f926 	bl	8003a70 <__assert_func>
 8003824:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003828:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800382c:	b10d      	cbz	r5, 8003832 <__d2b+0x32>
 800382e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003832:	9301      	str	r3, [sp, #4]
 8003834:	f1b8 0300 	subs.w	r3, r8, #0
 8003838:	d023      	beq.n	8003882 <__d2b+0x82>
 800383a:	4668      	mov	r0, sp
 800383c:	9300      	str	r3, [sp, #0]
 800383e:	f7ff fd84 	bl	800334a <__lo0bits>
 8003842:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003846:	b1d0      	cbz	r0, 800387e <__d2b+0x7e>
 8003848:	f1c0 0320 	rsb	r3, r0, #32
 800384c:	fa02 f303 	lsl.w	r3, r2, r3
 8003850:	430b      	orrs	r3, r1
 8003852:	40c2      	lsrs	r2, r0
 8003854:	6163      	str	r3, [r4, #20]
 8003856:	9201      	str	r2, [sp, #4]
 8003858:	9b01      	ldr	r3, [sp, #4]
 800385a:	61a3      	str	r3, [r4, #24]
 800385c:	2b00      	cmp	r3, #0
 800385e:	bf0c      	ite	eq
 8003860:	2201      	moveq	r2, #1
 8003862:	2202      	movne	r2, #2
 8003864:	6122      	str	r2, [r4, #16]
 8003866:	b1a5      	cbz	r5, 8003892 <__d2b+0x92>
 8003868:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800386c:	4405      	add	r5, r0
 800386e:	603d      	str	r5, [r7, #0]
 8003870:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003874:	6030      	str	r0, [r6, #0]
 8003876:	4620      	mov	r0, r4
 8003878:	b003      	add	sp, #12
 800387a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800387e:	6161      	str	r1, [r4, #20]
 8003880:	e7ea      	b.n	8003858 <__d2b+0x58>
 8003882:	a801      	add	r0, sp, #4
 8003884:	f7ff fd61 	bl	800334a <__lo0bits>
 8003888:	9b01      	ldr	r3, [sp, #4]
 800388a:	6163      	str	r3, [r4, #20]
 800388c:	3020      	adds	r0, #32
 800388e:	2201      	movs	r2, #1
 8003890:	e7e8      	b.n	8003864 <__d2b+0x64>
 8003892:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003896:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800389a:	6038      	str	r0, [r7, #0]
 800389c:	6918      	ldr	r0, [r3, #16]
 800389e:	f7ff fd35 	bl	800330c <__hi0bits>
 80038a2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80038a6:	e7e5      	b.n	8003874 <__d2b+0x74>
 80038a8:	080042a5 	.word	0x080042a5
 80038ac:	080042c7 	.word	0x080042c7

080038b0 <__sread>:
 80038b0:	b510      	push	{r4, lr}
 80038b2:	460c      	mov	r4, r1
 80038b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80038b8:	f000 f898 	bl	80039ec <_read_r>
 80038bc:	2800      	cmp	r0, #0
 80038be:	bfab      	itete	ge
 80038c0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80038c2:	89a3      	ldrhlt	r3, [r4, #12]
 80038c4:	181b      	addge	r3, r3, r0
 80038c6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80038ca:	bfac      	ite	ge
 80038cc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80038ce:	81a3      	strhlt	r3, [r4, #12]
 80038d0:	bd10      	pop	{r4, pc}

080038d2 <__swrite>:
 80038d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038d6:	461f      	mov	r7, r3
 80038d8:	898b      	ldrh	r3, [r1, #12]
 80038da:	05db      	lsls	r3, r3, #23
 80038dc:	4605      	mov	r5, r0
 80038de:	460c      	mov	r4, r1
 80038e0:	4616      	mov	r6, r2
 80038e2:	d505      	bpl.n	80038f0 <__swrite+0x1e>
 80038e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80038e8:	2302      	movs	r3, #2
 80038ea:	2200      	movs	r2, #0
 80038ec:	f000 f86c 	bl	80039c8 <_lseek_r>
 80038f0:	89a3      	ldrh	r3, [r4, #12]
 80038f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80038f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80038fa:	81a3      	strh	r3, [r4, #12]
 80038fc:	4632      	mov	r2, r6
 80038fe:	463b      	mov	r3, r7
 8003900:	4628      	mov	r0, r5
 8003902:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003906:	f000 b883 	b.w	8003a10 <_write_r>

0800390a <__sseek>:
 800390a:	b510      	push	{r4, lr}
 800390c:	460c      	mov	r4, r1
 800390e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003912:	f000 f859 	bl	80039c8 <_lseek_r>
 8003916:	1c43      	adds	r3, r0, #1
 8003918:	89a3      	ldrh	r3, [r4, #12]
 800391a:	bf15      	itete	ne
 800391c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800391e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003922:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003926:	81a3      	strheq	r3, [r4, #12]
 8003928:	bf18      	it	ne
 800392a:	81a3      	strhne	r3, [r4, #12]
 800392c:	bd10      	pop	{r4, pc}

0800392e <__sclose>:
 800392e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003932:	f000 b87f 	b.w	8003a34 <_close_r>

08003936 <_realloc_r>:
 8003936:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800393a:	4607      	mov	r7, r0
 800393c:	4614      	mov	r4, r2
 800393e:	460d      	mov	r5, r1
 8003940:	b921      	cbnz	r1, 800394c <_realloc_r+0x16>
 8003942:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003946:	4611      	mov	r1, r2
 8003948:	f7fe b84c 	b.w	80019e4 <_malloc_r>
 800394c:	b92a      	cbnz	r2, 800395a <_realloc_r+0x24>
 800394e:	f7ff f9e7 	bl	8002d20 <_free_r>
 8003952:	4625      	mov	r5, r4
 8003954:	4628      	mov	r0, r5
 8003956:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800395a:	f000 f8cd 	bl	8003af8 <_malloc_usable_size_r>
 800395e:	4284      	cmp	r4, r0
 8003960:	4606      	mov	r6, r0
 8003962:	d802      	bhi.n	800396a <_realloc_r+0x34>
 8003964:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003968:	d8f4      	bhi.n	8003954 <_realloc_r+0x1e>
 800396a:	4621      	mov	r1, r4
 800396c:	4638      	mov	r0, r7
 800396e:	f7fe f839 	bl	80019e4 <_malloc_r>
 8003972:	4680      	mov	r8, r0
 8003974:	b908      	cbnz	r0, 800397a <_realloc_r+0x44>
 8003976:	4645      	mov	r5, r8
 8003978:	e7ec      	b.n	8003954 <_realloc_r+0x1e>
 800397a:	42b4      	cmp	r4, r6
 800397c:	4622      	mov	r2, r4
 800397e:	4629      	mov	r1, r5
 8003980:	bf28      	it	cs
 8003982:	4632      	movcs	r2, r6
 8003984:	f000 f866 	bl	8003a54 <memcpy>
 8003988:	4629      	mov	r1, r5
 800398a:	4638      	mov	r0, r7
 800398c:	f7ff f9c8 	bl	8002d20 <_free_r>
 8003990:	e7f1      	b.n	8003976 <_realloc_r+0x40>

08003992 <memmove>:
 8003992:	4288      	cmp	r0, r1
 8003994:	b510      	push	{r4, lr}
 8003996:	eb01 0402 	add.w	r4, r1, r2
 800399a:	d902      	bls.n	80039a2 <memmove+0x10>
 800399c:	4284      	cmp	r4, r0
 800399e:	4623      	mov	r3, r4
 80039a0:	d807      	bhi.n	80039b2 <memmove+0x20>
 80039a2:	1e43      	subs	r3, r0, #1
 80039a4:	42a1      	cmp	r1, r4
 80039a6:	d008      	beq.n	80039ba <memmove+0x28>
 80039a8:	f811 2b01 	ldrb.w	r2, [r1], #1
 80039ac:	f803 2f01 	strb.w	r2, [r3, #1]!
 80039b0:	e7f8      	b.n	80039a4 <memmove+0x12>
 80039b2:	4402      	add	r2, r0
 80039b4:	4601      	mov	r1, r0
 80039b6:	428a      	cmp	r2, r1
 80039b8:	d100      	bne.n	80039bc <memmove+0x2a>
 80039ba:	bd10      	pop	{r4, pc}
 80039bc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80039c0:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80039c4:	e7f7      	b.n	80039b6 <memmove+0x24>
	...

080039c8 <_lseek_r>:
 80039c8:	b538      	push	{r3, r4, r5, lr}
 80039ca:	4d07      	ldr	r5, [pc, #28]	@ (80039e8 <_lseek_r+0x20>)
 80039cc:	4604      	mov	r4, r0
 80039ce:	4608      	mov	r0, r1
 80039d0:	4611      	mov	r1, r2
 80039d2:	2200      	movs	r2, #0
 80039d4:	602a      	str	r2, [r5, #0]
 80039d6:	461a      	mov	r2, r3
 80039d8:	f7fd fca5 	bl	8001326 <_lseek>
 80039dc:	1c43      	adds	r3, r0, #1
 80039de:	d102      	bne.n	80039e6 <_lseek_r+0x1e>
 80039e0:	682b      	ldr	r3, [r5, #0]
 80039e2:	b103      	cbz	r3, 80039e6 <_lseek_r+0x1e>
 80039e4:	6023      	str	r3, [r4, #0]
 80039e6:	bd38      	pop	{r3, r4, r5, pc}
 80039e8:	20000358 	.word	0x20000358

080039ec <_read_r>:
 80039ec:	b538      	push	{r3, r4, r5, lr}
 80039ee:	4d07      	ldr	r5, [pc, #28]	@ (8003a0c <_read_r+0x20>)
 80039f0:	4604      	mov	r4, r0
 80039f2:	4608      	mov	r0, r1
 80039f4:	4611      	mov	r1, r2
 80039f6:	2200      	movs	r2, #0
 80039f8:	602a      	str	r2, [r5, #0]
 80039fa:	461a      	mov	r2, r3
 80039fc:	f7fd fc33 	bl	8001266 <_read>
 8003a00:	1c43      	adds	r3, r0, #1
 8003a02:	d102      	bne.n	8003a0a <_read_r+0x1e>
 8003a04:	682b      	ldr	r3, [r5, #0]
 8003a06:	b103      	cbz	r3, 8003a0a <_read_r+0x1e>
 8003a08:	6023      	str	r3, [r4, #0]
 8003a0a:	bd38      	pop	{r3, r4, r5, pc}
 8003a0c:	20000358 	.word	0x20000358

08003a10 <_write_r>:
 8003a10:	b538      	push	{r3, r4, r5, lr}
 8003a12:	4d07      	ldr	r5, [pc, #28]	@ (8003a30 <_write_r+0x20>)
 8003a14:	4604      	mov	r4, r0
 8003a16:	4608      	mov	r0, r1
 8003a18:	4611      	mov	r1, r2
 8003a1a:	2200      	movs	r2, #0
 8003a1c:	602a      	str	r2, [r5, #0]
 8003a1e:	461a      	mov	r2, r3
 8003a20:	f7fd fc3e 	bl	80012a0 <_write>
 8003a24:	1c43      	adds	r3, r0, #1
 8003a26:	d102      	bne.n	8003a2e <_write_r+0x1e>
 8003a28:	682b      	ldr	r3, [r5, #0]
 8003a2a:	b103      	cbz	r3, 8003a2e <_write_r+0x1e>
 8003a2c:	6023      	str	r3, [r4, #0]
 8003a2e:	bd38      	pop	{r3, r4, r5, pc}
 8003a30:	20000358 	.word	0x20000358

08003a34 <_close_r>:
 8003a34:	b538      	push	{r3, r4, r5, lr}
 8003a36:	4d06      	ldr	r5, [pc, #24]	@ (8003a50 <_close_r+0x1c>)
 8003a38:	2300      	movs	r3, #0
 8003a3a:	4604      	mov	r4, r0
 8003a3c:	4608      	mov	r0, r1
 8003a3e:	602b      	str	r3, [r5, #0]
 8003a40:	f7fd fc4a 	bl	80012d8 <_close>
 8003a44:	1c43      	adds	r3, r0, #1
 8003a46:	d102      	bne.n	8003a4e <_close_r+0x1a>
 8003a48:	682b      	ldr	r3, [r5, #0]
 8003a4a:	b103      	cbz	r3, 8003a4e <_close_r+0x1a>
 8003a4c:	6023      	str	r3, [r4, #0]
 8003a4e:	bd38      	pop	{r3, r4, r5, pc}
 8003a50:	20000358 	.word	0x20000358

08003a54 <memcpy>:
 8003a54:	440a      	add	r2, r1
 8003a56:	4291      	cmp	r1, r2
 8003a58:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8003a5c:	d100      	bne.n	8003a60 <memcpy+0xc>
 8003a5e:	4770      	bx	lr
 8003a60:	b510      	push	{r4, lr}
 8003a62:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003a66:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003a6a:	4291      	cmp	r1, r2
 8003a6c:	d1f9      	bne.n	8003a62 <memcpy+0xe>
 8003a6e:	bd10      	pop	{r4, pc}

08003a70 <__assert_func>:
 8003a70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003a72:	4614      	mov	r4, r2
 8003a74:	461a      	mov	r2, r3
 8003a76:	4b09      	ldr	r3, [pc, #36]	@ (8003a9c <__assert_func+0x2c>)
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	4605      	mov	r5, r0
 8003a7c:	68d8      	ldr	r0, [r3, #12]
 8003a7e:	b14c      	cbz	r4, 8003a94 <__assert_func+0x24>
 8003a80:	4b07      	ldr	r3, [pc, #28]	@ (8003aa0 <__assert_func+0x30>)
 8003a82:	9100      	str	r1, [sp, #0]
 8003a84:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003a88:	4906      	ldr	r1, [pc, #24]	@ (8003aa4 <__assert_func+0x34>)
 8003a8a:	462b      	mov	r3, r5
 8003a8c:	f000 f83c 	bl	8003b08 <fiprintf>
 8003a90:	f000 f859 	bl	8003b46 <abort>
 8003a94:	4b04      	ldr	r3, [pc, #16]	@ (8003aa8 <__assert_func+0x38>)
 8003a96:	461c      	mov	r4, r3
 8003a98:	e7f3      	b.n	8003a82 <__assert_func+0x12>
 8003a9a:	bf00      	nop
 8003a9c:	20000034 	.word	0x20000034
 8003aa0:	0800432a 	.word	0x0800432a
 8003aa4:	08004337 	.word	0x08004337
 8003aa8:	08004365 	.word	0x08004365

08003aac <_calloc_r>:
 8003aac:	b570      	push	{r4, r5, r6, lr}
 8003aae:	fba1 5402 	umull	r5, r4, r1, r2
 8003ab2:	b934      	cbnz	r4, 8003ac2 <_calloc_r+0x16>
 8003ab4:	4629      	mov	r1, r5
 8003ab6:	f7fd ff95 	bl	80019e4 <_malloc_r>
 8003aba:	4606      	mov	r6, r0
 8003abc:	b928      	cbnz	r0, 8003aca <_calloc_r+0x1e>
 8003abe:	4630      	mov	r0, r6
 8003ac0:	bd70      	pop	{r4, r5, r6, pc}
 8003ac2:	220c      	movs	r2, #12
 8003ac4:	6002      	str	r2, [r0, #0]
 8003ac6:	2600      	movs	r6, #0
 8003ac8:	e7f9      	b.n	8003abe <_calloc_r+0x12>
 8003aca:	462a      	mov	r2, r5
 8003acc:	4621      	mov	r1, r4
 8003ace:	f7fe fa85 	bl	8001fdc <memset>
 8003ad2:	e7f4      	b.n	8003abe <_calloc_r+0x12>

08003ad4 <__ascii_mbtowc>:
 8003ad4:	b082      	sub	sp, #8
 8003ad6:	b901      	cbnz	r1, 8003ada <__ascii_mbtowc+0x6>
 8003ad8:	a901      	add	r1, sp, #4
 8003ada:	b142      	cbz	r2, 8003aee <__ascii_mbtowc+0x1a>
 8003adc:	b14b      	cbz	r3, 8003af2 <__ascii_mbtowc+0x1e>
 8003ade:	7813      	ldrb	r3, [r2, #0]
 8003ae0:	600b      	str	r3, [r1, #0]
 8003ae2:	7812      	ldrb	r2, [r2, #0]
 8003ae4:	1e10      	subs	r0, r2, #0
 8003ae6:	bf18      	it	ne
 8003ae8:	2001      	movne	r0, #1
 8003aea:	b002      	add	sp, #8
 8003aec:	4770      	bx	lr
 8003aee:	4610      	mov	r0, r2
 8003af0:	e7fb      	b.n	8003aea <__ascii_mbtowc+0x16>
 8003af2:	f06f 0001 	mvn.w	r0, #1
 8003af6:	e7f8      	b.n	8003aea <__ascii_mbtowc+0x16>

08003af8 <_malloc_usable_size_r>:
 8003af8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003afc:	1f18      	subs	r0, r3, #4
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	bfbc      	itt	lt
 8003b02:	580b      	ldrlt	r3, [r1, r0]
 8003b04:	18c0      	addlt	r0, r0, r3
 8003b06:	4770      	bx	lr

08003b08 <fiprintf>:
 8003b08:	b40e      	push	{r1, r2, r3}
 8003b0a:	b503      	push	{r0, r1, lr}
 8003b0c:	4601      	mov	r1, r0
 8003b0e:	ab03      	add	r3, sp, #12
 8003b10:	4805      	ldr	r0, [pc, #20]	@ (8003b28 <fiprintf+0x20>)
 8003b12:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b16:	6800      	ldr	r0, [r0, #0]
 8003b18:	9301      	str	r3, [sp, #4]
 8003b1a:	f000 f845 	bl	8003ba8 <_vfiprintf_r>
 8003b1e:	b002      	add	sp, #8
 8003b20:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b24:	b003      	add	sp, #12
 8003b26:	4770      	bx	lr
 8003b28:	20000034 	.word	0x20000034

08003b2c <__ascii_wctomb>:
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	4608      	mov	r0, r1
 8003b30:	b141      	cbz	r1, 8003b44 <__ascii_wctomb+0x18>
 8003b32:	2aff      	cmp	r2, #255	@ 0xff
 8003b34:	d904      	bls.n	8003b40 <__ascii_wctomb+0x14>
 8003b36:	228a      	movs	r2, #138	@ 0x8a
 8003b38:	601a      	str	r2, [r3, #0]
 8003b3a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003b3e:	4770      	bx	lr
 8003b40:	700a      	strb	r2, [r1, #0]
 8003b42:	2001      	movs	r0, #1
 8003b44:	4770      	bx	lr

08003b46 <abort>:
 8003b46:	b508      	push	{r3, lr}
 8003b48:	2006      	movs	r0, #6
 8003b4a:	f000 fa63 	bl	8004014 <raise>
 8003b4e:	2001      	movs	r0, #1
 8003b50:	f7fd fb7e 	bl	8001250 <_exit>

08003b54 <__sfputc_r>:
 8003b54:	6893      	ldr	r3, [r2, #8]
 8003b56:	3b01      	subs	r3, #1
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	b410      	push	{r4}
 8003b5c:	6093      	str	r3, [r2, #8]
 8003b5e:	da08      	bge.n	8003b72 <__sfputc_r+0x1e>
 8003b60:	6994      	ldr	r4, [r2, #24]
 8003b62:	42a3      	cmp	r3, r4
 8003b64:	db01      	blt.n	8003b6a <__sfputc_r+0x16>
 8003b66:	290a      	cmp	r1, #10
 8003b68:	d103      	bne.n	8003b72 <__sfputc_r+0x1e>
 8003b6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003b6e:	f000 b933 	b.w	8003dd8 <__swbuf_r>
 8003b72:	6813      	ldr	r3, [r2, #0]
 8003b74:	1c58      	adds	r0, r3, #1
 8003b76:	6010      	str	r0, [r2, #0]
 8003b78:	7019      	strb	r1, [r3, #0]
 8003b7a:	4608      	mov	r0, r1
 8003b7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003b80:	4770      	bx	lr

08003b82 <__sfputs_r>:
 8003b82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b84:	4606      	mov	r6, r0
 8003b86:	460f      	mov	r7, r1
 8003b88:	4614      	mov	r4, r2
 8003b8a:	18d5      	adds	r5, r2, r3
 8003b8c:	42ac      	cmp	r4, r5
 8003b8e:	d101      	bne.n	8003b94 <__sfputs_r+0x12>
 8003b90:	2000      	movs	r0, #0
 8003b92:	e007      	b.n	8003ba4 <__sfputs_r+0x22>
 8003b94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b98:	463a      	mov	r2, r7
 8003b9a:	4630      	mov	r0, r6
 8003b9c:	f7ff ffda 	bl	8003b54 <__sfputc_r>
 8003ba0:	1c43      	adds	r3, r0, #1
 8003ba2:	d1f3      	bne.n	8003b8c <__sfputs_r+0xa>
 8003ba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003ba8 <_vfiprintf_r>:
 8003ba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bac:	460d      	mov	r5, r1
 8003bae:	b09d      	sub	sp, #116	@ 0x74
 8003bb0:	4614      	mov	r4, r2
 8003bb2:	4698      	mov	r8, r3
 8003bb4:	4606      	mov	r6, r0
 8003bb6:	b118      	cbz	r0, 8003bc0 <_vfiprintf_r+0x18>
 8003bb8:	6a03      	ldr	r3, [r0, #32]
 8003bba:	b90b      	cbnz	r3, 8003bc0 <_vfiprintf_r+0x18>
 8003bbc:	f7fe f9d8 	bl	8001f70 <__sinit>
 8003bc0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003bc2:	07d9      	lsls	r1, r3, #31
 8003bc4:	d405      	bmi.n	8003bd2 <_vfiprintf_r+0x2a>
 8003bc6:	89ab      	ldrh	r3, [r5, #12]
 8003bc8:	059a      	lsls	r2, r3, #22
 8003bca:	d402      	bmi.n	8003bd2 <_vfiprintf_r+0x2a>
 8003bcc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003bce:	f7fe fa48 	bl	8002062 <__retarget_lock_acquire_recursive>
 8003bd2:	89ab      	ldrh	r3, [r5, #12]
 8003bd4:	071b      	lsls	r3, r3, #28
 8003bd6:	d501      	bpl.n	8003bdc <_vfiprintf_r+0x34>
 8003bd8:	692b      	ldr	r3, [r5, #16]
 8003bda:	b99b      	cbnz	r3, 8003c04 <_vfiprintf_r+0x5c>
 8003bdc:	4629      	mov	r1, r5
 8003bde:	4630      	mov	r0, r6
 8003be0:	f000 f938 	bl	8003e54 <__swsetup_r>
 8003be4:	b170      	cbz	r0, 8003c04 <_vfiprintf_r+0x5c>
 8003be6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003be8:	07dc      	lsls	r4, r3, #31
 8003bea:	d504      	bpl.n	8003bf6 <_vfiprintf_r+0x4e>
 8003bec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003bf0:	b01d      	add	sp, #116	@ 0x74
 8003bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bf6:	89ab      	ldrh	r3, [r5, #12]
 8003bf8:	0598      	lsls	r0, r3, #22
 8003bfa:	d4f7      	bmi.n	8003bec <_vfiprintf_r+0x44>
 8003bfc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003bfe:	f7fe fa31 	bl	8002064 <__retarget_lock_release_recursive>
 8003c02:	e7f3      	b.n	8003bec <_vfiprintf_r+0x44>
 8003c04:	2300      	movs	r3, #0
 8003c06:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c08:	2320      	movs	r3, #32
 8003c0a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003c0e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c12:	2330      	movs	r3, #48	@ 0x30
 8003c14:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8003dc4 <_vfiprintf_r+0x21c>
 8003c18:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003c1c:	f04f 0901 	mov.w	r9, #1
 8003c20:	4623      	mov	r3, r4
 8003c22:	469a      	mov	sl, r3
 8003c24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c28:	b10a      	cbz	r2, 8003c2e <_vfiprintf_r+0x86>
 8003c2a:	2a25      	cmp	r2, #37	@ 0x25
 8003c2c:	d1f9      	bne.n	8003c22 <_vfiprintf_r+0x7a>
 8003c2e:	ebba 0b04 	subs.w	fp, sl, r4
 8003c32:	d00b      	beq.n	8003c4c <_vfiprintf_r+0xa4>
 8003c34:	465b      	mov	r3, fp
 8003c36:	4622      	mov	r2, r4
 8003c38:	4629      	mov	r1, r5
 8003c3a:	4630      	mov	r0, r6
 8003c3c:	f7ff ffa1 	bl	8003b82 <__sfputs_r>
 8003c40:	3001      	adds	r0, #1
 8003c42:	f000 80a7 	beq.w	8003d94 <_vfiprintf_r+0x1ec>
 8003c46:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003c48:	445a      	add	r2, fp
 8003c4a:	9209      	str	r2, [sp, #36]	@ 0x24
 8003c4c:	f89a 3000 	ldrb.w	r3, [sl]
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	f000 809f 	beq.w	8003d94 <_vfiprintf_r+0x1ec>
 8003c56:	2300      	movs	r3, #0
 8003c58:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003c5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003c60:	f10a 0a01 	add.w	sl, sl, #1
 8003c64:	9304      	str	r3, [sp, #16]
 8003c66:	9307      	str	r3, [sp, #28]
 8003c68:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003c6c:	931a      	str	r3, [sp, #104]	@ 0x68
 8003c6e:	4654      	mov	r4, sl
 8003c70:	2205      	movs	r2, #5
 8003c72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c76:	4853      	ldr	r0, [pc, #332]	@ (8003dc4 <_vfiprintf_r+0x21c>)
 8003c78:	f7fc fab2 	bl	80001e0 <memchr>
 8003c7c:	9a04      	ldr	r2, [sp, #16]
 8003c7e:	b9d8      	cbnz	r0, 8003cb8 <_vfiprintf_r+0x110>
 8003c80:	06d1      	lsls	r1, r2, #27
 8003c82:	bf44      	itt	mi
 8003c84:	2320      	movmi	r3, #32
 8003c86:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c8a:	0713      	lsls	r3, r2, #28
 8003c8c:	bf44      	itt	mi
 8003c8e:	232b      	movmi	r3, #43	@ 0x2b
 8003c90:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c94:	f89a 3000 	ldrb.w	r3, [sl]
 8003c98:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c9a:	d015      	beq.n	8003cc8 <_vfiprintf_r+0x120>
 8003c9c:	9a07      	ldr	r2, [sp, #28]
 8003c9e:	4654      	mov	r4, sl
 8003ca0:	2000      	movs	r0, #0
 8003ca2:	f04f 0c0a 	mov.w	ip, #10
 8003ca6:	4621      	mov	r1, r4
 8003ca8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003cac:	3b30      	subs	r3, #48	@ 0x30
 8003cae:	2b09      	cmp	r3, #9
 8003cb0:	d94b      	bls.n	8003d4a <_vfiprintf_r+0x1a2>
 8003cb2:	b1b0      	cbz	r0, 8003ce2 <_vfiprintf_r+0x13a>
 8003cb4:	9207      	str	r2, [sp, #28]
 8003cb6:	e014      	b.n	8003ce2 <_vfiprintf_r+0x13a>
 8003cb8:	eba0 0308 	sub.w	r3, r0, r8
 8003cbc:	fa09 f303 	lsl.w	r3, r9, r3
 8003cc0:	4313      	orrs	r3, r2
 8003cc2:	9304      	str	r3, [sp, #16]
 8003cc4:	46a2      	mov	sl, r4
 8003cc6:	e7d2      	b.n	8003c6e <_vfiprintf_r+0xc6>
 8003cc8:	9b03      	ldr	r3, [sp, #12]
 8003cca:	1d19      	adds	r1, r3, #4
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	9103      	str	r1, [sp, #12]
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	bfbb      	ittet	lt
 8003cd4:	425b      	neglt	r3, r3
 8003cd6:	f042 0202 	orrlt.w	r2, r2, #2
 8003cda:	9307      	strge	r3, [sp, #28]
 8003cdc:	9307      	strlt	r3, [sp, #28]
 8003cde:	bfb8      	it	lt
 8003ce0:	9204      	strlt	r2, [sp, #16]
 8003ce2:	7823      	ldrb	r3, [r4, #0]
 8003ce4:	2b2e      	cmp	r3, #46	@ 0x2e
 8003ce6:	d10a      	bne.n	8003cfe <_vfiprintf_r+0x156>
 8003ce8:	7863      	ldrb	r3, [r4, #1]
 8003cea:	2b2a      	cmp	r3, #42	@ 0x2a
 8003cec:	d132      	bne.n	8003d54 <_vfiprintf_r+0x1ac>
 8003cee:	9b03      	ldr	r3, [sp, #12]
 8003cf0:	1d1a      	adds	r2, r3, #4
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	9203      	str	r2, [sp, #12]
 8003cf6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003cfa:	3402      	adds	r4, #2
 8003cfc:	9305      	str	r3, [sp, #20]
 8003cfe:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8003dd4 <_vfiprintf_r+0x22c>
 8003d02:	7821      	ldrb	r1, [r4, #0]
 8003d04:	2203      	movs	r2, #3
 8003d06:	4650      	mov	r0, sl
 8003d08:	f7fc fa6a 	bl	80001e0 <memchr>
 8003d0c:	b138      	cbz	r0, 8003d1e <_vfiprintf_r+0x176>
 8003d0e:	9b04      	ldr	r3, [sp, #16]
 8003d10:	eba0 000a 	sub.w	r0, r0, sl
 8003d14:	2240      	movs	r2, #64	@ 0x40
 8003d16:	4082      	lsls	r2, r0
 8003d18:	4313      	orrs	r3, r2
 8003d1a:	3401      	adds	r4, #1
 8003d1c:	9304      	str	r3, [sp, #16]
 8003d1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d22:	4829      	ldr	r0, [pc, #164]	@ (8003dc8 <_vfiprintf_r+0x220>)
 8003d24:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003d28:	2206      	movs	r2, #6
 8003d2a:	f7fc fa59 	bl	80001e0 <memchr>
 8003d2e:	2800      	cmp	r0, #0
 8003d30:	d03f      	beq.n	8003db2 <_vfiprintf_r+0x20a>
 8003d32:	4b26      	ldr	r3, [pc, #152]	@ (8003dcc <_vfiprintf_r+0x224>)
 8003d34:	bb1b      	cbnz	r3, 8003d7e <_vfiprintf_r+0x1d6>
 8003d36:	9b03      	ldr	r3, [sp, #12]
 8003d38:	3307      	adds	r3, #7
 8003d3a:	f023 0307 	bic.w	r3, r3, #7
 8003d3e:	3308      	adds	r3, #8
 8003d40:	9303      	str	r3, [sp, #12]
 8003d42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003d44:	443b      	add	r3, r7
 8003d46:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d48:	e76a      	b.n	8003c20 <_vfiprintf_r+0x78>
 8003d4a:	fb0c 3202 	mla	r2, ip, r2, r3
 8003d4e:	460c      	mov	r4, r1
 8003d50:	2001      	movs	r0, #1
 8003d52:	e7a8      	b.n	8003ca6 <_vfiprintf_r+0xfe>
 8003d54:	2300      	movs	r3, #0
 8003d56:	3401      	adds	r4, #1
 8003d58:	9305      	str	r3, [sp, #20]
 8003d5a:	4619      	mov	r1, r3
 8003d5c:	f04f 0c0a 	mov.w	ip, #10
 8003d60:	4620      	mov	r0, r4
 8003d62:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003d66:	3a30      	subs	r2, #48	@ 0x30
 8003d68:	2a09      	cmp	r2, #9
 8003d6a:	d903      	bls.n	8003d74 <_vfiprintf_r+0x1cc>
 8003d6c:	2b00      	cmp	r3, #0
 8003d6e:	d0c6      	beq.n	8003cfe <_vfiprintf_r+0x156>
 8003d70:	9105      	str	r1, [sp, #20]
 8003d72:	e7c4      	b.n	8003cfe <_vfiprintf_r+0x156>
 8003d74:	fb0c 2101 	mla	r1, ip, r1, r2
 8003d78:	4604      	mov	r4, r0
 8003d7a:	2301      	movs	r3, #1
 8003d7c:	e7f0      	b.n	8003d60 <_vfiprintf_r+0x1b8>
 8003d7e:	ab03      	add	r3, sp, #12
 8003d80:	9300      	str	r3, [sp, #0]
 8003d82:	462a      	mov	r2, r5
 8003d84:	4b12      	ldr	r3, [pc, #72]	@ (8003dd0 <_vfiprintf_r+0x228>)
 8003d86:	a904      	add	r1, sp, #16
 8003d88:	4630      	mov	r0, r6
 8003d8a:	f7fd fbd7 	bl	800153c <_printf_float>
 8003d8e:	4607      	mov	r7, r0
 8003d90:	1c78      	adds	r0, r7, #1
 8003d92:	d1d6      	bne.n	8003d42 <_vfiprintf_r+0x19a>
 8003d94:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003d96:	07d9      	lsls	r1, r3, #31
 8003d98:	d405      	bmi.n	8003da6 <_vfiprintf_r+0x1fe>
 8003d9a:	89ab      	ldrh	r3, [r5, #12]
 8003d9c:	059a      	lsls	r2, r3, #22
 8003d9e:	d402      	bmi.n	8003da6 <_vfiprintf_r+0x1fe>
 8003da0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003da2:	f7fe f95f 	bl	8002064 <__retarget_lock_release_recursive>
 8003da6:	89ab      	ldrh	r3, [r5, #12]
 8003da8:	065b      	lsls	r3, r3, #25
 8003daa:	f53f af1f 	bmi.w	8003bec <_vfiprintf_r+0x44>
 8003dae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003db0:	e71e      	b.n	8003bf0 <_vfiprintf_r+0x48>
 8003db2:	ab03      	add	r3, sp, #12
 8003db4:	9300      	str	r3, [sp, #0]
 8003db6:	462a      	mov	r2, r5
 8003db8:	4b05      	ldr	r3, [pc, #20]	@ (8003dd0 <_vfiprintf_r+0x228>)
 8003dba:	a904      	add	r1, sp, #16
 8003dbc:	4630      	mov	r0, r6
 8003dbe:	f7fd feff 	bl	8001bc0 <_printf_i>
 8003dc2:	e7e4      	b.n	8003d8e <_vfiprintf_r+0x1e6>
 8003dc4:	080042b6 	.word	0x080042b6
 8003dc8:	080042c0 	.word	0x080042c0
 8003dcc:	0800153d 	.word	0x0800153d
 8003dd0:	08003b83 	.word	0x08003b83
 8003dd4:	080042bc 	.word	0x080042bc

08003dd8 <__swbuf_r>:
 8003dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dda:	460e      	mov	r6, r1
 8003ddc:	4614      	mov	r4, r2
 8003dde:	4605      	mov	r5, r0
 8003de0:	b118      	cbz	r0, 8003dea <__swbuf_r+0x12>
 8003de2:	6a03      	ldr	r3, [r0, #32]
 8003de4:	b90b      	cbnz	r3, 8003dea <__swbuf_r+0x12>
 8003de6:	f7fe f8c3 	bl	8001f70 <__sinit>
 8003dea:	69a3      	ldr	r3, [r4, #24]
 8003dec:	60a3      	str	r3, [r4, #8]
 8003dee:	89a3      	ldrh	r3, [r4, #12]
 8003df0:	071a      	lsls	r2, r3, #28
 8003df2:	d501      	bpl.n	8003df8 <__swbuf_r+0x20>
 8003df4:	6923      	ldr	r3, [r4, #16]
 8003df6:	b943      	cbnz	r3, 8003e0a <__swbuf_r+0x32>
 8003df8:	4621      	mov	r1, r4
 8003dfa:	4628      	mov	r0, r5
 8003dfc:	f000 f82a 	bl	8003e54 <__swsetup_r>
 8003e00:	b118      	cbz	r0, 8003e0a <__swbuf_r+0x32>
 8003e02:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8003e06:	4638      	mov	r0, r7
 8003e08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e0a:	6823      	ldr	r3, [r4, #0]
 8003e0c:	6922      	ldr	r2, [r4, #16]
 8003e0e:	1a98      	subs	r0, r3, r2
 8003e10:	6963      	ldr	r3, [r4, #20]
 8003e12:	b2f6      	uxtb	r6, r6
 8003e14:	4283      	cmp	r3, r0
 8003e16:	4637      	mov	r7, r6
 8003e18:	dc05      	bgt.n	8003e26 <__swbuf_r+0x4e>
 8003e1a:	4621      	mov	r1, r4
 8003e1c:	4628      	mov	r0, r5
 8003e1e:	f7ff f9a5 	bl	800316c <_fflush_r>
 8003e22:	2800      	cmp	r0, #0
 8003e24:	d1ed      	bne.n	8003e02 <__swbuf_r+0x2a>
 8003e26:	68a3      	ldr	r3, [r4, #8]
 8003e28:	3b01      	subs	r3, #1
 8003e2a:	60a3      	str	r3, [r4, #8]
 8003e2c:	6823      	ldr	r3, [r4, #0]
 8003e2e:	1c5a      	adds	r2, r3, #1
 8003e30:	6022      	str	r2, [r4, #0]
 8003e32:	701e      	strb	r6, [r3, #0]
 8003e34:	6962      	ldr	r2, [r4, #20]
 8003e36:	1c43      	adds	r3, r0, #1
 8003e38:	429a      	cmp	r2, r3
 8003e3a:	d004      	beq.n	8003e46 <__swbuf_r+0x6e>
 8003e3c:	89a3      	ldrh	r3, [r4, #12]
 8003e3e:	07db      	lsls	r3, r3, #31
 8003e40:	d5e1      	bpl.n	8003e06 <__swbuf_r+0x2e>
 8003e42:	2e0a      	cmp	r6, #10
 8003e44:	d1df      	bne.n	8003e06 <__swbuf_r+0x2e>
 8003e46:	4621      	mov	r1, r4
 8003e48:	4628      	mov	r0, r5
 8003e4a:	f7ff f98f 	bl	800316c <_fflush_r>
 8003e4e:	2800      	cmp	r0, #0
 8003e50:	d0d9      	beq.n	8003e06 <__swbuf_r+0x2e>
 8003e52:	e7d6      	b.n	8003e02 <__swbuf_r+0x2a>

08003e54 <__swsetup_r>:
 8003e54:	b538      	push	{r3, r4, r5, lr}
 8003e56:	4b29      	ldr	r3, [pc, #164]	@ (8003efc <__swsetup_r+0xa8>)
 8003e58:	4605      	mov	r5, r0
 8003e5a:	6818      	ldr	r0, [r3, #0]
 8003e5c:	460c      	mov	r4, r1
 8003e5e:	b118      	cbz	r0, 8003e68 <__swsetup_r+0x14>
 8003e60:	6a03      	ldr	r3, [r0, #32]
 8003e62:	b90b      	cbnz	r3, 8003e68 <__swsetup_r+0x14>
 8003e64:	f7fe f884 	bl	8001f70 <__sinit>
 8003e68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e6c:	0719      	lsls	r1, r3, #28
 8003e6e:	d422      	bmi.n	8003eb6 <__swsetup_r+0x62>
 8003e70:	06da      	lsls	r2, r3, #27
 8003e72:	d407      	bmi.n	8003e84 <__swsetup_r+0x30>
 8003e74:	2209      	movs	r2, #9
 8003e76:	602a      	str	r2, [r5, #0]
 8003e78:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e7c:	81a3      	strh	r3, [r4, #12]
 8003e7e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003e82:	e033      	b.n	8003eec <__swsetup_r+0x98>
 8003e84:	0758      	lsls	r0, r3, #29
 8003e86:	d512      	bpl.n	8003eae <__swsetup_r+0x5a>
 8003e88:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003e8a:	b141      	cbz	r1, 8003e9e <__swsetup_r+0x4a>
 8003e8c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003e90:	4299      	cmp	r1, r3
 8003e92:	d002      	beq.n	8003e9a <__swsetup_r+0x46>
 8003e94:	4628      	mov	r0, r5
 8003e96:	f7fe ff43 	bl	8002d20 <_free_r>
 8003e9a:	2300      	movs	r3, #0
 8003e9c:	6363      	str	r3, [r4, #52]	@ 0x34
 8003e9e:	89a3      	ldrh	r3, [r4, #12]
 8003ea0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003ea4:	81a3      	strh	r3, [r4, #12]
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	6063      	str	r3, [r4, #4]
 8003eaa:	6923      	ldr	r3, [r4, #16]
 8003eac:	6023      	str	r3, [r4, #0]
 8003eae:	89a3      	ldrh	r3, [r4, #12]
 8003eb0:	f043 0308 	orr.w	r3, r3, #8
 8003eb4:	81a3      	strh	r3, [r4, #12]
 8003eb6:	6923      	ldr	r3, [r4, #16]
 8003eb8:	b94b      	cbnz	r3, 8003ece <__swsetup_r+0x7a>
 8003eba:	89a3      	ldrh	r3, [r4, #12]
 8003ebc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003ec0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003ec4:	d003      	beq.n	8003ece <__swsetup_r+0x7a>
 8003ec6:	4621      	mov	r1, r4
 8003ec8:	4628      	mov	r0, r5
 8003eca:	f000 f83f 	bl	8003f4c <__smakebuf_r>
 8003ece:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003ed2:	f013 0201 	ands.w	r2, r3, #1
 8003ed6:	d00a      	beq.n	8003eee <__swsetup_r+0x9a>
 8003ed8:	2200      	movs	r2, #0
 8003eda:	60a2      	str	r2, [r4, #8]
 8003edc:	6962      	ldr	r2, [r4, #20]
 8003ede:	4252      	negs	r2, r2
 8003ee0:	61a2      	str	r2, [r4, #24]
 8003ee2:	6922      	ldr	r2, [r4, #16]
 8003ee4:	b942      	cbnz	r2, 8003ef8 <__swsetup_r+0xa4>
 8003ee6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003eea:	d1c5      	bne.n	8003e78 <__swsetup_r+0x24>
 8003eec:	bd38      	pop	{r3, r4, r5, pc}
 8003eee:	0799      	lsls	r1, r3, #30
 8003ef0:	bf58      	it	pl
 8003ef2:	6962      	ldrpl	r2, [r4, #20]
 8003ef4:	60a2      	str	r2, [r4, #8]
 8003ef6:	e7f4      	b.n	8003ee2 <__swsetup_r+0x8e>
 8003ef8:	2000      	movs	r0, #0
 8003efa:	e7f7      	b.n	8003eec <__swsetup_r+0x98>
 8003efc:	20000034 	.word	0x20000034

08003f00 <__swhatbuf_r>:
 8003f00:	b570      	push	{r4, r5, r6, lr}
 8003f02:	460c      	mov	r4, r1
 8003f04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f08:	2900      	cmp	r1, #0
 8003f0a:	b096      	sub	sp, #88	@ 0x58
 8003f0c:	4615      	mov	r5, r2
 8003f0e:	461e      	mov	r6, r3
 8003f10:	da0d      	bge.n	8003f2e <__swhatbuf_r+0x2e>
 8003f12:	89a3      	ldrh	r3, [r4, #12]
 8003f14:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003f18:	f04f 0100 	mov.w	r1, #0
 8003f1c:	bf14      	ite	ne
 8003f1e:	2340      	movne	r3, #64	@ 0x40
 8003f20:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003f24:	2000      	movs	r0, #0
 8003f26:	6031      	str	r1, [r6, #0]
 8003f28:	602b      	str	r3, [r5, #0]
 8003f2a:	b016      	add	sp, #88	@ 0x58
 8003f2c:	bd70      	pop	{r4, r5, r6, pc}
 8003f2e:	466a      	mov	r2, sp
 8003f30:	f000 f89c 	bl	800406c <_fstat_r>
 8003f34:	2800      	cmp	r0, #0
 8003f36:	dbec      	blt.n	8003f12 <__swhatbuf_r+0x12>
 8003f38:	9901      	ldr	r1, [sp, #4]
 8003f3a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003f3e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003f42:	4259      	negs	r1, r3
 8003f44:	4159      	adcs	r1, r3
 8003f46:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003f4a:	e7eb      	b.n	8003f24 <__swhatbuf_r+0x24>

08003f4c <__smakebuf_r>:
 8003f4c:	898b      	ldrh	r3, [r1, #12]
 8003f4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f50:	079d      	lsls	r5, r3, #30
 8003f52:	4606      	mov	r6, r0
 8003f54:	460c      	mov	r4, r1
 8003f56:	d507      	bpl.n	8003f68 <__smakebuf_r+0x1c>
 8003f58:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003f5c:	6023      	str	r3, [r4, #0]
 8003f5e:	6123      	str	r3, [r4, #16]
 8003f60:	2301      	movs	r3, #1
 8003f62:	6163      	str	r3, [r4, #20]
 8003f64:	b003      	add	sp, #12
 8003f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f68:	ab01      	add	r3, sp, #4
 8003f6a:	466a      	mov	r2, sp
 8003f6c:	f7ff ffc8 	bl	8003f00 <__swhatbuf_r>
 8003f70:	9f00      	ldr	r7, [sp, #0]
 8003f72:	4605      	mov	r5, r0
 8003f74:	4639      	mov	r1, r7
 8003f76:	4630      	mov	r0, r6
 8003f78:	f7fd fd34 	bl	80019e4 <_malloc_r>
 8003f7c:	b948      	cbnz	r0, 8003f92 <__smakebuf_r+0x46>
 8003f7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f82:	059a      	lsls	r2, r3, #22
 8003f84:	d4ee      	bmi.n	8003f64 <__smakebuf_r+0x18>
 8003f86:	f023 0303 	bic.w	r3, r3, #3
 8003f8a:	f043 0302 	orr.w	r3, r3, #2
 8003f8e:	81a3      	strh	r3, [r4, #12]
 8003f90:	e7e2      	b.n	8003f58 <__smakebuf_r+0xc>
 8003f92:	89a3      	ldrh	r3, [r4, #12]
 8003f94:	6020      	str	r0, [r4, #0]
 8003f96:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003f9a:	81a3      	strh	r3, [r4, #12]
 8003f9c:	9b01      	ldr	r3, [sp, #4]
 8003f9e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8003fa2:	b15b      	cbz	r3, 8003fbc <__smakebuf_r+0x70>
 8003fa4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003fa8:	4630      	mov	r0, r6
 8003faa:	f000 f83b 	bl	8004024 <_isatty_r>
 8003fae:	b128      	cbz	r0, 8003fbc <__smakebuf_r+0x70>
 8003fb0:	89a3      	ldrh	r3, [r4, #12]
 8003fb2:	f023 0303 	bic.w	r3, r3, #3
 8003fb6:	f043 0301 	orr.w	r3, r3, #1
 8003fba:	81a3      	strh	r3, [r4, #12]
 8003fbc:	89a3      	ldrh	r3, [r4, #12]
 8003fbe:	431d      	orrs	r5, r3
 8003fc0:	81a5      	strh	r5, [r4, #12]
 8003fc2:	e7cf      	b.n	8003f64 <__smakebuf_r+0x18>

08003fc4 <_raise_r>:
 8003fc4:	291f      	cmp	r1, #31
 8003fc6:	b538      	push	{r3, r4, r5, lr}
 8003fc8:	4605      	mov	r5, r0
 8003fca:	460c      	mov	r4, r1
 8003fcc:	d904      	bls.n	8003fd8 <_raise_r+0x14>
 8003fce:	2316      	movs	r3, #22
 8003fd0:	6003      	str	r3, [r0, #0]
 8003fd2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003fd6:	bd38      	pop	{r3, r4, r5, pc}
 8003fd8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003fda:	b112      	cbz	r2, 8003fe2 <_raise_r+0x1e>
 8003fdc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003fe0:	b94b      	cbnz	r3, 8003ff6 <_raise_r+0x32>
 8003fe2:	4628      	mov	r0, r5
 8003fe4:	f000 f840 	bl	8004068 <_getpid_r>
 8003fe8:	4622      	mov	r2, r4
 8003fea:	4601      	mov	r1, r0
 8003fec:	4628      	mov	r0, r5
 8003fee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003ff2:	f000 b827 	b.w	8004044 <_kill_r>
 8003ff6:	2b01      	cmp	r3, #1
 8003ff8:	d00a      	beq.n	8004010 <_raise_r+0x4c>
 8003ffa:	1c59      	adds	r1, r3, #1
 8003ffc:	d103      	bne.n	8004006 <_raise_r+0x42>
 8003ffe:	2316      	movs	r3, #22
 8004000:	6003      	str	r3, [r0, #0]
 8004002:	2001      	movs	r0, #1
 8004004:	e7e7      	b.n	8003fd6 <_raise_r+0x12>
 8004006:	2100      	movs	r1, #0
 8004008:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800400c:	4620      	mov	r0, r4
 800400e:	4798      	blx	r3
 8004010:	2000      	movs	r0, #0
 8004012:	e7e0      	b.n	8003fd6 <_raise_r+0x12>

08004014 <raise>:
 8004014:	4b02      	ldr	r3, [pc, #8]	@ (8004020 <raise+0xc>)
 8004016:	4601      	mov	r1, r0
 8004018:	6818      	ldr	r0, [r3, #0]
 800401a:	f7ff bfd3 	b.w	8003fc4 <_raise_r>
 800401e:	bf00      	nop
 8004020:	20000034 	.word	0x20000034

08004024 <_isatty_r>:
 8004024:	b538      	push	{r3, r4, r5, lr}
 8004026:	4d06      	ldr	r5, [pc, #24]	@ (8004040 <_isatty_r+0x1c>)
 8004028:	2300      	movs	r3, #0
 800402a:	4604      	mov	r4, r0
 800402c:	4608      	mov	r0, r1
 800402e:	602b      	str	r3, [r5, #0]
 8004030:	f7fd f96e 	bl	8001310 <_isatty>
 8004034:	1c43      	adds	r3, r0, #1
 8004036:	d102      	bne.n	800403e <_isatty_r+0x1a>
 8004038:	682b      	ldr	r3, [r5, #0]
 800403a:	b103      	cbz	r3, 800403e <_isatty_r+0x1a>
 800403c:	6023      	str	r3, [r4, #0]
 800403e:	bd38      	pop	{r3, r4, r5, pc}
 8004040:	20000358 	.word	0x20000358

08004044 <_kill_r>:
 8004044:	b538      	push	{r3, r4, r5, lr}
 8004046:	4d07      	ldr	r5, [pc, #28]	@ (8004064 <_kill_r+0x20>)
 8004048:	2300      	movs	r3, #0
 800404a:	4604      	mov	r4, r0
 800404c:	4608      	mov	r0, r1
 800404e:	4611      	mov	r1, r2
 8004050:	602b      	str	r3, [r5, #0]
 8004052:	f7fd f8ed 	bl	8001230 <_kill>
 8004056:	1c43      	adds	r3, r0, #1
 8004058:	d102      	bne.n	8004060 <_kill_r+0x1c>
 800405a:	682b      	ldr	r3, [r5, #0]
 800405c:	b103      	cbz	r3, 8004060 <_kill_r+0x1c>
 800405e:	6023      	str	r3, [r4, #0]
 8004060:	bd38      	pop	{r3, r4, r5, pc}
 8004062:	bf00      	nop
 8004064:	20000358 	.word	0x20000358

08004068 <_getpid_r>:
 8004068:	f7fd b8da 	b.w	8001220 <_getpid>

0800406c <_fstat_r>:
 800406c:	b538      	push	{r3, r4, r5, lr}
 800406e:	4d07      	ldr	r5, [pc, #28]	@ (800408c <_fstat_r+0x20>)
 8004070:	2300      	movs	r3, #0
 8004072:	4604      	mov	r4, r0
 8004074:	4608      	mov	r0, r1
 8004076:	4611      	mov	r1, r2
 8004078:	602b      	str	r3, [r5, #0]
 800407a:	f7fd f939 	bl	80012f0 <_fstat>
 800407e:	1c43      	adds	r3, r0, #1
 8004080:	d102      	bne.n	8004088 <_fstat_r+0x1c>
 8004082:	682b      	ldr	r3, [r5, #0]
 8004084:	b103      	cbz	r3, 8004088 <_fstat_r+0x1c>
 8004086:	6023      	str	r3, [r4, #0]
 8004088:	bd38      	pop	{r3, r4, r5, pc}
 800408a:	bf00      	nop
 800408c:	20000358 	.word	0x20000358

08004090 <_init>:
 8004090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004092:	bf00      	nop
 8004094:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004096:	bc08      	pop	{r3}
 8004098:	469e      	mov	lr, r3
 800409a:	4770      	bx	lr

0800409c <_fini>:
 800409c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800409e:	bf00      	nop
 80040a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040a2:	bc08      	pop	{r3}
 80040a4:	469e      	mov	lr, r3
 80040a6:	4770      	bx	lr
