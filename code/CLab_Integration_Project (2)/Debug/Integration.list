
Integration.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000023c4  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000248  08002564  08002564  00003564  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080027ac  080027ac  00004088  2**0
                  CONTENTS
  4 .ARM          00000008  080027ac  080027ac  000037ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080027b4  080027b4  00004088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080027b4  080027b4  000037b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080027b8  080027b8  000037b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000088  20000000  080027bc  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00004088  2**0
                  CONTENTS
 10 .bss          00000210  20000088  20000088  00004088  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000298  20000298  00004088  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00004088  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002d4a  00000000  00000000  000040b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000bd5  00000000  00000000  00006e02  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000298  00000000  00000000  000079d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001ed  00000000  00000000  00007c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00016ddd  00000000  00000000  00007e5d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002a67  00000000  00000000  0001ec3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000787aa  00000000  00000000  000216a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00099e4b  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001444  00000000  00000000  00099e90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005f  00000000  00000000  0009b2d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000088 	.word	0x20000088
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800254c 	.word	0x0800254c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000008c 	.word	0x2000008c
 80001dc:	0800254c 	.word	0x0800254c

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <strcmp>:
 80001f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001f8:	2a01      	cmp	r2, #1
 80001fa:	bf28      	it	cs
 80001fc:	429a      	cmpcs	r2, r3
 80001fe:	d0f7      	beq.n	80001f0 <strcmp>
 8000200:	1ad0      	subs	r0, r2, r3
 8000202:	4770      	bx	lr
	...

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <enable_clocks>:
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	4b05      	ldr	r3, [pc, #20]	@ (80002cc <enable_clocks+0x1c>)
 80002b6:	695b      	ldr	r3, [r3, #20]
 80002b8:	4a04      	ldr	r2, [pc, #16]	@ (80002cc <enable_clocks+0x1c>)
 80002ba:	f443 1328 	orr.w	r3, r3, #2752512	@ 0x2a0000
 80002be:	6153      	str	r3, [r2, #20]
 80002c0:	bf00      	nop
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40021000 	.word	0x40021000

080002d0 <display_pattern_callback>:
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b084      	sub	sp, #16
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	2300      	movs	r3, #0
 80002da:	73fb      	strb	r3, [r7, #15]
 80002dc:	2300      	movs	r3, #0
 80002de:	60bb      	str	r3, [r7, #8]
 80002e0:	e01b      	b.n	800031a <display_pattern_callback+0x4a>
 80002e2:	68bb      	ldr	r3, [r7, #8]
 80002e4:	687a      	ldr	r2, [r7, #4]
 80002e6:	4413      	add	r3, r2
 80002e8:	781b      	ldrb	r3, [r3, #0]
 80002ea:	2b31      	cmp	r3, #49	@ 0x31
 80002ec:	d10c      	bne.n	8000308 <display_pattern_callback+0x38>
 80002ee:	68bb      	ldr	r3, [r7, #8]
 80002f0:	f1c3 0307 	rsb	r3, r3, #7
 80002f4:	2201      	movs	r2, #1
 80002f6:	fa02 f303 	lsl.w	r3, r2, r3
 80002fa:	b25a      	sxtb	r2, r3
 80002fc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000300:	4313      	orrs	r3, r2
 8000302:	b25b      	sxtb	r3, r3
 8000304:	73fb      	strb	r3, [r7, #15]
 8000306:	e005      	b.n	8000314 <display_pattern_callback+0x44>
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	687a      	ldr	r2, [r7, #4]
 800030c:	4413      	add	r3, r2
 800030e:	781b      	ldrb	r3, [r3, #0]
 8000310:	2b30      	cmp	r3, #48	@ 0x30
 8000312:	d10a      	bne.n	800032a <display_pattern_callback+0x5a>
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	3301      	adds	r3, #1
 8000318:	60bb      	str	r3, [r7, #8]
 800031a:	68bb      	ldr	r3, [r7, #8]
 800031c:	2b07      	cmp	r3, #7
 800031e:	dde0      	ble.n	80002e2 <display_pattern_callback+0x12>
 8000320:	7bfb      	ldrb	r3, [r7, #15]
 8000322:	4618      	mov	r0, r3
 8000324:	f000 f868 	bl	80003f8 <leds_set_state>
 8000328:	e000      	b.n	800032c <display_pattern_callback+0x5c>
 800032a:	bf00      	nop
 800032c:	3710      	adds	r7, #16
 800032e:	46bd      	mov	sp, r7
 8000330:	bd80      	pop	{r7, pc}
	...

08000334 <pattern_callback_init>:
 8000334:	b480      	push	{r7}
 8000336:	b083      	sub	sp, #12
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
 800033c:	4a04      	ldr	r2, [pc, #16]	@ (8000350 <pattern_callback_init+0x1c>)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	6013      	str	r3, [r2, #0]
 8000342:	bf00      	nop
 8000344:	370c      	adds	r7, #12
 8000346:	46bd      	mov	sp, r7
 8000348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop
 8000350:	200000a4 	.word	0x200000a4

08000354 <trigger_pattern_display>:
 8000354:	b580      	push	{r7, lr}
 8000356:	b082      	sub	sp, #8
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
 800035c:	4b05      	ldr	r3, [pc, #20]	@ (8000374 <trigger_pattern_display+0x20>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	2b00      	cmp	r3, #0
 8000362:	d003      	beq.n	800036c <trigger_pattern_display+0x18>
 8000364:	4b03      	ldr	r3, [pc, #12]	@ (8000374 <trigger_pattern_display+0x20>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	6878      	ldr	r0, [r7, #4]
 800036a:	4798      	blx	r3
 800036c:	bf00      	nop
 800036e:	3708      	adds	r7, #8
 8000370:	46bd      	mov	sp, r7
 8000372:	bd80      	pop	{r7, pc}
 8000374:	200000a4 	.word	0x200000a4

08000378 <DigitalIO_SetPattern>:
 8000378:	b580      	push	{r7, lr}
 800037a:	b082      	sub	sp, #8
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	6878      	ldr	r0, [r7, #4]
 8000382:	f7ff ffe7 	bl	8000354 <trigger_pattern_display>
 8000386:	bf00      	nop
 8000388:	3708      	adds	r7, #8
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}
	...

08000390 <EXTI0_IRQHandler>:
 8000390:	b580      	push	{r7, lr}
 8000392:	af00      	add	r7, sp, #0
 8000394:	4b07      	ldr	r3, [pc, #28]	@ (80003b4 <EXTI0_IRQHandler+0x24>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	2b00      	cmp	r3, #0
 800039a:	d002      	beq.n	80003a2 <EXTI0_IRQHandler+0x12>
 800039c:	4b05      	ldr	r3, [pc, #20]	@ (80003b4 <EXTI0_IRQHandler+0x24>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4798      	blx	r3
 80003a2:	4b05      	ldr	r3, [pc, #20]	@ (80003b8 <EXTI0_IRQHandler+0x28>)
 80003a4:	695b      	ldr	r3, [r3, #20]
 80003a6:	4a04      	ldr	r2, [pc, #16]	@ (80003b8 <EXTI0_IRQHandler+0x28>)
 80003a8:	f043 0301 	orr.w	r3, r3, #1
 80003ac:	6153      	str	r3, [r2, #20]
 80003ae:	bf00      	nop
 80003b0:	bd80      	pop	{r7, pc}
 80003b2:	bf00      	nop
 80003b4:	200000a8 	.word	0x200000a8
 80003b8:	40010400 	.word	0x40010400

080003bc <initialise_board>:
 80003bc:	b480      	push	{r7}
 80003be:	af00      	add	r7, sp, #0
 80003c0:	4b0b      	ldr	r3, [pc, #44]	@ (80003f0 <initialise_board+0x34>)
 80003c2:	695b      	ldr	r3, [r3, #20]
 80003c4:	4a0a      	ldr	r2, [pc, #40]	@ (80003f0 <initialise_board+0x34>)
 80003c6:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80003ca:	6153      	str	r3, [r2, #20]
 80003cc:	4b09      	ldr	r3, [pc, #36]	@ (80003f4 <initialise_board+0x38>)
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	4a08      	ldr	r2, [pc, #32]	@ (80003f4 <initialise_board+0x38>)
 80003d2:	b29b      	uxth	r3, r3
 80003d4:	6013      	str	r3, [r2, #0]
 80003d6:	4b07      	ldr	r3, [pc, #28]	@ (80003f4 <initialise_board+0x38>)
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	4a06      	ldr	r2, [pc, #24]	@ (80003f4 <initialise_board+0x38>)
 80003dc:	f043 43aa 	orr.w	r3, r3, #1426063360	@ 0x55000000
 80003e0:	f443 03aa 	orr.w	r3, r3, #5570560	@ 0x550000
 80003e4:	6013      	str	r3, [r2, #0]
 80003e6:	bf00      	nop
 80003e8:	46bd      	mov	sp, r7
 80003ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ee:	4770      	bx	lr
 80003f0:	40021000 	.word	0x40021000
 80003f4:	48001000 	.word	0x48001000

080003f8 <leds_set_state>:
 80003f8:	b480      	push	{r7}
 80003fa:	b083      	sub	sp, #12
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	4603      	mov	r3, r0
 8000400:	71fb      	strb	r3, [r7, #7]
 8000402:	4b07      	ldr	r3, [pc, #28]	@ (8000420 <leds_set_state+0x28>)
 8000404:	695b      	ldr	r3, [r3, #20]
 8000406:	b2da      	uxtb	r2, r3
 8000408:	79fb      	ldrb	r3, [r7, #7]
 800040a:	021b      	lsls	r3, r3, #8
 800040c:	4904      	ldr	r1, [pc, #16]	@ (8000420 <leds_set_state+0x28>)
 800040e:	4313      	orrs	r3, r2
 8000410:	614b      	str	r3, [r1, #20]
 8000412:	bf00      	nop
 8000414:	370c      	adds	r7, #12
 8000416:	46bd      	mov	sp, r7
 8000418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041c:	4770      	bx	lr
 800041e:	bf00      	nop
 8000420:	48001000 	.word	0x48001000

08000424 <__io_putchar>:
#include "digitalio.h"
#include "stm32f303xc.h"

#define MAX_CMD_LEN 64

int __io_putchar(int ch) {
 8000424:	b580      	push	{r7, lr}
 8000426:	b082      	sub	sp, #8
 8000428:	af00      	add	r7, sp, #0
 800042a:	6078      	str	r0, [r7, #4]
    SerialOutputChar((uint8_t)ch, &USART1_PORT);
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	b2db      	uxtb	r3, r3
 8000430:	4904      	ldr	r1, [pc, #16]	@ (8000444 <__io_putchar+0x20>)
 8000432:	4618      	mov	r0, r3
 8000434:	f000 fb62 	bl	8000afc <SerialOutputChar>
    return ch;
 8000438:	687b      	ldr	r3, [r7, #4]
}
 800043a:	4618      	mov	r0, r3
 800043c:	3708      	adds	r7, #8
 800043e:	46bd      	mov	sp, r7
 8000440:	bd80      	pop	{r7, pc}
 8000442:	bf00      	nop
 8000444:	20000000 	.word	0x20000000

08000448 <reset_all_modes>:
    MODE_SERIAL
} SystemMode;

SystemMode current_mode = MODE_NONE;

void reset_all_modes() {
 8000448:	b580      	push	{r7, lr}
 800044a:	af00      	add	r7, sp, #0
    // Stop timer
    TIM2->CR1 = 0;
 800044c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000450:	2200      	movs	r2, #0
 8000452:	601a      	str	r2, [r3, #0]

    // Reset LED output
    leds_set_state(0);  // Turn off all LEDs
 8000454:	2000      	movs	r0, #0
 8000456:	f7ff ffcf 	bl	80003f8 <leds_set_state>

    // Disable UART TX interrupt (optional)
    USART1->CR1 &= ~USART_CR1_TXEIE;
 800045a:	4b05      	ldr	r3, [pc, #20]	@ (8000470 <reset_all_modes+0x28>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	4a04      	ldr	r2, [pc, #16]	@ (8000470 <reset_all_modes+0x28>)
 8000460:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000464:	6013      	str	r3, [r2, #0]

    current_mode = MODE_NONE;
 8000466:	4b03      	ldr	r3, [pc, #12]	@ (8000474 <reset_all_modes+0x2c>)
 8000468:	2200      	movs	r2, #0
 800046a:	701a      	strb	r2, [r3, #0]
}
 800046c:	bf00      	nop
 800046e:	bd80      	pop	{r7, pc}
 8000470:	40013800 	.word	0x40013800
 8000474:	200000ac 	.word	0x200000ac

08000478 <OnLineReceived>:

void OnLineReceived(char *input, uint32_t len) {
 8000478:	b580      	push	{r7, lr}
 800047a:	b0a4      	sub	sp, #144	@ 0x90
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]
 8000480:	6039      	str	r1, [r7, #0]
    char command[MAX_CMD_LEN], argument[MAX_CMD_LEN];
    if (sscanf(input, "%s %[^\n]", command, argument) != 2) {
 8000482:	f107 0308 	add.w	r3, r7, #8
 8000486:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800048a:	493d      	ldr	r1, [pc, #244]	@ (8000580 <OnLineReceived+0x108>)
 800048c:	6878      	ldr	r0, [r7, #4]
 800048e:	f000 fc39 	bl	8000d04 <siscanf>
 8000492:	4603      	mov	r3, r0
 8000494:	2b02      	cmp	r3, #2
 8000496:	d003      	beq.n	80004a0 <OnLineReceived+0x28>
        SerialStartTransmission("Invalid input format.\r\n> ");
 8000498:	483a      	ldr	r0, [pc, #232]	@ (8000584 <OnLineReceived+0x10c>)
 800049a:	f000 fb57 	bl	8000b4c <SerialStartTransmission>
 800049e:	e06c      	b.n	800057a <OnLineReceived+0x102>
        return;
    }
    reset_all_modes();
 80004a0:	f7ff ffd2 	bl	8000448 <reset_all_modes>

    if (strcmp(command, "led") == 0) {
 80004a4:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80004a8:	4937      	ldr	r1, [pc, #220]	@ (8000588 <OnLineReceived+0x110>)
 80004aa:	4618      	mov	r0, r3
 80004ac:	f7ff fea0 	bl	80001f0 <strcmp>
 80004b0:	4603      	mov	r3, r0
 80004b2:	2b00      	cmp	r3, #0
 80004b4:	d10b      	bne.n	80004ce <OnLineReceived+0x56>
        DigitalIO_SetPattern(argument);
 80004b6:	f107 0308 	add.w	r3, r7, #8
 80004ba:	4618      	mov	r0, r3
 80004bc:	f7ff ff5c 	bl	8000378 <DigitalIO_SetPattern>
        current_mode = MODE_LED;
 80004c0:	4b32      	ldr	r3, [pc, #200]	@ (800058c <OnLineReceived+0x114>)
 80004c2:	2201      	movs	r2, #1
 80004c4:	701a      	strb	r2, [r3, #0]
        SerialStartTransmission("LED pattern set.\r\n> ");
 80004c6:	4832      	ldr	r0, [pc, #200]	@ (8000590 <OnLineReceived+0x118>)
 80004c8:	f000 fb40 	bl	8000b4c <SerialStartTransmission>
 80004cc:	e055      	b.n	800057a <OnLineReceived+0x102>
    }
    else if (strcmp(command, "serial") == 0) {
 80004ce:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80004d2:	4930      	ldr	r1, [pc, #192]	@ (8000594 <OnLineReceived+0x11c>)
 80004d4:	4618      	mov	r0, r3
 80004d6:	f7ff fe8b 	bl	80001f0 <strcmp>
 80004da:	4603      	mov	r3, r0
 80004dc:	2b00      	cmp	r3, #0
 80004de:	d10b      	bne.n	80004f8 <OnLineReceived+0x80>
        SerialStartTransmission(argument);
 80004e0:	f107 0308 	add.w	r3, r7, #8
 80004e4:	4618      	mov	r0, r3
 80004e6:	f000 fb31 	bl	8000b4c <SerialStartTransmission>
        current_mode = MODE_SERIAL;
 80004ea:	4b28      	ldr	r3, [pc, #160]	@ (800058c <OnLineReceived+0x114>)
 80004ec:	2204      	movs	r2, #4
 80004ee:	701a      	strb	r2, [r3, #0]
        SerialStartTransmission("\r\n> ");
 80004f0:	4829      	ldr	r0, [pc, #164]	@ (8000598 <OnLineReceived+0x120>)
 80004f2:	f000 fb2b 	bl	8000b4c <SerialStartTransmission>
 80004f6:	e040      	b.n	800057a <OnLineReceived+0x102>
    }
    else if (strcmp(command, "timer") == 0) {
 80004f8:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80004fc:	4927      	ldr	r1, [pc, #156]	@ (800059c <OnLineReceived+0x124>)
 80004fe:	4618      	mov	r0, r3
 8000500:	f7ff fe76 	bl	80001f0 <strcmp>
 8000504:	4603      	mov	r3, r0
 8000506:	2b00      	cmp	r3, #0
 8000508:	d115      	bne.n	8000536 <OnLineReceived+0xbe>
        uint32_t ms = atoi(argument);
 800050a:	f107 0308 	add.w	r3, r7, #8
 800050e:	4618      	mov	r0, r3
 8000510:	f000 fbf3 	bl	8000cfa <atoi>
 8000514:	4603      	mov	r3, r0
 8000516:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
        current_mode = MODE_TIMER;
 800051a:	4b1c      	ldr	r3, [pc, #112]	@ (800058c <OnLineReceived+0x114>)
 800051c:	2202      	movs	r2, #2
 800051e:	701a      	strb	r2, [r3, #0]
        leds_set_state(0b00000000);
 8000520:	2000      	movs	r0, #0
 8000522:	f7ff ff69 	bl	80003f8 <leds_set_state>
        Timer_SetPeriodic(ms);
 8000526:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 800052a:	f000 fa49 	bl	80009c0 <Timer_SetPeriodic>
        SerialStartTransmission("Periodic timer started.\r\n> ");
 800052e:	481c      	ldr	r0, [pc, #112]	@ (80005a0 <OnLineReceived+0x128>)
 8000530:	f000 fb0c 	bl	8000b4c <SerialStartTransmission>
 8000534:	e021      	b.n	800057a <OnLineReceived+0x102>
    }
    else if (strcmp(command, "oneshot") == 0) {
 8000536:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800053a:	491a      	ldr	r1, [pc, #104]	@ (80005a4 <OnLineReceived+0x12c>)
 800053c:	4618      	mov	r0, r3
 800053e:	f7ff fe57 	bl	80001f0 <strcmp>
 8000542:	4603      	mov	r3, r0
 8000544:	2b00      	cmp	r3, #0
 8000546:	d115      	bne.n	8000574 <OnLineReceived+0xfc>
        uint32_t ms = atoi(argument);
 8000548:	f107 0308 	add.w	r3, r7, #8
 800054c:	4618      	mov	r0, r3
 800054e:	f000 fbd4 	bl	8000cfa <atoi>
 8000552:	4603      	mov	r3, r0
 8000554:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
        leds_set_state(0b00000000);
 8000558:	2000      	movs	r0, #0
 800055a:	f7ff ff4d 	bl	80003f8 <leds_set_state>
        Timer_TriggerOneShot(ms);
 800055e:	f8d7 008c 	ldr.w	r0, [r7, #140]	@ 0x8c
 8000562:	f000 fa3a 	bl	80009da <Timer_TriggerOneShot>
        current_mode = MODE_ONESHOT;
 8000566:	4b09      	ldr	r3, [pc, #36]	@ (800058c <OnLineReceived+0x114>)
 8000568:	2203      	movs	r2, #3
 800056a:	701a      	strb	r2, [r3, #0]
        SerialStartTransmission("One-shot timer triggered.\r\n> ");
 800056c:	480e      	ldr	r0, [pc, #56]	@ (80005a8 <OnLineReceived+0x130>)
 800056e:	f000 faed 	bl	8000b4c <SerialStartTransmission>
 8000572:	e002      	b.n	800057a <OnLineReceived+0x102>
    }
    else {
        SerialStartTransmission("Unknown command.\r\n> ");
 8000574:	480d      	ldr	r0, [pc, #52]	@ (80005ac <OnLineReceived+0x134>)
 8000576:	f000 fae9 	bl	8000b4c <SerialStartTransmission>
    }
}
 800057a:	3790      	adds	r7, #144	@ 0x90
 800057c:	46bd      	mov	sp, r7
 800057e:	bd80      	pop	{r7, pc}
 8000580:	08002564 	.word	0x08002564
 8000584:	08002570 	.word	0x08002570
 8000588:	0800258c 	.word	0x0800258c
 800058c:	200000ac 	.word	0x200000ac
 8000590:	08002590 	.word	0x08002590
 8000594:	080025a8 	.word	0x080025a8
 8000598:	080025b0 	.word	0x080025b0
 800059c:	080025b8 	.word	0x080025b8
 80005a0:	080025c0 	.word	0x080025c0
 80005a4:	080025dc 	.word	0x080025dc
 80005a8:	080025e4 	.word	0x080025e4
 80005ac:	08002604 	.word	0x08002604

080005b0 <main>:

int main(void) {
 80005b0:	b580      	push	{r7, lr}
 80005b2:	af00      	add	r7, sp, #0
    enable_clocks();                       // Enable GPIO/TIM clocks
 80005b4:	f7ff fe7c 	bl	80002b0 <enable_clocks>
    initialise_board();                    // Configure LEDs
 80005b8:	f7ff ff00 	bl	80003bc <initialise_board>
    timer_enable_clocks();
 80005bc:	f000 f910 	bl	80007e0 <timer_enable_clocks>
    timer_initialise_board();
 80005c0:	f000 f924 	bl	800080c <timer_initialise_board>

    SerialInitialise(BAUD_115200, &USART1_PORT, NULL);
 80005c4:	2200      	movs	r2, #0
 80005c6:	490b      	ldr	r1, [pc, #44]	@ (80005f4 <main+0x44>)
 80005c8:	2004      	movs	r0, #4
 80005ca:	f000 fa31 	bl	8000a30 <SerialInitialise>
    SerialSetReceiveCallback(&USART1_PORT, OnLineReceived);
 80005ce:	490a      	ldr	r1, [pc, #40]	@ (80005f8 <main+0x48>)
 80005d0:	4808      	ldr	r0, [pc, #32]	@ (80005f4 <main+0x44>)
 80005d2:	f000 faac 	bl	8000b2e <SerialSetReceiveCallback>
    init_timer_module(TIM2, change_pattern);
 80005d6:	4909      	ldr	r1, [pc, #36]	@ (80005fc <main+0x4c>)
 80005d8:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80005dc:	f000 f940 	bl	8000860 <init_timer_module>
    enable_timer2_interrupt();             // Enable TIM2 IRQs
 80005e0:	f000 f99e 	bl	8000920 <enable_timer2_interrupt>
    pattern_callback_init(display_pattern_callback); // Register LED pattern handler
 80005e4:	4806      	ldr	r0, [pc, #24]	@ (8000600 <main+0x50>)
 80005e6:	f7ff fea5 	bl	8000334 <pattern_callback_init>

    printf("USART1 is ready. Type a line and press Enter:\r\n> ");
 80005ea:	4806      	ldr	r0, [pc, #24]	@ (8000604 <main+0x54>)
 80005ec:	f000 fd42 	bl	8001074 <iprintf>

    while (1) {
 80005f0:	bf00      	nop
 80005f2:	e7fd      	b.n	80005f0 <main+0x40>
 80005f4:	20000000 	.word	0x20000000
 80005f8:	08000479 	.word	0x08000479
 80005fc:	080008a5 	.word	0x080008a5
 8000600:	080002d1 	.word	0x080002d1
 8000604:	0800261c 	.word	0x0800261c

08000608 <_read>:
 8000608:	b580      	push	{r7, lr}
 800060a:	b086      	sub	sp, #24
 800060c:	af00      	add	r7, sp, #0
 800060e:	60f8      	str	r0, [r7, #12]
 8000610:	60b9      	str	r1, [r7, #8]
 8000612:	607a      	str	r2, [r7, #4]
 8000614:	2300      	movs	r3, #0
 8000616:	617b      	str	r3, [r7, #20]
 8000618:	e00a      	b.n	8000630 <_read+0x28>
 800061a:	f3af 8000 	nop.w
 800061e:	4601      	mov	r1, r0
 8000620:	68bb      	ldr	r3, [r7, #8]
 8000622:	1c5a      	adds	r2, r3, #1
 8000624:	60ba      	str	r2, [r7, #8]
 8000626:	b2ca      	uxtb	r2, r1
 8000628:	701a      	strb	r2, [r3, #0]
 800062a:	697b      	ldr	r3, [r7, #20]
 800062c:	3301      	adds	r3, #1
 800062e:	617b      	str	r3, [r7, #20]
 8000630:	697a      	ldr	r2, [r7, #20]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	429a      	cmp	r2, r3
 8000636:	dbf0      	blt.n	800061a <_read+0x12>
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	4618      	mov	r0, r3
 800063c:	3718      	adds	r7, #24
 800063e:	46bd      	mov	sp, r7
 8000640:	bd80      	pop	{r7, pc}

08000642 <_write>:
 8000642:	b580      	push	{r7, lr}
 8000644:	b086      	sub	sp, #24
 8000646:	af00      	add	r7, sp, #0
 8000648:	60f8      	str	r0, [r7, #12]
 800064a:	60b9      	str	r1, [r7, #8]
 800064c:	607a      	str	r2, [r7, #4]
 800064e:	2300      	movs	r3, #0
 8000650:	617b      	str	r3, [r7, #20]
 8000652:	e009      	b.n	8000668 <_write+0x26>
 8000654:	68bb      	ldr	r3, [r7, #8]
 8000656:	1c5a      	adds	r2, r3, #1
 8000658:	60ba      	str	r2, [r7, #8]
 800065a:	781b      	ldrb	r3, [r3, #0]
 800065c:	4618      	mov	r0, r3
 800065e:	f7ff fee1 	bl	8000424 <__io_putchar>
 8000662:	697b      	ldr	r3, [r7, #20]
 8000664:	3301      	adds	r3, #1
 8000666:	617b      	str	r3, [r7, #20]
 8000668:	697a      	ldr	r2, [r7, #20]
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	429a      	cmp	r2, r3
 800066e:	dbf1      	blt.n	8000654 <_write+0x12>
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	4618      	mov	r0, r3
 8000674:	3718      	adds	r7, #24
 8000676:	46bd      	mov	sp, r7
 8000678:	bd80      	pop	{r7, pc}

0800067a <_close>:
 800067a:	b480      	push	{r7}
 800067c:	b083      	sub	sp, #12
 800067e:	af00      	add	r7, sp, #0
 8000680:	6078      	str	r0, [r7, #4]
 8000682:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000686:	4618      	mov	r0, r3
 8000688:	370c      	adds	r7, #12
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr

08000692 <_fstat>:
 8000692:	b480      	push	{r7}
 8000694:	b083      	sub	sp, #12
 8000696:	af00      	add	r7, sp, #0
 8000698:	6078      	str	r0, [r7, #4]
 800069a:	6039      	str	r1, [r7, #0]
 800069c:	683b      	ldr	r3, [r7, #0]
 800069e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80006a2:	605a      	str	r2, [r3, #4]
 80006a4:	2300      	movs	r3, #0
 80006a6:	4618      	mov	r0, r3
 80006a8:	370c      	adds	r7, #12
 80006aa:	46bd      	mov	sp, r7
 80006ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006b0:	4770      	bx	lr

080006b2 <_isatty>:
 80006b2:	b480      	push	{r7}
 80006b4:	b083      	sub	sp, #12
 80006b6:	af00      	add	r7, sp, #0
 80006b8:	6078      	str	r0, [r7, #4]
 80006ba:	2301      	movs	r3, #1
 80006bc:	4618      	mov	r0, r3
 80006be:	370c      	adds	r7, #12
 80006c0:	46bd      	mov	sp, r7
 80006c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006c6:	4770      	bx	lr

080006c8 <_lseek>:
 80006c8:	b480      	push	{r7}
 80006ca:	b085      	sub	sp, #20
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	60f8      	str	r0, [r7, #12]
 80006d0:	60b9      	str	r1, [r7, #8]
 80006d2:	607a      	str	r2, [r7, #4]
 80006d4:	2300      	movs	r3, #0
 80006d6:	4618      	mov	r0, r3
 80006d8:	3714      	adds	r7, #20
 80006da:	46bd      	mov	sp, r7
 80006dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006e0:	4770      	bx	lr
	...

080006e4 <_sbrk>:
 80006e4:	b580      	push	{r7, lr}
 80006e6:	b086      	sub	sp, #24
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
 80006ec:	4a14      	ldr	r2, [pc, #80]	@ (8000740 <_sbrk+0x5c>)
 80006ee:	4b15      	ldr	r3, [pc, #84]	@ (8000744 <_sbrk+0x60>)
 80006f0:	1ad3      	subs	r3, r2, r3
 80006f2:	617b      	str	r3, [r7, #20]
 80006f4:	697b      	ldr	r3, [r7, #20]
 80006f6:	613b      	str	r3, [r7, #16]
 80006f8:	4b13      	ldr	r3, [pc, #76]	@ (8000748 <_sbrk+0x64>)
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	d102      	bne.n	8000706 <_sbrk+0x22>
 8000700:	4b11      	ldr	r3, [pc, #68]	@ (8000748 <_sbrk+0x64>)
 8000702:	4a12      	ldr	r2, [pc, #72]	@ (800074c <_sbrk+0x68>)
 8000704:	601a      	str	r2, [r3, #0]
 8000706:	4b10      	ldr	r3, [pc, #64]	@ (8000748 <_sbrk+0x64>)
 8000708:	681a      	ldr	r2, [r3, #0]
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	4413      	add	r3, r2
 800070e:	693a      	ldr	r2, [r7, #16]
 8000710:	429a      	cmp	r2, r3
 8000712:	d207      	bcs.n	8000724 <_sbrk+0x40>
 8000714:	f000 fd0e 	bl	8001134 <__errno>
 8000718:	4603      	mov	r3, r0
 800071a:	220c      	movs	r2, #12
 800071c:	601a      	str	r2, [r3, #0]
 800071e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000722:	e009      	b.n	8000738 <_sbrk+0x54>
 8000724:	4b08      	ldr	r3, [pc, #32]	@ (8000748 <_sbrk+0x64>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	60fb      	str	r3, [r7, #12]
 800072a:	4b07      	ldr	r3, [pc, #28]	@ (8000748 <_sbrk+0x64>)
 800072c:	681a      	ldr	r2, [r3, #0]
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	4413      	add	r3, r2
 8000732:	4a05      	ldr	r2, [pc, #20]	@ (8000748 <_sbrk+0x64>)
 8000734:	6013      	str	r3, [r2, #0]
 8000736:	68fb      	ldr	r3, [r7, #12]
 8000738:	4618      	mov	r0, r3
 800073a:	3718      	adds	r7, #24
 800073c:	46bd      	mov	sp, r7
 800073e:	bd80      	pop	{r7, pc}
 8000740:	2000a000 	.word	0x2000a000
 8000744:	00000400 	.word	0x00000400
 8000748:	200000b0 	.word	0x200000b0
 800074c:	20000298 	.word	0x20000298

08000750 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000750:	b480      	push	{r7}
 8000752:	b083      	sub	sp, #12
 8000754:	af00      	add	r7, sp, #0
 8000756:	4603      	mov	r3, r0
 8000758:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800075a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800075e:	2b00      	cmp	r3, #0
 8000760:	db0b      	blt.n	800077a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000762:	79fb      	ldrb	r3, [r7, #7]
 8000764:	f003 021f 	and.w	r2, r3, #31
 8000768:	4907      	ldr	r1, [pc, #28]	@ (8000788 <__NVIC_EnableIRQ+0x38>)
 800076a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800076e:	095b      	lsrs	r3, r3, #5
 8000770:	2001      	movs	r0, #1
 8000772:	fa00 f202 	lsl.w	r2, r0, r2
 8000776:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800077a:	bf00      	nop
 800077c:	370c      	adds	r7, #12
 800077e:	46bd      	mov	sp, r7
 8000780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000784:	4770      	bx	lr
 8000786:	bf00      	nop
 8000788:	e000e100 	.word	0xe000e100

0800078c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800078c:	b480      	push	{r7}
 800078e:	b083      	sub	sp, #12
 8000790:	af00      	add	r7, sp, #0
 8000792:	4603      	mov	r3, r0
 8000794:	6039      	str	r1, [r7, #0]
 8000796:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000798:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800079c:	2b00      	cmp	r3, #0
 800079e:	db0a      	blt.n	80007b6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80007a0:	683b      	ldr	r3, [r7, #0]
 80007a2:	b2da      	uxtb	r2, r3
 80007a4:	490c      	ldr	r1, [pc, #48]	@ (80007d8 <__NVIC_SetPriority+0x4c>)
 80007a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80007aa:	0112      	lsls	r2, r2, #4
 80007ac:	b2d2      	uxtb	r2, r2
 80007ae:	440b      	add	r3, r1
 80007b0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80007b4:	e00a      	b.n	80007cc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80007b6:	683b      	ldr	r3, [r7, #0]
 80007b8:	b2da      	uxtb	r2, r3
 80007ba:	4908      	ldr	r1, [pc, #32]	@ (80007dc <__NVIC_SetPriority+0x50>)
 80007bc:	79fb      	ldrb	r3, [r7, #7]
 80007be:	f003 030f 	and.w	r3, r3, #15
 80007c2:	3b04      	subs	r3, #4
 80007c4:	0112      	lsls	r2, r2, #4
 80007c6:	b2d2      	uxtb	r2, r2
 80007c8:	440b      	add	r3, r1
 80007ca:	761a      	strb	r2, [r3, #24]
}
 80007cc:	bf00      	nop
 80007ce:	370c      	adds	r7, #12
 80007d0:	46bd      	mov	sp, r7
 80007d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d6:	4770      	bx	lr
 80007d8:	e000e100 	.word	0xe000e100
 80007dc:	e000ed00 	.word	0xe000ed00

080007e0 <timer_enable_clocks>:

// status of timer operation, 0 = regular interval mode, 1 = one-shot mode
uint8_t timer_mode = 0;

// enable the clocks for desired peripherals (GPIOA, C and E)
void timer_enable_clocks() {
 80007e0:	b480      	push	{r7}
 80007e2:	af00      	add	r7, sp, #0
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIOEEN;
 80007e4:	4b08      	ldr	r3, [pc, #32]	@ (8000808 <timer_enable_clocks+0x28>)
 80007e6:	695b      	ldr	r3, [r3, #20]
 80007e8:	4a07      	ldr	r2, [pc, #28]	@ (8000808 <timer_enable_clocks+0x28>)
 80007ea:	f443 1328 	orr.w	r3, r3, #2752512	@ 0x2a0000
 80007ee:	6153      	str	r3, [r2, #20]
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 80007f0:	4b05      	ldr	r3, [pc, #20]	@ (8000808 <timer_enable_clocks+0x28>)
 80007f2:	69db      	ldr	r3, [r3, #28]
 80007f4:	4a04      	ldr	r2, [pc, #16]	@ (8000808 <timer_enable_clocks+0x28>)
 80007f6:	f043 0301 	orr.w	r3, r3, #1
 80007fa:	61d3      	str	r3, [r2, #28]
}
 80007fc:	bf00      	nop
 80007fe:	46bd      	mov	sp, r7
 8000800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000804:	4770      	bx	lr
 8000806:	bf00      	nop
 8000808:	40021000 	.word	0x40021000

0800080c <timer_initialise_board>:

// initialise the discovery board I/O (just outputs: inputs are selected by default)
void timer_initialise_board() {
 800080c:	b480      	push	{r7}
 800080e:	b083      	sub	sp, #12
 8000810:	af00      	add	r7, sp, #0
	// get a pointer to the second half word of the MODER register (for outputs pe8-15)
	uint16_t *led_output_registers = ((uint16_t *)&(GPIOE->MODER)) + 1;
 8000812:	4b06      	ldr	r3, [pc, #24]	@ (800082c <timer_initialise_board+0x20>)
 8000814:	607b      	str	r3, [r7, #4]
	*led_output_registers = 0x5555; //every second led is on
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	f245 5255 	movw	r2, #21845	@ 0x5555
 800081c:	801a      	strh	r2, [r3, #0]
}
 800081e:	bf00      	nop
 8000820:	370c      	adds	r7, #12
 8000822:	46bd      	mov	sp, r7
 8000824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000828:	4770      	bx	lr
 800082a:	bf00      	nop
 800082c:	48001002 	.word	0x48001002

08000830 <trigger_prescaler>:

// general function called to make new prescaler value take effect
// input: desired timer number
void trigger_prescaler(TIM_TypeDef *TIM) {
 8000830:	b480      	push	{r7}
 8000832:	b083      	sub	sp, #12
 8000834:	af00      	add	r7, sp, #0
 8000836:	6078      	str	r0, [r7, #4]

	TIM->ARR = 0x01;
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	2201      	movs	r2, #1
 800083c:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM->CNT = 0x00;
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	2200      	movs	r2, #0
 8000842:	625a      	str	r2, [r3, #36]	@ 0x24
	asm("NOP");
 8000844:	bf00      	nop
	asm("NOP");
 8000846:	bf00      	nop
	asm("NOP");
 8000848:	bf00      	nop
	TIM->ARR = 0xffffffff;
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000850:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8000852:	bf00      	nop
 8000854:	370c      	adds	r7, #12
 8000856:	46bd      	mov	sp, r7
 8000858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085c:	4770      	bx	lr
	...

08000860 <init_timer_module>:
void (*on_timer_interrupt)() = 0x00;


// initialise timer with delay time in ms to trigger a callback function regularly
// input: desired timer number to initialise; delay time in ms; callback function
void init_timer_module(TIM_TypeDef *TIM, void (*timer_callback)()) {
 8000860:	b580      	push	{r7, lr}
 8000862:	b082      	sub	sp, #8
 8000864:	af00      	add	r7, sp, #0
 8000866:	6078      	str	r0, [r7, #4]
 8000868:	6039      	str	r1, [r7, #0]

	TIM->CR1 |= TIM_CR1_CEN;
 800086a:	687b      	ldr	r3, [r7, #4]
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	f043 0201 	orr.w	r2, r3, #1
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	601a      	str	r2, [r3, #0]
	TIM->PSC = 7999;
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 800087c:	629a      	str	r2, [r3, #40]	@ 0x28
	trigger_prescaler(TIM);
 800087e:	6878      	ldr	r0, [r7, #4]
 8000880:	f7ff ffd6 	bl	8000830 <trigger_prescaler>
	TIM->CR1 = 0;
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	2200      	movs	r2, #0
 8000888:	601a      	str	r2, [r3, #0]
	TIM->CNT = 0;
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	2200      	movs	r2, #0
 800088e:	625a      	str	r2, [r3, #36]	@ 0x24

	on_timer_interrupt = timer_callback;
 8000890:	4a03      	ldr	r2, [pc, #12]	@ (80008a0 <init_timer_module+0x40>)
 8000892:	683b      	ldr	r3, [r7, #0]
 8000894:	6013      	str	r3, [r2, #0]

}
 8000896:	bf00      	nop
 8000898:	3708      	adds	r7, #8
 800089a:	46bd      	mov	sp, r7
 800089c:	bd80      	pop	{r7, pc}
 800089e:	bf00      	nop
 80008a0:	200000b8 	.word	0x200000b8

080008a4 <change_pattern>:

// simple function to switch on/off every second led when called
void change_pattern() {
 80008a4:	b480      	push	{r7}
 80008a6:	b083      	sub	sp, #12
 80008a8:	af00      	add	r7, sp, #0

	uint8_t *led_output_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 80008aa:	4b07      	ldr	r3, [pc, #28]	@ (80008c8 <change_pattern+0x24>)
 80008ac:	607b      	str	r3, [r7, #4]
	*led_output_register ^= 0b11111111;
 80008ae:	687b      	ldr	r3, [r7, #4]
 80008b0:	781b      	ldrb	r3, [r3, #0]
 80008b2:	43db      	mvns	r3, r3
 80008b4:	b2da      	uxtb	r2, r3
 80008b6:	687b      	ldr	r3, [r7, #4]
 80008b8:	701a      	strb	r2, [r3, #0]
}
 80008ba:	bf00      	nop
 80008bc:	370c      	adds	r7, #12
 80008be:	46bd      	mov	sp, r7
 80008c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	48001015 	.word	0x48001015

080008cc <TIM2_IRQHandler>:

// function called when timer interrupt is raised
void TIM2_IRQHandler(void) {
 80008cc:	b580      	push	{r7, lr}
 80008ce:	af00      	add	r7, sp, #0
    // Check if the TIM2 interrupt flag is set
    if (TIM2->SR & TIM_SR_UIF) {
 80008d0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80008d4:	691b      	ldr	r3, [r3, #16]
 80008d6:	f003 0301 	and.w	r3, r3, #1
 80008da:	2b00      	cmp	r3, #0
 80008dc:	d019      	beq.n	8000912 <TIM2_IRQHandler+0x46>
        // run the callback function (make sure it is not null first)
        if (on_timer_interrupt != 0x00) {
 80008de:	4b0e      	ldr	r3, [pc, #56]	@ (8000918 <TIM2_IRQHandler+0x4c>)
 80008e0:	681b      	ldr	r3, [r3, #0]
 80008e2:	2b00      	cmp	r3, #0
 80008e4:	d00d      	beq.n	8000902 <TIM2_IRQHandler+0x36>

        	on_timer_interrupt();
 80008e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000918 <TIM2_IRQHandler+0x4c>)
 80008e8:	681b      	ldr	r3, [r3, #0]
 80008ea:	4798      	blx	r3

        	// if timer is in one-shot mode then stop timer and reset timer to default mode
			if (timer_mode == 1) {
 80008ec:	4b0b      	ldr	r3, [pc, #44]	@ (800091c <TIM2_IRQHandler+0x50>)
 80008ee:	781b      	ldrb	r3, [r3, #0]
 80008f0:	2b01      	cmp	r3, #1
 80008f2:	d106      	bne.n	8000902 <TIM2_IRQHandler+0x36>
        		TIM2->CR1 = 0;
 80008f4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80008f8:	2200      	movs	r2, #0
 80008fa:	601a      	str	r2, [r3, #0]
        		timer_mode = 0;
 80008fc:	4b07      	ldr	r3, [pc, #28]	@ (800091c <TIM2_IRQHandler+0x50>)
 80008fe:	2200      	movs	r2, #0
 8000900:	701a      	strb	r2, [r3, #0]
			}
        }
        // Clear the interrupt flag (write 1 to the UIF bit to reset it)
        TIM2->SR &= ~TIM_SR_UIF;
 8000902:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000906:	691b      	ldr	r3, [r3, #16]
 8000908:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800090c:	f023 0301 	bic.w	r3, r3, #1
 8000910:	6113      	str	r3, [r2, #16]
    }
}
 8000912:	bf00      	nop
 8000914:	bd80      	pop	{r7, pc}
 8000916:	bf00      	nop
 8000918:	200000b8 	.word	0x200000b8
 800091c:	200000b4 	.word	0x200000b4

08000920 <enable_timer2_interrupt>:

// intialise hardware interrupt for timer 2
void enable_timer2_interrupt() {
 8000920:	b580      	push	{r7, lr}
 8000922:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000924:	b672      	cpsid	i
}
 8000926:	bf00      	nop
	// Disable the interrupts while messing around with the settings
	//  otherwise can lead to strange behaviour
	__disable_irq();

	// Enable update interrupt (UIE)
	TIM2->DIER |= TIM_DIER_UIE;
 8000928:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800092c:	68db      	ldr	r3, [r3, #12]
 800092e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000932:	f043 0301 	orr.w	r3, r3, #1
 8000936:	60d3      	str	r3, [r2, #12]

	// Tell the NVIC module that EXTI0 interrupts should be handled
	NVIC_SetPriority(TIM2_IRQn, 1);  // Set Priority
 8000938:	2101      	movs	r1, #1
 800093a:	201c      	movs	r0, #28
 800093c:	f7ff ff26 	bl	800078c <__NVIC_SetPriority>
	NVIC_EnableIRQ(TIM2_IRQn);
 8000940:	201c      	movs	r0, #28
 8000942:	f7ff ff05 	bl	8000750 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 8000946:	b662      	cpsie	i
}
 8000948:	bf00      	nop

	// Re-enable all interrupts (now that we are finished)
	__enable_irq();
}
 800094a:	bf00      	nop
 800094c:	bd80      	pop	{r7, pc}

0800094e <set_timer_period>:
	return TIM->ARR;
}

// simple set function to set a specific timer's period in ms
// assuming timers are configured to 1kHz so each count is 1ms
void set_timer_period(TIM_TypeDef *TIM, uint32_t new_period) {
 800094e:	b480      	push	{r7}
 8000950:	b083      	sub	sp, #12
 8000952:	af00      	add	r7, sp, #0
 8000954:	6078      	str	r0, [r7, #4]
 8000956:	6039      	str	r1, [r7, #0]
	TIM->ARR = new_period;
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	683a      	ldr	r2, [r7, #0]
 800095c:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 800095e:	bf00      	nop
 8000960:	370c      	adds	r7, #12
 8000962:	46bd      	mov	sp, r7
 8000964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000968:	4770      	bx	lr

0800096a <reset_timer>:

// function to reset a specific timer's count with a new period in ms
// assuming timers are configured to 1kHz so each count is ms
void reset_timer(TIM_TypeDef *TIM, uint32_t new_period) {
 800096a:	b580      	push	{r7, lr}
 800096c:	b082      	sub	sp, #8
 800096e:	af00      	add	r7, sp, #0
 8000970:	6078      	str	r0, [r7, #4]
 8000972:	6039      	str	r1, [r7, #0]

	// stop timer's count and reset count to 0
	TIM->CR1 = 0;
 8000974:	687b      	ldr	r3, [r7, #4]
 8000976:	2200      	movs	r2, #0
 8000978:	601a      	str	r2, [r3, #0]
	TIM->CNT = 0;
 800097a:	687b      	ldr	r3, [r7, #4]
 800097c:	2200      	movs	r2, #0
 800097e:	625a      	str	r2, [r3, #36]	@ 0x24
	// set new period
	set_timer_period(TIM, new_period);
 8000980:	6839      	ldr	r1, [r7, #0]
 8000982:	6878      	ldr	r0, [r7, #4]
 8000984:	f7ff ffe3 	bl	800094e <set_timer_period>
	// restart timer
	TIM->CR1 |= TIM_CR1_CEN;
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	f043 0201 	orr.w	r2, r3, #1
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	601a      	str	r2, [r3, #0]
}
 8000994:	bf00      	nop
 8000996:	3708      	adds	r7, #8
 8000998:	46bd      	mov	sp, r7
 800099a:	bd80      	pop	{r7, pc}

0800099c <one_shot>:

// software implementation to convert a specific timer's operation to one-shot mode by using a flag
// input delay desired in ms
void one_shot(TIM_TypeDef *TIM, uint32_t delay) {
 800099c:	b580      	push	{r7, lr}
 800099e:	b082      	sub	sp, #8
 80009a0:	af00      	add	r7, sp, #0
 80009a2:	6078      	str	r0, [r7, #4]
 80009a4:	6039      	str	r1, [r7, #0]
    timer_mode = 1;
 80009a6:	4b05      	ldr	r3, [pc, #20]	@ (80009bc <one_shot+0x20>)
 80009a8:	2201      	movs	r2, #1
 80009aa:	701a      	strb	r2, [r3, #0]

	reset_timer(TIM, delay);
 80009ac:	6839      	ldr	r1, [r7, #0]
 80009ae:	6878      	ldr	r0, [r7, #4]
 80009b0:	f7ff ffdb 	bl	800096a <reset_timer>
}
 80009b4:	bf00      	nop
 80009b6:	3708      	adds	r7, #8
 80009b8:	46bd      	mov	sp, r7
 80009ba:	bd80      	pop	{r7, pc}
 80009bc:	200000b4 	.word	0x200000b4

080009c0 <Timer_SetPeriodic>:


void Timer_SetPeriodic(uint32_t ms) {
 80009c0:	b580      	push	{r7, lr}
 80009c2:	b082      	sub	sp, #8
 80009c4:	af00      	add	r7, sp, #0
 80009c6:	6078      	str	r0, [r7, #4]
	reset_timer(TIM2, ms);
 80009c8:	6879      	ldr	r1, [r7, #4]
 80009ca:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80009ce:	f7ff ffcc 	bl	800096a <reset_timer>
}
 80009d2:	bf00      	nop
 80009d4:	3708      	adds	r7, #8
 80009d6:	46bd      	mov	sp, r7
 80009d8:	bd80      	pop	{r7, pc}

080009da <Timer_TriggerOneShot>:

void Timer_TriggerOneShot(uint32_t ms) {
 80009da:	b580      	push	{r7, lr}
 80009dc:	b082      	sub	sp, #8
 80009de:	af00      	add	r7, sp, #0
 80009e0:	6078      	str	r0, [r7, #4]
    one_shot(TIM2, ms);
 80009e2:	6879      	ldr	r1, [r7, #4]
 80009e4:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80009e8:	f7ff ffd8 	bl	800099c <one_shot>
}
 80009ec:	bf00      	nop
 80009ee:	3708      	adds	r7, #8
 80009f0:	46bd      	mov	sp, r7
 80009f2:	bd80      	pop	{r7, pc}

080009f4 <__NVIC_EnableIRQ>:
 80009f4:	b480      	push	{r7}
 80009f6:	b083      	sub	sp, #12
 80009f8:	af00      	add	r7, sp, #0
 80009fa:	4603      	mov	r3, r0
 80009fc:	71fb      	strb	r3, [r7, #7]
 80009fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000a02:	2b00      	cmp	r3, #0
 8000a04:	db0b      	blt.n	8000a1e <__NVIC_EnableIRQ+0x2a>
 8000a06:	79fb      	ldrb	r3, [r7, #7]
 8000a08:	f003 021f 	and.w	r2, r3, #31
 8000a0c:	4907      	ldr	r1, [pc, #28]	@ (8000a2c <__NVIC_EnableIRQ+0x38>)
 8000a0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000a12:	095b      	lsrs	r3, r3, #5
 8000a14:	2001      	movs	r0, #1
 8000a16:	fa00 f202 	lsl.w	r2, r0, r2
 8000a1a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000a1e:	bf00      	nop
 8000a20:	370c      	adds	r7, #12
 8000a22:	46bd      	mov	sp, r7
 8000a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a28:	4770      	bx	lr
 8000a2a:	bf00      	nop
 8000a2c:	e000e100 	.word	0xe000e100

08000a30 <SerialInitialise>:
 8000a30:	b580      	push	{r7, lr}
 8000a32:	b086      	sub	sp, #24
 8000a34:	af00      	add	r7, sp, #0
 8000a36:	60f8      	str	r0, [r7, #12]
 8000a38:	60b9      	str	r1, [r7, #8]
 8000a3a:	607a      	str	r2, [r7, #4]
 8000a3c:	68bb      	ldr	r3, [r7, #8]
 8000a3e:	687a      	ldr	r2, [r7, #4]
 8000a40:	625a      	str	r2, [r3, #36]	@ 0x24
 8000a42:	4b2d      	ldr	r3, [pc, #180]	@ (8000af8 <SerialInitialise+0xc8>)
 8000a44:	69db      	ldr	r3, [r3, #28]
 8000a46:	4a2c      	ldr	r2, [pc, #176]	@ (8000af8 <SerialInitialise+0xc8>)
 8000a48:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000a4c:	61d3      	str	r3, [r2, #28]
 8000a4e:	4b2a      	ldr	r3, [pc, #168]	@ (8000af8 <SerialInitialise+0xc8>)
 8000a50:	699b      	ldr	r3, [r3, #24]
 8000a52:	4a29      	ldr	r2, [pc, #164]	@ (8000af8 <SerialInitialise+0xc8>)
 8000a54:	f043 0301 	orr.w	r3, r3, #1
 8000a58:	6193      	str	r3, [r2, #24]
 8000a5a:	68bb      	ldr	r3, [r7, #8]
 8000a5c:	691a      	ldr	r2, [r3, #16]
 8000a5e:	4b26      	ldr	r3, [pc, #152]	@ (8000af8 <SerialInitialise+0xc8>)
 8000a60:	695b      	ldr	r3, [r3, #20]
 8000a62:	4925      	ldr	r1, [pc, #148]	@ (8000af8 <SerialInitialise+0xc8>)
 8000a64:	4313      	orrs	r3, r2
 8000a66:	614b      	str	r3, [r1, #20]
 8000a68:	68bb      	ldr	r3, [r7, #8]
 8000a6a:	685b      	ldr	r3, [r3, #4]
 8000a6c:	68ba      	ldr	r2, [r7, #8]
 8000a6e:	6952      	ldr	r2, [r2, #20]
 8000a70:	601a      	str	r2, [r3, #0]
 8000a72:	68bb      	ldr	r3, [r7, #8]
 8000a74:	685b      	ldr	r3, [r3, #4]
 8000a76:	68ba      	ldr	r2, [r7, #8]
 8000a78:	6992      	ldr	r2, [r2, #24]
 8000a7a:	609a      	str	r2, [r3, #8]
 8000a7c:	68bb      	ldr	r3, [r7, #8]
 8000a7e:	69d9      	ldr	r1, [r3, #28]
 8000a80:	68bb      	ldr	r3, [r7, #8]
 8000a82:	685b      	ldr	r3, [r3, #4]
 8000a84:	6a1a      	ldr	r2, [r3, #32]
 8000a86:	68bb      	ldr	r3, [r7, #8]
 8000a88:	685b      	ldr	r3, [r3, #4]
 8000a8a:	430a      	orrs	r2, r1
 8000a8c:	621a      	str	r2, [r3, #32]
 8000a8e:	68bb      	ldr	r3, [r7, #8]
 8000a90:	6a19      	ldr	r1, [r3, #32]
 8000a92:	68bb      	ldr	r3, [r7, #8]
 8000a94:	685b      	ldr	r3, [r3, #4]
 8000a96:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000a98:	68bb      	ldr	r3, [r7, #8]
 8000a9a:	685b      	ldr	r3, [r3, #4]
 8000a9c:	430a      	orrs	r2, r1
 8000a9e:	625a      	str	r2, [r3, #36]	@ 0x24
 8000aa0:	68bb      	ldr	r3, [r7, #8]
 8000aa2:	68da      	ldr	r2, [r3, #12]
 8000aa4:	4b14      	ldr	r3, [pc, #80]	@ (8000af8 <SerialInitialise+0xc8>)
 8000aa6:	69db      	ldr	r3, [r3, #28]
 8000aa8:	4913      	ldr	r1, [pc, #76]	@ (8000af8 <SerialInitialise+0xc8>)
 8000aaa:	4313      	orrs	r3, r2
 8000aac:	61cb      	str	r3, [r1, #28]
 8000aae:	68bb      	ldr	r3, [r7, #8]
 8000ab0:	689a      	ldr	r2, [r3, #8]
 8000ab2:	4b11      	ldr	r3, [pc, #68]	@ (8000af8 <SerialInitialise+0xc8>)
 8000ab4:	699b      	ldr	r3, [r3, #24]
 8000ab6:	4910      	ldr	r1, [pc, #64]	@ (8000af8 <SerialInitialise+0xc8>)
 8000ab8:	4313      	orrs	r3, r2
 8000aba:	618b      	str	r3, [r1, #24]
 8000abc:	68bb      	ldr	r3, [r7, #8]
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	330c      	adds	r3, #12
 8000ac2:	617b      	str	r3, [r7, #20]
 8000ac4:	697b      	ldr	r3, [r7, #20]
 8000ac6:	2246      	movs	r2, #70	@ 0x46
 8000ac8:	801a      	strh	r2, [r3, #0]
 8000aca:	68bb      	ldr	r3, [r7, #8]
 8000acc:	681b      	ldr	r3, [r3, #0]
 8000ace:	681a      	ldr	r2, [r3, #0]
 8000ad0:	68bb      	ldr	r3, [r7, #8]
 8000ad2:	681b      	ldr	r3, [r3, #0]
 8000ad4:	f042 020d 	orr.w	r2, r2, #13
 8000ad8:	601a      	str	r2, [r3, #0]
 8000ada:	68bb      	ldr	r3, [r7, #8]
 8000adc:	681b      	ldr	r3, [r3, #0]
 8000ade:	681a      	ldr	r2, [r3, #0]
 8000ae0:	68bb      	ldr	r3, [r7, #8]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f042 0220 	orr.w	r2, r2, #32
 8000ae8:	601a      	str	r2, [r3, #0]
 8000aea:	2025      	movs	r0, #37	@ 0x25
 8000aec:	f7ff ff82 	bl	80009f4 <__NVIC_EnableIRQ>
 8000af0:	bf00      	nop
 8000af2:	3718      	adds	r7, #24
 8000af4:	46bd      	mov	sp, r7
 8000af6:	bd80      	pop	{r7, pc}
 8000af8:	40021000 	.word	0x40021000

08000afc <SerialOutputChar>:
 8000afc:	b480      	push	{r7}
 8000afe:	b083      	sub	sp, #12
 8000b00:	af00      	add	r7, sp, #0
 8000b02:	4603      	mov	r3, r0
 8000b04:	6039      	str	r1, [r7, #0]
 8000b06:	71fb      	strb	r3, [r7, #7]
 8000b08:	bf00      	nop
 8000b0a:	683b      	ldr	r3, [r7, #0]
 8000b0c:	681b      	ldr	r3, [r3, #0]
 8000b0e:	69db      	ldr	r3, [r3, #28]
 8000b10:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	d0f8      	beq.n	8000b0a <SerialOutputChar+0xe>
 8000b18:	683b      	ldr	r3, [r7, #0]
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	79fa      	ldrb	r2, [r7, #7]
 8000b1e:	b292      	uxth	r2, r2
 8000b20:	851a      	strh	r2, [r3, #40]	@ 0x28
 8000b22:	bf00      	nop
 8000b24:	370c      	adds	r7, #12
 8000b26:	46bd      	mov	sp, r7
 8000b28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b2c:	4770      	bx	lr

08000b2e <SerialSetReceiveCallback>:
 8000b2e:	b480      	push	{r7}
 8000b30:	b083      	sub	sp, #12
 8000b32:	af00      	add	r7, sp, #0
 8000b34:	6078      	str	r0, [r7, #4]
 8000b36:	6039      	str	r1, [r7, #0]
 8000b38:	687b      	ldr	r3, [r7, #4]
 8000b3a:	683a      	ldr	r2, [r7, #0]
 8000b3c:	629a      	str	r2, [r3, #40]	@ 0x28
 8000b3e:	bf00      	nop
 8000b40:	370c      	adds	r7, #12
 8000b42:	46bd      	mov	sp, r7
 8000b44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b48:	4770      	bx	lr
	...

08000b4c <SerialStartTransmission>:
 8000b4c:	b480      	push	{r7}
 8000b4e:	b083      	sub	sp, #12
 8000b50:	af00      	add	r7, sp, #0
 8000b52:	6078      	str	r0, [r7, #4]
 8000b54:	4a08      	ldr	r2, [pc, #32]	@ (8000b78 <SerialStartTransmission+0x2c>)
 8000b56:	687b      	ldr	r3, [r7, #4]
 8000b58:	6013      	str	r3, [r2, #0]
 8000b5a:	4b08      	ldr	r3, [pc, #32]	@ (8000b7c <SerialStartTransmission+0x30>)
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	601a      	str	r2, [r3, #0]
 8000b60:	4b07      	ldr	r3, [pc, #28]	@ (8000b80 <SerialStartTransmission+0x34>)
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	4a06      	ldr	r2, [pc, #24]	@ (8000b80 <SerialStartTransmission+0x34>)
 8000b66:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000b6a:	6013      	str	r3, [r2, #0]
 8000b6c:	bf00      	nop
 8000b6e:	370c      	adds	r7, #12
 8000b70:	46bd      	mov	sp, r7
 8000b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b76:	4770      	bx	lr
 8000b78:	20000144 	.word	0x20000144
 8000b7c:	20000148 	.word	0x20000148
 8000b80:	40013800 	.word	0x40013800

08000b84 <USART1_EXTI25_IRQHandler>:
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b082      	sub	sp, #8
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	4b40      	ldr	r3, [pc, #256]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000b8c:	69db      	ldr	r3, [r3, #28]
 8000b8e:	f003 0320 	and.w	r3, r3, #32
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	d045      	beq.n	8000c22 <USART1_EXTI25_IRQHandler+0x9e>
 8000b96:	4b3d      	ldr	r3, [pc, #244]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000b98:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8000b9a:	b29b      	uxth	r3, r3
 8000b9c:	71fb      	strb	r3, [r7, #7]
 8000b9e:	79fb      	ldrb	r3, [r7, #7]
 8000ba0:	493b      	ldr	r1, [pc, #236]	@ (8000c90 <USART1_EXTI25_IRQHandler+0x10c>)
 8000ba2:	4618      	mov	r0, r3
 8000ba4:	f7ff ffaa 	bl	8000afc <SerialOutputChar>
 8000ba8:	79fb      	ldrb	r3, [r7, #7]
 8000baa:	2b0d      	cmp	r3, #13
 8000bac:	d06a      	beq.n	8000c84 <USART1_EXTI25_IRQHandler+0x100>
 8000bae:	79fb      	ldrb	r3, [r7, #7]
 8000bb0:	2b0a      	cmp	r3, #10
 8000bb2:	d124      	bne.n	8000bfe <USART1_EXTI25_IRQHandler+0x7a>
 8000bb4:	4b37      	ldr	r3, [pc, #220]	@ (8000c94 <USART1_EXTI25_IRQHandler+0x110>)
 8000bb6:	781b      	ldrb	r3, [r3, #0]
 8000bb8:	461a      	mov	r2, r3
 8000bba:	4b37      	ldr	r3, [pc, #220]	@ (8000c98 <USART1_EXTI25_IRQHandler+0x114>)
 8000bbc:	681b      	ldr	r3, [r3, #0]
 8000bbe:	4937      	ldr	r1, [pc, #220]	@ (8000c9c <USART1_EXTI25_IRQHandler+0x118>)
 8000bc0:	0192      	lsls	r2, r2, #6
 8000bc2:	440a      	add	r2, r1
 8000bc4:	4413      	add	r3, r2
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	701a      	strb	r2, [r3, #0]
 8000bca:	4b31      	ldr	r3, [pc, #196]	@ (8000c90 <USART1_EXTI25_IRQHandler+0x10c>)
 8000bcc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000bce:	2b00      	cmp	r3, #0
 8000bd0:	d00a      	beq.n	8000be8 <USART1_EXTI25_IRQHandler+0x64>
 8000bd2:	4b2f      	ldr	r3, [pc, #188]	@ (8000c90 <USART1_EXTI25_IRQHandler+0x10c>)
 8000bd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000bd6:	4a2f      	ldr	r2, [pc, #188]	@ (8000c94 <USART1_EXTI25_IRQHandler+0x110>)
 8000bd8:	7812      	ldrb	r2, [r2, #0]
 8000bda:	0192      	lsls	r2, r2, #6
 8000bdc:	492f      	ldr	r1, [pc, #188]	@ (8000c9c <USART1_EXTI25_IRQHandler+0x118>)
 8000bde:	440a      	add	r2, r1
 8000be0:	492d      	ldr	r1, [pc, #180]	@ (8000c98 <USART1_EXTI25_IRQHandler+0x114>)
 8000be2:	6809      	ldr	r1, [r1, #0]
 8000be4:	4610      	mov	r0, r2
 8000be6:	4798      	blx	r3
 8000be8:	4b2a      	ldr	r3, [pc, #168]	@ (8000c94 <USART1_EXTI25_IRQHandler+0x110>)
 8000bea:	781b      	ldrb	r3, [r3, #0]
 8000bec:	f083 0301 	eor.w	r3, r3, #1
 8000bf0:	b2da      	uxtb	r2, r3
 8000bf2:	4b28      	ldr	r3, [pc, #160]	@ (8000c94 <USART1_EXTI25_IRQHandler+0x110>)
 8000bf4:	701a      	strb	r2, [r3, #0]
 8000bf6:	4b28      	ldr	r3, [pc, #160]	@ (8000c98 <USART1_EXTI25_IRQHandler+0x114>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	601a      	str	r2, [r3, #0]
 8000bfc:	e011      	b.n	8000c22 <USART1_EXTI25_IRQHandler+0x9e>
 8000bfe:	4b26      	ldr	r3, [pc, #152]	@ (8000c98 <USART1_EXTI25_IRQHandler+0x114>)
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	2b3e      	cmp	r3, #62	@ 0x3e
 8000c04:	d80d      	bhi.n	8000c22 <USART1_EXTI25_IRQHandler+0x9e>
 8000c06:	4b23      	ldr	r3, [pc, #140]	@ (8000c94 <USART1_EXTI25_IRQHandler+0x110>)
 8000c08:	781b      	ldrb	r3, [r3, #0]
 8000c0a:	4618      	mov	r0, r3
 8000c0c:	4b22      	ldr	r3, [pc, #136]	@ (8000c98 <USART1_EXTI25_IRQHandler+0x114>)
 8000c0e:	681b      	ldr	r3, [r3, #0]
 8000c10:	1c5a      	adds	r2, r3, #1
 8000c12:	4921      	ldr	r1, [pc, #132]	@ (8000c98 <USART1_EXTI25_IRQHandler+0x114>)
 8000c14:	600a      	str	r2, [r1, #0]
 8000c16:	4921      	ldr	r1, [pc, #132]	@ (8000c9c <USART1_EXTI25_IRQHandler+0x118>)
 8000c18:	0182      	lsls	r2, r0, #6
 8000c1a:	440a      	add	r2, r1
 8000c1c:	4413      	add	r3, r2
 8000c1e:	79fa      	ldrb	r2, [r7, #7]
 8000c20:	701a      	strb	r2, [r3, #0]
 8000c22:	4b1a      	ldr	r3, [pc, #104]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d02b      	beq.n	8000c86 <USART1_EXTI25_IRQHandler+0x102>
 8000c2e:	4b17      	ldr	r3, [pc, #92]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000c30:	69db      	ldr	r3, [r3, #28]
 8000c32:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	d025      	beq.n	8000c86 <USART1_EXTI25_IRQHandler+0x102>
 8000c3a:	4b19      	ldr	r3, [pc, #100]	@ (8000ca0 <USART1_EXTI25_IRQHandler+0x11c>)
 8000c3c:	681b      	ldr	r3, [r3, #0]
 8000c3e:	2b00      	cmp	r3, #0
 8000c40:	d013      	beq.n	8000c6a <USART1_EXTI25_IRQHandler+0xe6>
 8000c42:	4b17      	ldr	r3, [pc, #92]	@ (8000ca0 <USART1_EXTI25_IRQHandler+0x11c>)
 8000c44:	681a      	ldr	r2, [r3, #0]
 8000c46:	4b17      	ldr	r3, [pc, #92]	@ (8000ca4 <USART1_EXTI25_IRQHandler+0x120>)
 8000c48:	681b      	ldr	r3, [r3, #0]
 8000c4a:	4413      	add	r3, r2
 8000c4c:	781b      	ldrb	r3, [r3, #0]
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d00b      	beq.n	8000c6a <USART1_EXTI25_IRQHandler+0xe6>
 8000c52:	4b13      	ldr	r3, [pc, #76]	@ (8000ca0 <USART1_EXTI25_IRQHandler+0x11c>)
 8000c54:	681a      	ldr	r2, [r3, #0]
 8000c56:	4b13      	ldr	r3, [pc, #76]	@ (8000ca4 <USART1_EXTI25_IRQHandler+0x120>)
 8000c58:	681b      	ldr	r3, [r3, #0]
 8000c5a:	1c59      	adds	r1, r3, #1
 8000c5c:	4811      	ldr	r0, [pc, #68]	@ (8000ca4 <USART1_EXTI25_IRQHandler+0x120>)
 8000c5e:	6001      	str	r1, [r0, #0]
 8000c60:	4413      	add	r3, r2
 8000c62:	781a      	ldrb	r2, [r3, #0]
 8000c64:	4b09      	ldr	r3, [pc, #36]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000c66:	851a      	strh	r2, [r3, #40]	@ 0x28
 8000c68:	e00d      	b.n	8000c86 <USART1_EXTI25_IRQHandler+0x102>
 8000c6a:	4b08      	ldr	r3, [pc, #32]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	4a07      	ldr	r2, [pc, #28]	@ (8000c8c <USART1_EXTI25_IRQHandler+0x108>)
 8000c70:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000c74:	6013      	str	r3, [r2, #0]
 8000c76:	4b0a      	ldr	r3, [pc, #40]	@ (8000ca0 <USART1_EXTI25_IRQHandler+0x11c>)
 8000c78:	2200      	movs	r2, #0
 8000c7a:	601a      	str	r2, [r3, #0]
 8000c7c:	4b09      	ldr	r3, [pc, #36]	@ (8000ca4 <USART1_EXTI25_IRQHandler+0x120>)
 8000c7e:	2200      	movs	r2, #0
 8000c80:	601a      	str	r2, [r3, #0]
 8000c82:	e000      	b.n	8000c86 <USART1_EXTI25_IRQHandler+0x102>
 8000c84:	bf00      	nop
 8000c86:	3708      	adds	r7, #8
 8000c88:	46bd      	mov	sp, r7
 8000c8a:	bd80      	pop	{r7, pc}
 8000c8c:	40013800 	.word	0x40013800
 8000c90:	20000000 	.word	0x20000000
 8000c94:	2000013c 	.word	0x2000013c
 8000c98:	20000140 	.word	0x20000140
 8000c9c:	200000bc 	.word	0x200000bc
 8000ca0:	20000144 	.word	0x20000144
 8000ca4:	20000148 	.word	0x20000148

08000ca8 <Reset_Handler>:
 8000ca8:	480d      	ldr	r0, [pc, #52]	@ (8000ce0 <LoopForever+0x2>)
 8000caa:	4685      	mov	sp, r0
 8000cac:	f3af 8000 	nop.w
 8000cb0:	480c      	ldr	r0, [pc, #48]	@ (8000ce4 <LoopForever+0x6>)
 8000cb2:	490d      	ldr	r1, [pc, #52]	@ (8000ce8 <LoopForever+0xa>)
 8000cb4:	4a0d      	ldr	r2, [pc, #52]	@ (8000cec <LoopForever+0xe>)
 8000cb6:	2300      	movs	r3, #0
 8000cb8:	e002      	b.n	8000cc0 <LoopCopyDataInit>

08000cba <CopyDataInit>:
 8000cba:	58d4      	ldr	r4, [r2, r3]
 8000cbc:	50c4      	str	r4, [r0, r3]
 8000cbe:	3304      	adds	r3, #4

08000cc0 <LoopCopyDataInit>:
 8000cc0:	18c4      	adds	r4, r0, r3
 8000cc2:	428c      	cmp	r4, r1
 8000cc4:	d3f9      	bcc.n	8000cba <CopyDataInit>
 8000cc6:	4a0a      	ldr	r2, [pc, #40]	@ (8000cf0 <LoopForever+0x12>)
 8000cc8:	4c0a      	ldr	r4, [pc, #40]	@ (8000cf4 <LoopForever+0x16>)
 8000cca:	2300      	movs	r3, #0
 8000ccc:	e001      	b.n	8000cd2 <LoopFillZerobss>

08000cce <FillZerobss>:
 8000cce:	6013      	str	r3, [r2, #0]
 8000cd0:	3204      	adds	r2, #4

08000cd2 <LoopFillZerobss>:
 8000cd2:	42a2      	cmp	r2, r4
 8000cd4:	d3fb      	bcc.n	8000cce <FillZerobss>
 8000cd6:	f000 fa33 	bl	8001140 <__libc_init_array>
 8000cda:	f7ff fc69 	bl	80005b0 <main>

08000cde <LoopForever>:
 8000cde:	e7fe      	b.n	8000cde <LoopForever>
 8000ce0:	2000a000 	.word	0x2000a000
 8000ce4:	20000000 	.word	0x20000000
 8000ce8:	20000088 	.word	0x20000088
 8000cec:	080027bc 	.word	0x080027bc
 8000cf0:	20000088 	.word	0x20000088
 8000cf4:	20000298 	.word	0x20000298

08000cf8 <ADC1_2_IRQHandler>:
 8000cf8:	e7fe      	b.n	8000cf8 <ADC1_2_IRQHandler>

08000cfa <atoi>:
 8000cfa:	220a      	movs	r2, #10
 8000cfc:	2100      	movs	r1, #0
 8000cfe:	f000 b991 	b.w	8001024 <strtol>
	...

08000d04 <siscanf>:
 8000d04:	b40e      	push	{r1, r2, r3}
 8000d06:	b530      	push	{r4, r5, lr}
 8000d08:	b09c      	sub	sp, #112	@ 0x70
 8000d0a:	ac1f      	add	r4, sp, #124	@ 0x7c
 8000d0c:	f44f 7201 	mov.w	r2, #516	@ 0x204
 8000d10:	f854 5b04 	ldr.w	r5, [r4], #4
 8000d14:	f8ad 2014 	strh.w	r2, [sp, #20]
 8000d18:	9002      	str	r0, [sp, #8]
 8000d1a:	9006      	str	r0, [sp, #24]
 8000d1c:	f7ff fa60 	bl	80001e0 <strlen>
 8000d20:	4b0b      	ldr	r3, [pc, #44]	@ (8000d50 <siscanf+0x4c>)
 8000d22:	9003      	str	r0, [sp, #12]
 8000d24:	9007      	str	r0, [sp, #28]
 8000d26:	930b      	str	r3, [sp, #44]	@ 0x2c
 8000d28:	480a      	ldr	r0, [pc, #40]	@ (8000d54 <siscanf+0x50>)
 8000d2a:	9401      	str	r4, [sp, #4]
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8000d30:	9314      	str	r3, [sp, #80]	@ 0x50
 8000d32:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000d36:	f8ad 3016 	strh.w	r3, [sp, #22]
 8000d3a:	462a      	mov	r2, r5
 8000d3c:	4623      	mov	r3, r4
 8000d3e:	a902      	add	r1, sp, #8
 8000d40:	6800      	ldr	r0, [r0, #0]
 8000d42:	f000 fac7 	bl	80012d4 <__ssvfiscanf_r>
 8000d46:	b01c      	add	sp, #112	@ 0x70
 8000d48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000d4c:	b003      	add	sp, #12
 8000d4e:	4770      	bx	lr
 8000d50:	08000d7b 	.word	0x08000d7b
 8000d54:	20000038 	.word	0x20000038

08000d58 <__sread>:
 8000d58:	b510      	push	{r4, lr}
 8000d5a:	460c      	mov	r4, r1
 8000d5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d60:	f000 f9c4 	bl	80010ec <_read_r>
 8000d64:	2800      	cmp	r0, #0
 8000d66:	bfab      	itete	ge
 8000d68:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000d6a:	89a3      	ldrhlt	r3, [r4, #12]
 8000d6c:	181b      	addge	r3, r3, r0
 8000d6e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000d72:	bfac      	ite	ge
 8000d74:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000d76:	81a3      	strhlt	r3, [r4, #12]
 8000d78:	bd10      	pop	{r4, pc}

08000d7a <__seofread>:
 8000d7a:	2000      	movs	r0, #0
 8000d7c:	4770      	bx	lr

08000d7e <__swrite>:
 8000d7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d82:	461f      	mov	r7, r3
 8000d84:	898b      	ldrh	r3, [r1, #12]
 8000d86:	05db      	lsls	r3, r3, #23
 8000d88:	4605      	mov	r5, r0
 8000d8a:	460c      	mov	r4, r1
 8000d8c:	4616      	mov	r6, r2
 8000d8e:	d505      	bpl.n	8000d9c <__swrite+0x1e>
 8000d90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d94:	2302      	movs	r3, #2
 8000d96:	2200      	movs	r2, #0
 8000d98:	f000 f996 	bl	80010c8 <_lseek_r>
 8000d9c:	89a3      	ldrh	r3, [r4, #12]
 8000d9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000da2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000da6:	81a3      	strh	r3, [r4, #12]
 8000da8:	4632      	mov	r2, r6
 8000daa:	463b      	mov	r3, r7
 8000dac:	4628      	mov	r0, r5
 8000dae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000db2:	f000 b9ad 	b.w	8001110 <_write_r>

08000db6 <__sseek>:
 8000db6:	b510      	push	{r4, lr}
 8000db8:	460c      	mov	r4, r1
 8000dba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dbe:	f000 f983 	bl	80010c8 <_lseek_r>
 8000dc2:	1c43      	adds	r3, r0, #1
 8000dc4:	89a3      	ldrh	r3, [r4, #12]
 8000dc6:	bf15      	itete	ne
 8000dc8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000dca:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000dce:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000dd2:	81a3      	strheq	r3, [r4, #12]
 8000dd4:	bf18      	it	ne
 8000dd6:	81a3      	strhne	r3, [r4, #12]
 8000dd8:	bd10      	pop	{r4, pc}

08000dda <__sclose>:
 8000dda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dde:	f000 b963 	b.w	80010a8 <_close_r>
	...

08000de4 <std>:
 8000de4:	2300      	movs	r3, #0
 8000de6:	b510      	push	{r4, lr}
 8000de8:	4604      	mov	r4, r0
 8000dea:	e9c0 3300 	strd	r3, r3, [r0]
 8000dee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000df2:	6083      	str	r3, [r0, #8]
 8000df4:	8181      	strh	r1, [r0, #12]
 8000df6:	6643      	str	r3, [r0, #100]	@ 0x64
 8000df8:	81c2      	strh	r2, [r0, #14]
 8000dfa:	6183      	str	r3, [r0, #24]
 8000dfc:	4619      	mov	r1, r3
 8000dfe:	2208      	movs	r2, #8
 8000e00:	305c      	adds	r0, #92	@ 0x5c
 8000e02:	f000 f949 	bl	8001098 <memset>
 8000e06:	4b0d      	ldr	r3, [pc, #52]	@ (8000e3c <std+0x58>)
 8000e08:	6263      	str	r3, [r4, #36]	@ 0x24
 8000e0a:	4b0d      	ldr	r3, [pc, #52]	@ (8000e40 <std+0x5c>)
 8000e0c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000e0e:	4b0d      	ldr	r3, [pc, #52]	@ (8000e44 <std+0x60>)
 8000e10:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000e12:	4b0d      	ldr	r3, [pc, #52]	@ (8000e48 <std+0x64>)
 8000e14:	6323      	str	r3, [r4, #48]	@ 0x30
 8000e16:	4b0d      	ldr	r3, [pc, #52]	@ (8000e4c <std+0x68>)
 8000e18:	6224      	str	r4, [r4, #32]
 8000e1a:	429c      	cmp	r4, r3
 8000e1c:	d006      	beq.n	8000e2c <std+0x48>
 8000e1e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000e22:	4294      	cmp	r4, r2
 8000e24:	d002      	beq.n	8000e2c <std+0x48>
 8000e26:	33d0      	adds	r3, #208	@ 0xd0
 8000e28:	429c      	cmp	r4, r3
 8000e2a:	d105      	bne.n	8000e38 <std+0x54>
 8000e2c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000e30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e34:	f000 b9a8 	b.w	8001188 <__retarget_lock_init_recursive>
 8000e38:	bd10      	pop	{r4, pc}
 8000e3a:	bf00      	nop
 8000e3c:	08000d59 	.word	0x08000d59
 8000e40:	08000d7f 	.word	0x08000d7f
 8000e44:	08000db7 	.word	0x08000db7
 8000e48:	08000ddb 	.word	0x08000ddb
 8000e4c:	2000014c 	.word	0x2000014c

08000e50 <stdio_exit_handler>:
 8000e50:	4a02      	ldr	r2, [pc, #8]	@ (8000e5c <stdio_exit_handler+0xc>)
 8000e52:	4903      	ldr	r1, [pc, #12]	@ (8000e60 <stdio_exit_handler+0x10>)
 8000e54:	4803      	ldr	r0, [pc, #12]	@ (8000e64 <stdio_exit_handler+0x14>)
 8000e56:	f000 b8ef 	b.w	8001038 <_fwalk_sglue>
 8000e5a:	bf00      	nop
 8000e5c:	2000002c 	.word	0x2000002c
 8000e60:	080020b9 	.word	0x080020b9
 8000e64:	2000003c 	.word	0x2000003c

08000e68 <cleanup_stdio>:
 8000e68:	6841      	ldr	r1, [r0, #4]
 8000e6a:	4b0c      	ldr	r3, [pc, #48]	@ (8000e9c <cleanup_stdio+0x34>)
 8000e6c:	4299      	cmp	r1, r3
 8000e6e:	b510      	push	{r4, lr}
 8000e70:	4604      	mov	r4, r0
 8000e72:	d001      	beq.n	8000e78 <cleanup_stdio+0x10>
 8000e74:	f001 f920 	bl	80020b8 <_fflush_r>
 8000e78:	68a1      	ldr	r1, [r4, #8]
 8000e7a:	4b09      	ldr	r3, [pc, #36]	@ (8000ea0 <cleanup_stdio+0x38>)
 8000e7c:	4299      	cmp	r1, r3
 8000e7e:	d002      	beq.n	8000e86 <cleanup_stdio+0x1e>
 8000e80:	4620      	mov	r0, r4
 8000e82:	f001 f919 	bl	80020b8 <_fflush_r>
 8000e86:	68e1      	ldr	r1, [r4, #12]
 8000e88:	4b06      	ldr	r3, [pc, #24]	@ (8000ea4 <cleanup_stdio+0x3c>)
 8000e8a:	4299      	cmp	r1, r3
 8000e8c:	d004      	beq.n	8000e98 <cleanup_stdio+0x30>
 8000e8e:	4620      	mov	r0, r4
 8000e90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e94:	f001 b910 	b.w	80020b8 <_fflush_r>
 8000e98:	bd10      	pop	{r4, pc}
 8000e9a:	bf00      	nop
 8000e9c:	2000014c 	.word	0x2000014c
 8000ea0:	200001b4 	.word	0x200001b4
 8000ea4:	2000021c 	.word	0x2000021c

08000ea8 <global_stdio_init.part.0>:
 8000ea8:	b510      	push	{r4, lr}
 8000eaa:	4b0b      	ldr	r3, [pc, #44]	@ (8000ed8 <global_stdio_init.part.0+0x30>)
 8000eac:	4c0b      	ldr	r4, [pc, #44]	@ (8000edc <global_stdio_init.part.0+0x34>)
 8000eae:	4a0c      	ldr	r2, [pc, #48]	@ (8000ee0 <global_stdio_init.part.0+0x38>)
 8000eb0:	601a      	str	r2, [r3, #0]
 8000eb2:	4620      	mov	r0, r4
 8000eb4:	2200      	movs	r2, #0
 8000eb6:	2104      	movs	r1, #4
 8000eb8:	f7ff ff94 	bl	8000de4 <std>
 8000ebc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000ec0:	2201      	movs	r2, #1
 8000ec2:	2109      	movs	r1, #9
 8000ec4:	f7ff ff8e 	bl	8000de4 <std>
 8000ec8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000ecc:	2202      	movs	r2, #2
 8000ece:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ed2:	2112      	movs	r1, #18
 8000ed4:	f7ff bf86 	b.w	8000de4 <std>
 8000ed8:	20000284 	.word	0x20000284
 8000edc:	2000014c 	.word	0x2000014c
 8000ee0:	08000e51 	.word	0x08000e51

08000ee4 <__sfp_lock_acquire>:
 8000ee4:	4801      	ldr	r0, [pc, #4]	@ (8000eec <__sfp_lock_acquire+0x8>)
 8000ee6:	f000 b950 	b.w	800118a <__retarget_lock_acquire_recursive>
 8000eea:	bf00      	nop
 8000eec:	2000028d 	.word	0x2000028d

08000ef0 <__sfp_lock_release>:
 8000ef0:	4801      	ldr	r0, [pc, #4]	@ (8000ef8 <__sfp_lock_release+0x8>)
 8000ef2:	f000 b94b 	b.w	800118c <__retarget_lock_release_recursive>
 8000ef6:	bf00      	nop
 8000ef8:	2000028d 	.word	0x2000028d

08000efc <__sinit>:
 8000efc:	b510      	push	{r4, lr}
 8000efe:	4604      	mov	r4, r0
 8000f00:	f7ff fff0 	bl	8000ee4 <__sfp_lock_acquire>
 8000f04:	6a23      	ldr	r3, [r4, #32]
 8000f06:	b11b      	cbz	r3, 8000f10 <__sinit+0x14>
 8000f08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000f0c:	f7ff bff0 	b.w	8000ef0 <__sfp_lock_release>
 8000f10:	4b04      	ldr	r3, [pc, #16]	@ (8000f24 <__sinit+0x28>)
 8000f12:	6223      	str	r3, [r4, #32]
 8000f14:	4b04      	ldr	r3, [pc, #16]	@ (8000f28 <__sinit+0x2c>)
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	2b00      	cmp	r3, #0
 8000f1a:	d1f5      	bne.n	8000f08 <__sinit+0xc>
 8000f1c:	f7ff ffc4 	bl	8000ea8 <global_stdio_init.part.0>
 8000f20:	e7f2      	b.n	8000f08 <__sinit+0xc>
 8000f22:	bf00      	nop
 8000f24:	08000e69 	.word	0x08000e69
 8000f28:	20000284 	.word	0x20000284

08000f2c <_strtol_l.constprop.0>:
 8000f2c:	2b24      	cmp	r3, #36	@ 0x24
 8000f2e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f32:	4686      	mov	lr, r0
 8000f34:	4690      	mov	r8, r2
 8000f36:	d801      	bhi.n	8000f3c <_strtol_l.constprop.0+0x10>
 8000f38:	2b01      	cmp	r3, #1
 8000f3a:	d106      	bne.n	8000f4a <_strtol_l.constprop.0+0x1e>
 8000f3c:	f000 f8fa 	bl	8001134 <__errno>
 8000f40:	2316      	movs	r3, #22
 8000f42:	6003      	str	r3, [r0, #0]
 8000f44:	2000      	movs	r0, #0
 8000f46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f4a:	4834      	ldr	r0, [pc, #208]	@ (800101c <_strtol_l.constprop.0+0xf0>)
 8000f4c:	460d      	mov	r5, r1
 8000f4e:	462a      	mov	r2, r5
 8000f50:	f815 4b01 	ldrb.w	r4, [r5], #1
 8000f54:	5d06      	ldrb	r6, [r0, r4]
 8000f56:	f016 0608 	ands.w	r6, r6, #8
 8000f5a:	d1f8      	bne.n	8000f4e <_strtol_l.constprop.0+0x22>
 8000f5c:	2c2d      	cmp	r4, #45	@ 0x2d
 8000f5e:	d12d      	bne.n	8000fbc <_strtol_l.constprop.0+0x90>
 8000f60:	782c      	ldrb	r4, [r5, #0]
 8000f62:	2601      	movs	r6, #1
 8000f64:	1c95      	adds	r5, r2, #2
 8000f66:	f033 0210 	bics.w	r2, r3, #16
 8000f6a:	d109      	bne.n	8000f80 <_strtol_l.constprop.0+0x54>
 8000f6c:	2c30      	cmp	r4, #48	@ 0x30
 8000f6e:	d12a      	bne.n	8000fc6 <_strtol_l.constprop.0+0x9a>
 8000f70:	782a      	ldrb	r2, [r5, #0]
 8000f72:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8000f76:	2a58      	cmp	r2, #88	@ 0x58
 8000f78:	d125      	bne.n	8000fc6 <_strtol_l.constprop.0+0x9a>
 8000f7a:	786c      	ldrb	r4, [r5, #1]
 8000f7c:	2310      	movs	r3, #16
 8000f7e:	3502      	adds	r5, #2
 8000f80:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8000f84:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8000f88:	2200      	movs	r2, #0
 8000f8a:	fbbc f9f3 	udiv	r9, ip, r3
 8000f8e:	4610      	mov	r0, r2
 8000f90:	fb03 ca19 	mls	sl, r3, r9, ip
 8000f94:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8000f98:	2f09      	cmp	r7, #9
 8000f9a:	d81b      	bhi.n	8000fd4 <_strtol_l.constprop.0+0xa8>
 8000f9c:	463c      	mov	r4, r7
 8000f9e:	42a3      	cmp	r3, r4
 8000fa0:	dd27      	ble.n	8000ff2 <_strtol_l.constprop.0+0xc6>
 8000fa2:	1c57      	adds	r7, r2, #1
 8000fa4:	d007      	beq.n	8000fb6 <_strtol_l.constprop.0+0x8a>
 8000fa6:	4581      	cmp	r9, r0
 8000fa8:	d320      	bcc.n	8000fec <_strtol_l.constprop.0+0xc0>
 8000faa:	d101      	bne.n	8000fb0 <_strtol_l.constprop.0+0x84>
 8000fac:	45a2      	cmp	sl, r4
 8000fae:	db1d      	blt.n	8000fec <_strtol_l.constprop.0+0xc0>
 8000fb0:	fb00 4003 	mla	r0, r0, r3, r4
 8000fb4:	2201      	movs	r2, #1
 8000fb6:	f815 4b01 	ldrb.w	r4, [r5], #1
 8000fba:	e7eb      	b.n	8000f94 <_strtol_l.constprop.0+0x68>
 8000fbc:	2c2b      	cmp	r4, #43	@ 0x2b
 8000fbe:	bf04      	itt	eq
 8000fc0:	782c      	ldrbeq	r4, [r5, #0]
 8000fc2:	1c95      	addeq	r5, r2, #2
 8000fc4:	e7cf      	b.n	8000f66 <_strtol_l.constprop.0+0x3a>
 8000fc6:	2b00      	cmp	r3, #0
 8000fc8:	d1da      	bne.n	8000f80 <_strtol_l.constprop.0+0x54>
 8000fca:	2c30      	cmp	r4, #48	@ 0x30
 8000fcc:	bf0c      	ite	eq
 8000fce:	2308      	moveq	r3, #8
 8000fd0:	230a      	movne	r3, #10
 8000fd2:	e7d5      	b.n	8000f80 <_strtol_l.constprop.0+0x54>
 8000fd4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8000fd8:	2f19      	cmp	r7, #25
 8000fda:	d801      	bhi.n	8000fe0 <_strtol_l.constprop.0+0xb4>
 8000fdc:	3c37      	subs	r4, #55	@ 0x37
 8000fde:	e7de      	b.n	8000f9e <_strtol_l.constprop.0+0x72>
 8000fe0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8000fe4:	2f19      	cmp	r7, #25
 8000fe6:	d804      	bhi.n	8000ff2 <_strtol_l.constprop.0+0xc6>
 8000fe8:	3c57      	subs	r4, #87	@ 0x57
 8000fea:	e7d8      	b.n	8000f9e <_strtol_l.constprop.0+0x72>
 8000fec:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000ff0:	e7e1      	b.n	8000fb6 <_strtol_l.constprop.0+0x8a>
 8000ff2:	1c53      	adds	r3, r2, #1
 8000ff4:	d108      	bne.n	8001008 <_strtol_l.constprop.0+0xdc>
 8000ff6:	2322      	movs	r3, #34	@ 0x22
 8000ff8:	f8ce 3000 	str.w	r3, [lr]
 8000ffc:	4660      	mov	r0, ip
 8000ffe:	f1b8 0f00 	cmp.w	r8, #0
 8001002:	d0a0      	beq.n	8000f46 <_strtol_l.constprop.0+0x1a>
 8001004:	1e69      	subs	r1, r5, #1
 8001006:	e006      	b.n	8001016 <_strtol_l.constprop.0+0xea>
 8001008:	b106      	cbz	r6, 800100c <_strtol_l.constprop.0+0xe0>
 800100a:	4240      	negs	r0, r0
 800100c:	f1b8 0f00 	cmp.w	r8, #0
 8001010:	d099      	beq.n	8000f46 <_strtol_l.constprop.0+0x1a>
 8001012:	2a00      	cmp	r2, #0
 8001014:	d1f6      	bne.n	8001004 <_strtol_l.constprop.0+0xd8>
 8001016:	f8c8 1000 	str.w	r1, [r8]
 800101a:	e794      	b.n	8000f46 <_strtol_l.constprop.0+0x1a>
 800101c:	0800265d 	.word	0x0800265d

08001020 <_strtol_r>:
 8001020:	f7ff bf84 	b.w	8000f2c <_strtol_l.constprop.0>

08001024 <strtol>:
 8001024:	4613      	mov	r3, r2
 8001026:	460a      	mov	r2, r1
 8001028:	4601      	mov	r1, r0
 800102a:	4802      	ldr	r0, [pc, #8]	@ (8001034 <strtol+0x10>)
 800102c:	6800      	ldr	r0, [r0, #0]
 800102e:	f7ff bf7d 	b.w	8000f2c <_strtol_l.constprop.0>
 8001032:	bf00      	nop
 8001034:	20000038 	.word	0x20000038

08001038 <_fwalk_sglue>:
 8001038:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800103c:	4607      	mov	r7, r0
 800103e:	4688      	mov	r8, r1
 8001040:	4614      	mov	r4, r2
 8001042:	2600      	movs	r6, #0
 8001044:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001048:	f1b9 0901 	subs.w	r9, r9, #1
 800104c:	d505      	bpl.n	800105a <_fwalk_sglue+0x22>
 800104e:	6824      	ldr	r4, [r4, #0]
 8001050:	2c00      	cmp	r4, #0
 8001052:	d1f7      	bne.n	8001044 <_fwalk_sglue+0xc>
 8001054:	4630      	mov	r0, r6
 8001056:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800105a:	89ab      	ldrh	r3, [r5, #12]
 800105c:	2b01      	cmp	r3, #1
 800105e:	d907      	bls.n	8001070 <_fwalk_sglue+0x38>
 8001060:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001064:	3301      	adds	r3, #1
 8001066:	d003      	beq.n	8001070 <_fwalk_sglue+0x38>
 8001068:	4629      	mov	r1, r5
 800106a:	4638      	mov	r0, r7
 800106c:	47c0      	blx	r8
 800106e:	4306      	orrs	r6, r0
 8001070:	3568      	adds	r5, #104	@ 0x68
 8001072:	e7e9      	b.n	8001048 <_fwalk_sglue+0x10>

08001074 <iprintf>:
 8001074:	b40f      	push	{r0, r1, r2, r3}
 8001076:	b507      	push	{r0, r1, r2, lr}
 8001078:	4906      	ldr	r1, [pc, #24]	@ (8001094 <iprintf+0x20>)
 800107a:	ab04      	add	r3, sp, #16
 800107c:	6808      	ldr	r0, [r1, #0]
 800107e:	f853 2b04 	ldr.w	r2, [r3], #4
 8001082:	6881      	ldr	r1, [r0, #8]
 8001084:	9301      	str	r3, [sp, #4]
 8001086:	f000 fac3 	bl	8001610 <_vfiprintf_r>
 800108a:	b003      	add	sp, #12
 800108c:	f85d eb04 	ldr.w	lr, [sp], #4
 8001090:	b004      	add	sp, #16
 8001092:	4770      	bx	lr
 8001094:	20000038 	.word	0x20000038

08001098 <memset>:
 8001098:	4402      	add	r2, r0
 800109a:	4603      	mov	r3, r0
 800109c:	4293      	cmp	r3, r2
 800109e:	d100      	bne.n	80010a2 <memset+0xa>
 80010a0:	4770      	bx	lr
 80010a2:	f803 1b01 	strb.w	r1, [r3], #1
 80010a6:	e7f9      	b.n	800109c <memset+0x4>

080010a8 <_close_r>:
 80010a8:	b538      	push	{r3, r4, r5, lr}
 80010aa:	4d06      	ldr	r5, [pc, #24]	@ (80010c4 <_close_r+0x1c>)
 80010ac:	2300      	movs	r3, #0
 80010ae:	4604      	mov	r4, r0
 80010b0:	4608      	mov	r0, r1
 80010b2:	602b      	str	r3, [r5, #0]
 80010b4:	f7ff fae1 	bl	800067a <_close>
 80010b8:	1c43      	adds	r3, r0, #1
 80010ba:	d102      	bne.n	80010c2 <_close_r+0x1a>
 80010bc:	682b      	ldr	r3, [r5, #0]
 80010be:	b103      	cbz	r3, 80010c2 <_close_r+0x1a>
 80010c0:	6023      	str	r3, [r4, #0]
 80010c2:	bd38      	pop	{r3, r4, r5, pc}
 80010c4:	20000288 	.word	0x20000288

080010c8 <_lseek_r>:
 80010c8:	b538      	push	{r3, r4, r5, lr}
 80010ca:	4d07      	ldr	r5, [pc, #28]	@ (80010e8 <_lseek_r+0x20>)
 80010cc:	4604      	mov	r4, r0
 80010ce:	4608      	mov	r0, r1
 80010d0:	4611      	mov	r1, r2
 80010d2:	2200      	movs	r2, #0
 80010d4:	602a      	str	r2, [r5, #0]
 80010d6:	461a      	mov	r2, r3
 80010d8:	f7ff faf6 	bl	80006c8 <_lseek>
 80010dc:	1c43      	adds	r3, r0, #1
 80010de:	d102      	bne.n	80010e6 <_lseek_r+0x1e>
 80010e0:	682b      	ldr	r3, [r5, #0]
 80010e2:	b103      	cbz	r3, 80010e6 <_lseek_r+0x1e>
 80010e4:	6023      	str	r3, [r4, #0]
 80010e6:	bd38      	pop	{r3, r4, r5, pc}
 80010e8:	20000288 	.word	0x20000288

080010ec <_read_r>:
 80010ec:	b538      	push	{r3, r4, r5, lr}
 80010ee:	4d07      	ldr	r5, [pc, #28]	@ (800110c <_read_r+0x20>)
 80010f0:	4604      	mov	r4, r0
 80010f2:	4608      	mov	r0, r1
 80010f4:	4611      	mov	r1, r2
 80010f6:	2200      	movs	r2, #0
 80010f8:	602a      	str	r2, [r5, #0]
 80010fa:	461a      	mov	r2, r3
 80010fc:	f7ff fa84 	bl	8000608 <_read>
 8001100:	1c43      	adds	r3, r0, #1
 8001102:	d102      	bne.n	800110a <_read_r+0x1e>
 8001104:	682b      	ldr	r3, [r5, #0]
 8001106:	b103      	cbz	r3, 800110a <_read_r+0x1e>
 8001108:	6023      	str	r3, [r4, #0]
 800110a:	bd38      	pop	{r3, r4, r5, pc}
 800110c:	20000288 	.word	0x20000288

08001110 <_write_r>:
 8001110:	b538      	push	{r3, r4, r5, lr}
 8001112:	4d07      	ldr	r5, [pc, #28]	@ (8001130 <_write_r+0x20>)
 8001114:	4604      	mov	r4, r0
 8001116:	4608      	mov	r0, r1
 8001118:	4611      	mov	r1, r2
 800111a:	2200      	movs	r2, #0
 800111c:	602a      	str	r2, [r5, #0]
 800111e:	461a      	mov	r2, r3
 8001120:	f7ff fa8f 	bl	8000642 <_write>
 8001124:	1c43      	adds	r3, r0, #1
 8001126:	d102      	bne.n	800112e <_write_r+0x1e>
 8001128:	682b      	ldr	r3, [r5, #0]
 800112a:	b103      	cbz	r3, 800112e <_write_r+0x1e>
 800112c:	6023      	str	r3, [r4, #0]
 800112e:	bd38      	pop	{r3, r4, r5, pc}
 8001130:	20000288 	.word	0x20000288

08001134 <__errno>:
 8001134:	4b01      	ldr	r3, [pc, #4]	@ (800113c <__errno+0x8>)
 8001136:	6818      	ldr	r0, [r3, #0]
 8001138:	4770      	bx	lr
 800113a:	bf00      	nop
 800113c:	20000038 	.word	0x20000038

08001140 <__libc_init_array>:
 8001140:	b570      	push	{r4, r5, r6, lr}
 8001142:	4d0d      	ldr	r5, [pc, #52]	@ (8001178 <__libc_init_array+0x38>)
 8001144:	4c0d      	ldr	r4, [pc, #52]	@ (800117c <__libc_init_array+0x3c>)
 8001146:	1b64      	subs	r4, r4, r5
 8001148:	10a4      	asrs	r4, r4, #2
 800114a:	2600      	movs	r6, #0
 800114c:	42a6      	cmp	r6, r4
 800114e:	d109      	bne.n	8001164 <__libc_init_array+0x24>
 8001150:	4d0b      	ldr	r5, [pc, #44]	@ (8001180 <__libc_init_array+0x40>)
 8001152:	4c0c      	ldr	r4, [pc, #48]	@ (8001184 <__libc_init_array+0x44>)
 8001154:	f001 f9fa 	bl	800254c <_init>
 8001158:	1b64      	subs	r4, r4, r5
 800115a:	10a4      	asrs	r4, r4, #2
 800115c:	2600      	movs	r6, #0
 800115e:	42a6      	cmp	r6, r4
 8001160:	d105      	bne.n	800116e <__libc_init_array+0x2e>
 8001162:	bd70      	pop	{r4, r5, r6, pc}
 8001164:	f855 3b04 	ldr.w	r3, [r5], #4
 8001168:	4798      	blx	r3
 800116a:	3601      	adds	r6, #1
 800116c:	e7ee      	b.n	800114c <__libc_init_array+0xc>
 800116e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001172:	4798      	blx	r3
 8001174:	3601      	adds	r6, #1
 8001176:	e7f2      	b.n	800115e <__libc_init_array+0x1e>
 8001178:	080027b4 	.word	0x080027b4
 800117c:	080027b4 	.word	0x080027b4
 8001180:	080027b4 	.word	0x080027b4
 8001184:	080027b8 	.word	0x080027b8

08001188 <__retarget_lock_init_recursive>:
 8001188:	4770      	bx	lr

0800118a <__retarget_lock_acquire_recursive>:
 800118a:	4770      	bx	lr

0800118c <__retarget_lock_release_recursive>:
 800118c:	4770      	bx	lr
	...

08001190 <_free_r>:
 8001190:	b538      	push	{r3, r4, r5, lr}
 8001192:	4605      	mov	r5, r0
 8001194:	2900      	cmp	r1, #0
 8001196:	d041      	beq.n	800121c <_free_r+0x8c>
 8001198:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800119c:	1f0c      	subs	r4, r1, #4
 800119e:	2b00      	cmp	r3, #0
 80011a0:	bfb8      	it	lt
 80011a2:	18e4      	addlt	r4, r4, r3
 80011a4:	f000 ffb0 	bl	8002108 <__malloc_lock>
 80011a8:	4a1d      	ldr	r2, [pc, #116]	@ (8001220 <_free_r+0x90>)
 80011aa:	6813      	ldr	r3, [r2, #0]
 80011ac:	b933      	cbnz	r3, 80011bc <_free_r+0x2c>
 80011ae:	6063      	str	r3, [r4, #4]
 80011b0:	6014      	str	r4, [r2, #0]
 80011b2:	4628      	mov	r0, r5
 80011b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011b8:	f000 bfac 	b.w	8002114 <__malloc_unlock>
 80011bc:	42a3      	cmp	r3, r4
 80011be:	d908      	bls.n	80011d2 <_free_r+0x42>
 80011c0:	6820      	ldr	r0, [r4, #0]
 80011c2:	1821      	adds	r1, r4, r0
 80011c4:	428b      	cmp	r3, r1
 80011c6:	bf01      	itttt	eq
 80011c8:	6819      	ldreq	r1, [r3, #0]
 80011ca:	685b      	ldreq	r3, [r3, #4]
 80011cc:	1809      	addeq	r1, r1, r0
 80011ce:	6021      	streq	r1, [r4, #0]
 80011d0:	e7ed      	b.n	80011ae <_free_r+0x1e>
 80011d2:	461a      	mov	r2, r3
 80011d4:	685b      	ldr	r3, [r3, #4]
 80011d6:	b10b      	cbz	r3, 80011dc <_free_r+0x4c>
 80011d8:	42a3      	cmp	r3, r4
 80011da:	d9fa      	bls.n	80011d2 <_free_r+0x42>
 80011dc:	6811      	ldr	r1, [r2, #0]
 80011de:	1850      	adds	r0, r2, r1
 80011e0:	42a0      	cmp	r0, r4
 80011e2:	d10b      	bne.n	80011fc <_free_r+0x6c>
 80011e4:	6820      	ldr	r0, [r4, #0]
 80011e6:	4401      	add	r1, r0
 80011e8:	1850      	adds	r0, r2, r1
 80011ea:	4283      	cmp	r3, r0
 80011ec:	6011      	str	r1, [r2, #0]
 80011ee:	d1e0      	bne.n	80011b2 <_free_r+0x22>
 80011f0:	6818      	ldr	r0, [r3, #0]
 80011f2:	685b      	ldr	r3, [r3, #4]
 80011f4:	6053      	str	r3, [r2, #4]
 80011f6:	4408      	add	r0, r1
 80011f8:	6010      	str	r0, [r2, #0]
 80011fa:	e7da      	b.n	80011b2 <_free_r+0x22>
 80011fc:	d902      	bls.n	8001204 <_free_r+0x74>
 80011fe:	230c      	movs	r3, #12
 8001200:	602b      	str	r3, [r5, #0]
 8001202:	e7d6      	b.n	80011b2 <_free_r+0x22>
 8001204:	6820      	ldr	r0, [r4, #0]
 8001206:	1821      	adds	r1, r4, r0
 8001208:	428b      	cmp	r3, r1
 800120a:	bf04      	itt	eq
 800120c:	6819      	ldreq	r1, [r3, #0]
 800120e:	685b      	ldreq	r3, [r3, #4]
 8001210:	6063      	str	r3, [r4, #4]
 8001212:	bf04      	itt	eq
 8001214:	1809      	addeq	r1, r1, r0
 8001216:	6021      	streq	r1, [r4, #0]
 8001218:	6054      	str	r4, [r2, #4]
 800121a:	e7ca      	b.n	80011b2 <_free_r+0x22>
 800121c:	bd38      	pop	{r3, r4, r5, pc}
 800121e:	bf00      	nop
 8001220:	20000294 	.word	0x20000294

08001224 <_sungetc_r>:
 8001224:	b538      	push	{r3, r4, r5, lr}
 8001226:	1c4b      	adds	r3, r1, #1
 8001228:	4614      	mov	r4, r2
 800122a:	d103      	bne.n	8001234 <_sungetc_r+0x10>
 800122c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8001230:	4628      	mov	r0, r5
 8001232:	bd38      	pop	{r3, r4, r5, pc}
 8001234:	8993      	ldrh	r3, [r2, #12]
 8001236:	f023 0320 	bic.w	r3, r3, #32
 800123a:	8193      	strh	r3, [r2, #12]
 800123c:	6853      	ldr	r3, [r2, #4]
 800123e:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8001240:	b2cd      	uxtb	r5, r1
 8001242:	b18a      	cbz	r2, 8001268 <_sungetc_r+0x44>
 8001244:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8001246:	429a      	cmp	r2, r3
 8001248:	dd08      	ble.n	800125c <_sungetc_r+0x38>
 800124a:	6823      	ldr	r3, [r4, #0]
 800124c:	1e5a      	subs	r2, r3, #1
 800124e:	6022      	str	r2, [r4, #0]
 8001250:	f803 5c01 	strb.w	r5, [r3, #-1]
 8001254:	6863      	ldr	r3, [r4, #4]
 8001256:	3301      	adds	r3, #1
 8001258:	6063      	str	r3, [r4, #4]
 800125a:	e7e9      	b.n	8001230 <_sungetc_r+0xc>
 800125c:	4621      	mov	r1, r4
 800125e:	f000 ff5f 	bl	8002120 <__submore>
 8001262:	2800      	cmp	r0, #0
 8001264:	d0f1      	beq.n	800124a <_sungetc_r+0x26>
 8001266:	e7e1      	b.n	800122c <_sungetc_r+0x8>
 8001268:	6921      	ldr	r1, [r4, #16]
 800126a:	6822      	ldr	r2, [r4, #0]
 800126c:	b141      	cbz	r1, 8001280 <_sungetc_r+0x5c>
 800126e:	4291      	cmp	r1, r2
 8001270:	d206      	bcs.n	8001280 <_sungetc_r+0x5c>
 8001272:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8001276:	42a9      	cmp	r1, r5
 8001278:	d102      	bne.n	8001280 <_sungetc_r+0x5c>
 800127a:	3a01      	subs	r2, #1
 800127c:	6022      	str	r2, [r4, #0]
 800127e:	e7ea      	b.n	8001256 <_sungetc_r+0x32>
 8001280:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 8001284:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001288:	6363      	str	r3, [r4, #52]	@ 0x34
 800128a:	2303      	movs	r3, #3
 800128c:	63a3      	str	r3, [r4, #56]	@ 0x38
 800128e:	4623      	mov	r3, r4
 8001290:	f803 5f46 	strb.w	r5, [r3, #70]!
 8001294:	6023      	str	r3, [r4, #0]
 8001296:	2301      	movs	r3, #1
 8001298:	e7de      	b.n	8001258 <_sungetc_r+0x34>

0800129a <__ssrefill_r>:
 800129a:	b510      	push	{r4, lr}
 800129c:	460c      	mov	r4, r1
 800129e:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 80012a0:	b169      	cbz	r1, 80012be <__ssrefill_r+0x24>
 80012a2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80012a6:	4299      	cmp	r1, r3
 80012a8:	d001      	beq.n	80012ae <__ssrefill_r+0x14>
 80012aa:	f7ff ff71 	bl	8001190 <_free_r>
 80012ae:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012b0:	6063      	str	r3, [r4, #4]
 80012b2:	2000      	movs	r0, #0
 80012b4:	6360      	str	r0, [r4, #52]	@ 0x34
 80012b6:	b113      	cbz	r3, 80012be <__ssrefill_r+0x24>
 80012b8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80012ba:	6023      	str	r3, [r4, #0]
 80012bc:	bd10      	pop	{r4, pc}
 80012be:	6923      	ldr	r3, [r4, #16]
 80012c0:	6023      	str	r3, [r4, #0]
 80012c2:	2300      	movs	r3, #0
 80012c4:	6063      	str	r3, [r4, #4]
 80012c6:	89a3      	ldrh	r3, [r4, #12]
 80012c8:	f043 0320 	orr.w	r3, r3, #32
 80012cc:	81a3      	strh	r3, [r4, #12]
 80012ce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80012d2:	e7f3      	b.n	80012bc <__ssrefill_r+0x22>

080012d4 <__ssvfiscanf_r>:
 80012d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80012d8:	460c      	mov	r4, r1
 80012da:	f5ad 7d22 	sub.w	sp, sp, #648	@ 0x288
 80012de:	2100      	movs	r1, #0
 80012e0:	e9cd 1144 	strd	r1, r1, [sp, #272]	@ 0x110
 80012e4:	49a5      	ldr	r1, [pc, #660]	@ (800157c <__ssvfiscanf_r+0x2a8>)
 80012e6:	91a0      	str	r1, [sp, #640]	@ 0x280
 80012e8:	f10d 0804 	add.w	r8, sp, #4
 80012ec:	49a4      	ldr	r1, [pc, #656]	@ (8001580 <__ssvfiscanf_r+0x2ac>)
 80012ee:	4fa5      	ldr	r7, [pc, #660]	@ (8001584 <__ssvfiscanf_r+0x2b0>)
 80012f0:	f8cd 8118 	str.w	r8, [sp, #280]	@ 0x118
 80012f4:	4606      	mov	r6, r0
 80012f6:	91a1      	str	r1, [sp, #644]	@ 0x284
 80012f8:	9300      	str	r3, [sp, #0]
 80012fa:	7813      	ldrb	r3, [r2, #0]
 80012fc:	2b00      	cmp	r3, #0
 80012fe:	f000 8158 	beq.w	80015b2 <__ssvfiscanf_r+0x2de>
 8001302:	5cf9      	ldrb	r1, [r7, r3]
 8001304:	f011 0108 	ands.w	r1, r1, #8
 8001308:	f102 0501 	add.w	r5, r2, #1
 800130c:	d019      	beq.n	8001342 <__ssvfiscanf_r+0x6e>
 800130e:	6863      	ldr	r3, [r4, #4]
 8001310:	2b00      	cmp	r3, #0
 8001312:	dd0f      	ble.n	8001334 <__ssvfiscanf_r+0x60>
 8001314:	6823      	ldr	r3, [r4, #0]
 8001316:	781a      	ldrb	r2, [r3, #0]
 8001318:	5cba      	ldrb	r2, [r7, r2]
 800131a:	0712      	lsls	r2, r2, #28
 800131c:	d401      	bmi.n	8001322 <__ssvfiscanf_r+0x4e>
 800131e:	462a      	mov	r2, r5
 8001320:	e7eb      	b.n	80012fa <__ssvfiscanf_r+0x26>
 8001322:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8001324:	3201      	adds	r2, #1
 8001326:	9245      	str	r2, [sp, #276]	@ 0x114
 8001328:	6862      	ldr	r2, [r4, #4]
 800132a:	3301      	adds	r3, #1
 800132c:	3a01      	subs	r2, #1
 800132e:	6062      	str	r2, [r4, #4]
 8001330:	6023      	str	r3, [r4, #0]
 8001332:	e7ec      	b.n	800130e <__ssvfiscanf_r+0x3a>
 8001334:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8001336:	4621      	mov	r1, r4
 8001338:	4630      	mov	r0, r6
 800133a:	4798      	blx	r3
 800133c:	2800      	cmp	r0, #0
 800133e:	d0e9      	beq.n	8001314 <__ssvfiscanf_r+0x40>
 8001340:	e7ed      	b.n	800131e <__ssvfiscanf_r+0x4a>
 8001342:	2b25      	cmp	r3, #37	@ 0x25
 8001344:	d012      	beq.n	800136c <__ssvfiscanf_r+0x98>
 8001346:	4699      	mov	r9, r3
 8001348:	6863      	ldr	r3, [r4, #4]
 800134a:	2b00      	cmp	r3, #0
 800134c:	f340 8093 	ble.w	8001476 <__ssvfiscanf_r+0x1a2>
 8001350:	6822      	ldr	r2, [r4, #0]
 8001352:	7813      	ldrb	r3, [r2, #0]
 8001354:	454b      	cmp	r3, r9
 8001356:	f040 812c 	bne.w	80015b2 <__ssvfiscanf_r+0x2de>
 800135a:	6863      	ldr	r3, [r4, #4]
 800135c:	3b01      	subs	r3, #1
 800135e:	6063      	str	r3, [r4, #4]
 8001360:	9b45      	ldr	r3, [sp, #276]	@ 0x114
 8001362:	3201      	adds	r2, #1
 8001364:	3301      	adds	r3, #1
 8001366:	6022      	str	r2, [r4, #0]
 8001368:	9345      	str	r3, [sp, #276]	@ 0x114
 800136a:	e7d8      	b.n	800131e <__ssvfiscanf_r+0x4a>
 800136c:	9141      	str	r1, [sp, #260]	@ 0x104
 800136e:	9143      	str	r1, [sp, #268]	@ 0x10c
 8001370:	7853      	ldrb	r3, [r2, #1]
 8001372:	2b2a      	cmp	r3, #42	@ 0x2a
 8001374:	bf02      	ittt	eq
 8001376:	2310      	moveq	r3, #16
 8001378:	1c95      	addeq	r5, r2, #2
 800137a:	9341      	streq	r3, [sp, #260]	@ 0x104
 800137c:	220a      	movs	r2, #10
 800137e:	46a9      	mov	r9, r5
 8001380:	f819 1b01 	ldrb.w	r1, [r9], #1
 8001384:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 8001388:	2b09      	cmp	r3, #9
 800138a:	d91e      	bls.n	80013ca <__ssvfiscanf_r+0xf6>
 800138c:	f8df a1f8 	ldr.w	sl, [pc, #504]	@ 8001588 <__ssvfiscanf_r+0x2b4>
 8001390:	2203      	movs	r2, #3
 8001392:	4650      	mov	r0, sl
 8001394:	f7fe ff3c 	bl	8000210 <memchr>
 8001398:	b138      	cbz	r0, 80013aa <__ssvfiscanf_r+0xd6>
 800139a:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 800139c:	eba0 000a 	sub.w	r0, r0, sl
 80013a0:	2301      	movs	r3, #1
 80013a2:	4083      	lsls	r3, r0
 80013a4:	4313      	orrs	r3, r2
 80013a6:	9341      	str	r3, [sp, #260]	@ 0x104
 80013a8:	464d      	mov	r5, r9
 80013aa:	f815 3b01 	ldrb.w	r3, [r5], #1
 80013ae:	2b78      	cmp	r3, #120	@ 0x78
 80013b0:	d806      	bhi.n	80013c0 <__ssvfiscanf_r+0xec>
 80013b2:	2b57      	cmp	r3, #87	@ 0x57
 80013b4:	d810      	bhi.n	80013d8 <__ssvfiscanf_r+0x104>
 80013b6:	2b25      	cmp	r3, #37	@ 0x25
 80013b8:	d0c5      	beq.n	8001346 <__ssvfiscanf_r+0x72>
 80013ba:	d857      	bhi.n	800146c <__ssvfiscanf_r+0x198>
 80013bc:	2b00      	cmp	r3, #0
 80013be:	d065      	beq.n	800148c <__ssvfiscanf_r+0x1b8>
 80013c0:	2303      	movs	r3, #3
 80013c2:	9347      	str	r3, [sp, #284]	@ 0x11c
 80013c4:	230a      	movs	r3, #10
 80013c6:	9342      	str	r3, [sp, #264]	@ 0x108
 80013c8:	e078      	b.n	80014bc <__ssvfiscanf_r+0x1e8>
 80013ca:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 80013cc:	fb02 1103 	mla	r1, r2, r3, r1
 80013d0:	3930      	subs	r1, #48	@ 0x30
 80013d2:	9143      	str	r1, [sp, #268]	@ 0x10c
 80013d4:	464d      	mov	r5, r9
 80013d6:	e7d2      	b.n	800137e <__ssvfiscanf_r+0xaa>
 80013d8:	f1a3 0258 	sub.w	r2, r3, #88	@ 0x58
 80013dc:	2a20      	cmp	r2, #32
 80013de:	d8ef      	bhi.n	80013c0 <__ssvfiscanf_r+0xec>
 80013e0:	a101      	add	r1, pc, #4	@ (adr r1, 80013e8 <__ssvfiscanf_r+0x114>)
 80013e2:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80013e6:	bf00      	nop
 80013e8:	0800149b 	.word	0x0800149b
 80013ec:	080013c1 	.word	0x080013c1
 80013f0:	080013c1 	.word	0x080013c1
 80013f4:	080014f5 	.word	0x080014f5
 80013f8:	080013c1 	.word	0x080013c1
 80013fc:	080013c1 	.word	0x080013c1
 8001400:	080013c1 	.word	0x080013c1
 8001404:	080013c1 	.word	0x080013c1
 8001408:	080013c1 	.word	0x080013c1
 800140c:	080013c1 	.word	0x080013c1
 8001410:	080013c1 	.word	0x080013c1
 8001414:	0800150b 	.word	0x0800150b
 8001418:	080014f1 	.word	0x080014f1
 800141c:	08001473 	.word	0x08001473
 8001420:	08001473 	.word	0x08001473
 8001424:	08001473 	.word	0x08001473
 8001428:	080013c1 	.word	0x080013c1
 800142c:	080014ad 	.word	0x080014ad
 8001430:	080013c1 	.word	0x080013c1
 8001434:	080013c1 	.word	0x080013c1
 8001438:	080013c1 	.word	0x080013c1
 800143c:	080013c1 	.word	0x080013c1
 8001440:	0800151b 	.word	0x0800151b
 8001444:	080014b5 	.word	0x080014b5
 8001448:	08001493 	.word	0x08001493
 800144c:	080013c1 	.word	0x080013c1
 8001450:	080013c1 	.word	0x080013c1
 8001454:	08001517 	.word	0x08001517
 8001458:	080013c1 	.word	0x080013c1
 800145c:	080014f1 	.word	0x080014f1
 8001460:	080013c1 	.word	0x080013c1
 8001464:	080013c1 	.word	0x080013c1
 8001468:	0800149b 	.word	0x0800149b
 800146c:	3b45      	subs	r3, #69	@ 0x45
 800146e:	2b02      	cmp	r3, #2
 8001470:	d8a6      	bhi.n	80013c0 <__ssvfiscanf_r+0xec>
 8001472:	2305      	movs	r3, #5
 8001474:	e021      	b.n	80014ba <__ssvfiscanf_r+0x1e6>
 8001476:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8001478:	4621      	mov	r1, r4
 800147a:	4630      	mov	r0, r6
 800147c:	4798      	blx	r3
 800147e:	2800      	cmp	r0, #0
 8001480:	f43f af66 	beq.w	8001350 <__ssvfiscanf_r+0x7c>
 8001484:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8001486:	2800      	cmp	r0, #0
 8001488:	f040 808b 	bne.w	80015a2 <__ssvfiscanf_r+0x2ce>
 800148c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001490:	e08b      	b.n	80015aa <__ssvfiscanf_r+0x2d6>
 8001492:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8001494:	f042 0220 	orr.w	r2, r2, #32
 8001498:	9241      	str	r2, [sp, #260]	@ 0x104
 800149a:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 800149c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80014a0:	9241      	str	r2, [sp, #260]	@ 0x104
 80014a2:	2210      	movs	r2, #16
 80014a4:	2b6e      	cmp	r3, #110	@ 0x6e
 80014a6:	9242      	str	r2, [sp, #264]	@ 0x108
 80014a8:	d902      	bls.n	80014b0 <__ssvfiscanf_r+0x1dc>
 80014aa:	e005      	b.n	80014b8 <__ssvfiscanf_r+0x1e4>
 80014ac:	2300      	movs	r3, #0
 80014ae:	9342      	str	r3, [sp, #264]	@ 0x108
 80014b0:	2303      	movs	r3, #3
 80014b2:	e002      	b.n	80014ba <__ssvfiscanf_r+0x1e6>
 80014b4:	2308      	movs	r3, #8
 80014b6:	9342      	str	r3, [sp, #264]	@ 0x108
 80014b8:	2304      	movs	r3, #4
 80014ba:	9347      	str	r3, [sp, #284]	@ 0x11c
 80014bc:	6863      	ldr	r3, [r4, #4]
 80014be:	2b00      	cmp	r3, #0
 80014c0:	dd39      	ble.n	8001536 <__ssvfiscanf_r+0x262>
 80014c2:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 80014c4:	0659      	lsls	r1, r3, #25
 80014c6:	d404      	bmi.n	80014d2 <__ssvfiscanf_r+0x1fe>
 80014c8:	6823      	ldr	r3, [r4, #0]
 80014ca:	781a      	ldrb	r2, [r3, #0]
 80014cc:	5cba      	ldrb	r2, [r7, r2]
 80014ce:	0712      	lsls	r2, r2, #28
 80014d0:	d438      	bmi.n	8001544 <__ssvfiscanf_r+0x270>
 80014d2:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
 80014d4:	2b02      	cmp	r3, #2
 80014d6:	dc47      	bgt.n	8001568 <__ssvfiscanf_r+0x294>
 80014d8:	466b      	mov	r3, sp
 80014da:	4622      	mov	r2, r4
 80014dc:	a941      	add	r1, sp, #260	@ 0x104
 80014de:	4630      	mov	r0, r6
 80014e0:	f000 fbde 	bl	8001ca0 <_scanf_chars>
 80014e4:	2801      	cmp	r0, #1
 80014e6:	d064      	beq.n	80015b2 <__ssvfiscanf_r+0x2de>
 80014e8:	2802      	cmp	r0, #2
 80014ea:	f47f af18 	bne.w	800131e <__ssvfiscanf_r+0x4a>
 80014ee:	e7c9      	b.n	8001484 <__ssvfiscanf_r+0x1b0>
 80014f0:	220a      	movs	r2, #10
 80014f2:	e7d7      	b.n	80014a4 <__ssvfiscanf_r+0x1d0>
 80014f4:	4629      	mov	r1, r5
 80014f6:	4640      	mov	r0, r8
 80014f8:	f000 fd20 	bl	8001f3c <__sccl>
 80014fc:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 80014fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001502:	9341      	str	r3, [sp, #260]	@ 0x104
 8001504:	4605      	mov	r5, r0
 8001506:	2301      	movs	r3, #1
 8001508:	e7d7      	b.n	80014ba <__ssvfiscanf_r+0x1e6>
 800150a:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 800150c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001510:	9341      	str	r3, [sp, #260]	@ 0x104
 8001512:	2300      	movs	r3, #0
 8001514:	e7d1      	b.n	80014ba <__ssvfiscanf_r+0x1e6>
 8001516:	2302      	movs	r3, #2
 8001518:	e7cf      	b.n	80014ba <__ssvfiscanf_r+0x1e6>
 800151a:	9841      	ldr	r0, [sp, #260]	@ 0x104
 800151c:	06c3      	lsls	r3, r0, #27
 800151e:	f53f aefe 	bmi.w	800131e <__ssvfiscanf_r+0x4a>
 8001522:	9b00      	ldr	r3, [sp, #0]
 8001524:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8001526:	1d19      	adds	r1, r3, #4
 8001528:	9100      	str	r1, [sp, #0]
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	07c0      	lsls	r0, r0, #31
 800152e:	bf4c      	ite	mi
 8001530:	801a      	strhmi	r2, [r3, #0]
 8001532:	601a      	strpl	r2, [r3, #0]
 8001534:	e6f3      	b.n	800131e <__ssvfiscanf_r+0x4a>
 8001536:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8001538:	4621      	mov	r1, r4
 800153a:	4630      	mov	r0, r6
 800153c:	4798      	blx	r3
 800153e:	2800      	cmp	r0, #0
 8001540:	d0bf      	beq.n	80014c2 <__ssvfiscanf_r+0x1ee>
 8001542:	e79f      	b.n	8001484 <__ssvfiscanf_r+0x1b0>
 8001544:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8001546:	3201      	adds	r2, #1
 8001548:	9245      	str	r2, [sp, #276]	@ 0x114
 800154a:	6862      	ldr	r2, [r4, #4]
 800154c:	3a01      	subs	r2, #1
 800154e:	2a00      	cmp	r2, #0
 8001550:	6062      	str	r2, [r4, #4]
 8001552:	dd02      	ble.n	800155a <__ssvfiscanf_r+0x286>
 8001554:	3301      	adds	r3, #1
 8001556:	6023      	str	r3, [r4, #0]
 8001558:	e7b6      	b.n	80014c8 <__ssvfiscanf_r+0x1f4>
 800155a:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 800155c:	4621      	mov	r1, r4
 800155e:	4630      	mov	r0, r6
 8001560:	4798      	blx	r3
 8001562:	2800      	cmp	r0, #0
 8001564:	d0b0      	beq.n	80014c8 <__ssvfiscanf_r+0x1f4>
 8001566:	e78d      	b.n	8001484 <__ssvfiscanf_r+0x1b0>
 8001568:	2b04      	cmp	r3, #4
 800156a:	dc0f      	bgt.n	800158c <__ssvfiscanf_r+0x2b8>
 800156c:	466b      	mov	r3, sp
 800156e:	4622      	mov	r2, r4
 8001570:	a941      	add	r1, sp, #260	@ 0x104
 8001572:	4630      	mov	r0, r6
 8001574:	f000 fbee 	bl	8001d54 <_scanf_i>
 8001578:	e7b4      	b.n	80014e4 <__ssvfiscanf_r+0x210>
 800157a:	bf00      	nop
 800157c:	08001225 	.word	0x08001225
 8001580:	0800129b 	.word	0x0800129b
 8001584:	0800265d 	.word	0x0800265d
 8001588:	0800275d 	.word	0x0800275d
 800158c:	4b0a      	ldr	r3, [pc, #40]	@ (80015b8 <__ssvfiscanf_r+0x2e4>)
 800158e:	2b00      	cmp	r3, #0
 8001590:	f43f aec5 	beq.w	800131e <__ssvfiscanf_r+0x4a>
 8001594:	466b      	mov	r3, sp
 8001596:	4622      	mov	r2, r4
 8001598:	a941      	add	r1, sp, #260	@ 0x104
 800159a:	4630      	mov	r0, r6
 800159c:	f3af 8000 	nop.w
 80015a0:	e7a0      	b.n	80014e4 <__ssvfiscanf_r+0x210>
 80015a2:	89a3      	ldrh	r3, [r4, #12]
 80015a4:	065b      	lsls	r3, r3, #25
 80015a6:	f53f af71 	bmi.w	800148c <__ssvfiscanf_r+0x1b8>
 80015aa:	f50d 7d22 	add.w	sp, sp, #648	@ 0x288
 80015ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80015b2:	9844      	ldr	r0, [sp, #272]	@ 0x110
 80015b4:	e7f9      	b.n	80015aa <__ssvfiscanf_r+0x2d6>
 80015b6:	bf00      	nop
 80015b8:	00000000 	.word	0x00000000

080015bc <__sfputc_r>:
 80015bc:	6893      	ldr	r3, [r2, #8]
 80015be:	3b01      	subs	r3, #1
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	b410      	push	{r4}
 80015c4:	6093      	str	r3, [r2, #8]
 80015c6:	da08      	bge.n	80015da <__sfputc_r+0x1e>
 80015c8:	6994      	ldr	r4, [r2, #24]
 80015ca:	42a3      	cmp	r3, r4
 80015cc:	db01      	blt.n	80015d2 <__sfputc_r+0x16>
 80015ce:	290a      	cmp	r1, #10
 80015d0:	d103      	bne.n	80015da <__sfputc_r+0x1e>
 80015d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80015d6:	f000 be7b 	b.w	80022d0 <__swbuf_r>
 80015da:	6813      	ldr	r3, [r2, #0]
 80015dc:	1c58      	adds	r0, r3, #1
 80015de:	6010      	str	r0, [r2, #0]
 80015e0:	7019      	strb	r1, [r3, #0]
 80015e2:	4608      	mov	r0, r1
 80015e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80015e8:	4770      	bx	lr

080015ea <__sfputs_r>:
 80015ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ec:	4606      	mov	r6, r0
 80015ee:	460f      	mov	r7, r1
 80015f0:	4614      	mov	r4, r2
 80015f2:	18d5      	adds	r5, r2, r3
 80015f4:	42ac      	cmp	r4, r5
 80015f6:	d101      	bne.n	80015fc <__sfputs_r+0x12>
 80015f8:	2000      	movs	r0, #0
 80015fa:	e007      	b.n	800160c <__sfputs_r+0x22>
 80015fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001600:	463a      	mov	r2, r7
 8001602:	4630      	mov	r0, r6
 8001604:	f7ff ffda 	bl	80015bc <__sfputc_r>
 8001608:	1c43      	adds	r3, r0, #1
 800160a:	d1f3      	bne.n	80015f4 <__sfputs_r+0xa>
 800160c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001610 <_vfiprintf_r>:
 8001610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001614:	460d      	mov	r5, r1
 8001616:	b09d      	sub	sp, #116	@ 0x74
 8001618:	4614      	mov	r4, r2
 800161a:	4698      	mov	r8, r3
 800161c:	4606      	mov	r6, r0
 800161e:	b118      	cbz	r0, 8001628 <_vfiprintf_r+0x18>
 8001620:	6a03      	ldr	r3, [r0, #32]
 8001622:	b90b      	cbnz	r3, 8001628 <_vfiprintf_r+0x18>
 8001624:	f7ff fc6a 	bl	8000efc <__sinit>
 8001628:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800162a:	07d9      	lsls	r1, r3, #31
 800162c:	d405      	bmi.n	800163a <_vfiprintf_r+0x2a>
 800162e:	89ab      	ldrh	r3, [r5, #12]
 8001630:	059a      	lsls	r2, r3, #22
 8001632:	d402      	bmi.n	800163a <_vfiprintf_r+0x2a>
 8001634:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8001636:	f7ff fda8 	bl	800118a <__retarget_lock_acquire_recursive>
 800163a:	89ab      	ldrh	r3, [r5, #12]
 800163c:	071b      	lsls	r3, r3, #28
 800163e:	d501      	bpl.n	8001644 <_vfiprintf_r+0x34>
 8001640:	692b      	ldr	r3, [r5, #16]
 8001642:	b99b      	cbnz	r3, 800166c <_vfiprintf_r+0x5c>
 8001644:	4629      	mov	r1, r5
 8001646:	4630      	mov	r0, r6
 8001648:	f000 fe80 	bl	800234c <__swsetup_r>
 800164c:	b170      	cbz	r0, 800166c <_vfiprintf_r+0x5c>
 800164e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8001650:	07dc      	lsls	r4, r3, #31
 8001652:	d504      	bpl.n	800165e <_vfiprintf_r+0x4e>
 8001654:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001658:	b01d      	add	sp, #116	@ 0x74
 800165a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800165e:	89ab      	ldrh	r3, [r5, #12]
 8001660:	0598      	lsls	r0, r3, #22
 8001662:	d4f7      	bmi.n	8001654 <_vfiprintf_r+0x44>
 8001664:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8001666:	f7ff fd91 	bl	800118c <__retarget_lock_release_recursive>
 800166a:	e7f3      	b.n	8001654 <_vfiprintf_r+0x44>
 800166c:	2300      	movs	r3, #0
 800166e:	9309      	str	r3, [sp, #36]	@ 0x24
 8001670:	2320      	movs	r3, #32
 8001672:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8001676:	f8cd 800c 	str.w	r8, [sp, #12]
 800167a:	2330      	movs	r3, #48	@ 0x30
 800167c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800182c <_vfiprintf_r+0x21c>
 8001680:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8001684:	f04f 0901 	mov.w	r9, #1
 8001688:	4623      	mov	r3, r4
 800168a:	469a      	mov	sl, r3
 800168c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001690:	b10a      	cbz	r2, 8001696 <_vfiprintf_r+0x86>
 8001692:	2a25      	cmp	r2, #37	@ 0x25
 8001694:	d1f9      	bne.n	800168a <_vfiprintf_r+0x7a>
 8001696:	ebba 0b04 	subs.w	fp, sl, r4
 800169a:	d00b      	beq.n	80016b4 <_vfiprintf_r+0xa4>
 800169c:	465b      	mov	r3, fp
 800169e:	4622      	mov	r2, r4
 80016a0:	4629      	mov	r1, r5
 80016a2:	4630      	mov	r0, r6
 80016a4:	f7ff ffa1 	bl	80015ea <__sfputs_r>
 80016a8:	3001      	adds	r0, #1
 80016aa:	f000 80a7 	beq.w	80017fc <_vfiprintf_r+0x1ec>
 80016ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80016b0:	445a      	add	r2, fp
 80016b2:	9209      	str	r2, [sp, #36]	@ 0x24
 80016b4:	f89a 3000 	ldrb.w	r3, [sl]
 80016b8:	2b00      	cmp	r3, #0
 80016ba:	f000 809f 	beq.w	80017fc <_vfiprintf_r+0x1ec>
 80016be:	2300      	movs	r3, #0
 80016c0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80016c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80016c8:	f10a 0a01 	add.w	sl, sl, #1
 80016cc:	9304      	str	r3, [sp, #16]
 80016ce:	9307      	str	r3, [sp, #28]
 80016d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80016d4:	931a      	str	r3, [sp, #104]	@ 0x68
 80016d6:	4654      	mov	r4, sl
 80016d8:	2205      	movs	r2, #5
 80016da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80016de:	4853      	ldr	r0, [pc, #332]	@ (800182c <_vfiprintf_r+0x21c>)
 80016e0:	f7fe fd96 	bl	8000210 <memchr>
 80016e4:	9a04      	ldr	r2, [sp, #16]
 80016e6:	b9d8      	cbnz	r0, 8001720 <_vfiprintf_r+0x110>
 80016e8:	06d1      	lsls	r1, r2, #27
 80016ea:	bf44      	itt	mi
 80016ec:	2320      	movmi	r3, #32
 80016ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80016f2:	0713      	lsls	r3, r2, #28
 80016f4:	bf44      	itt	mi
 80016f6:	232b      	movmi	r3, #43	@ 0x2b
 80016f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80016fc:	f89a 3000 	ldrb.w	r3, [sl]
 8001700:	2b2a      	cmp	r3, #42	@ 0x2a
 8001702:	d015      	beq.n	8001730 <_vfiprintf_r+0x120>
 8001704:	9a07      	ldr	r2, [sp, #28]
 8001706:	4654      	mov	r4, sl
 8001708:	2000      	movs	r0, #0
 800170a:	f04f 0c0a 	mov.w	ip, #10
 800170e:	4621      	mov	r1, r4
 8001710:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001714:	3b30      	subs	r3, #48	@ 0x30
 8001716:	2b09      	cmp	r3, #9
 8001718:	d94b      	bls.n	80017b2 <_vfiprintf_r+0x1a2>
 800171a:	b1b0      	cbz	r0, 800174a <_vfiprintf_r+0x13a>
 800171c:	9207      	str	r2, [sp, #28]
 800171e:	e014      	b.n	800174a <_vfiprintf_r+0x13a>
 8001720:	eba0 0308 	sub.w	r3, r0, r8
 8001724:	fa09 f303 	lsl.w	r3, r9, r3
 8001728:	4313      	orrs	r3, r2
 800172a:	9304      	str	r3, [sp, #16]
 800172c:	46a2      	mov	sl, r4
 800172e:	e7d2      	b.n	80016d6 <_vfiprintf_r+0xc6>
 8001730:	9b03      	ldr	r3, [sp, #12]
 8001732:	1d19      	adds	r1, r3, #4
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	9103      	str	r1, [sp, #12]
 8001738:	2b00      	cmp	r3, #0
 800173a:	bfbb      	ittet	lt
 800173c:	425b      	neglt	r3, r3
 800173e:	f042 0202 	orrlt.w	r2, r2, #2
 8001742:	9307      	strge	r3, [sp, #28]
 8001744:	9307      	strlt	r3, [sp, #28]
 8001746:	bfb8      	it	lt
 8001748:	9204      	strlt	r2, [sp, #16]
 800174a:	7823      	ldrb	r3, [r4, #0]
 800174c:	2b2e      	cmp	r3, #46	@ 0x2e
 800174e:	d10a      	bne.n	8001766 <_vfiprintf_r+0x156>
 8001750:	7863      	ldrb	r3, [r4, #1]
 8001752:	2b2a      	cmp	r3, #42	@ 0x2a
 8001754:	d132      	bne.n	80017bc <_vfiprintf_r+0x1ac>
 8001756:	9b03      	ldr	r3, [sp, #12]
 8001758:	1d1a      	adds	r2, r3, #4
 800175a:	681b      	ldr	r3, [r3, #0]
 800175c:	9203      	str	r2, [sp, #12]
 800175e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8001762:	3402      	adds	r4, #2
 8001764:	9305      	str	r3, [sp, #20]
 8001766:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800183c <_vfiprintf_r+0x22c>
 800176a:	7821      	ldrb	r1, [r4, #0]
 800176c:	2203      	movs	r2, #3
 800176e:	4650      	mov	r0, sl
 8001770:	f7fe fd4e 	bl	8000210 <memchr>
 8001774:	b138      	cbz	r0, 8001786 <_vfiprintf_r+0x176>
 8001776:	9b04      	ldr	r3, [sp, #16]
 8001778:	eba0 000a 	sub.w	r0, r0, sl
 800177c:	2240      	movs	r2, #64	@ 0x40
 800177e:	4082      	lsls	r2, r0
 8001780:	4313      	orrs	r3, r2
 8001782:	3401      	adds	r4, #1
 8001784:	9304      	str	r3, [sp, #16]
 8001786:	f814 1b01 	ldrb.w	r1, [r4], #1
 800178a:	4829      	ldr	r0, [pc, #164]	@ (8001830 <_vfiprintf_r+0x220>)
 800178c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8001790:	2206      	movs	r2, #6
 8001792:	f7fe fd3d 	bl	8000210 <memchr>
 8001796:	2800      	cmp	r0, #0
 8001798:	d03f      	beq.n	800181a <_vfiprintf_r+0x20a>
 800179a:	4b26      	ldr	r3, [pc, #152]	@ (8001834 <_vfiprintf_r+0x224>)
 800179c:	bb1b      	cbnz	r3, 80017e6 <_vfiprintf_r+0x1d6>
 800179e:	9b03      	ldr	r3, [sp, #12]
 80017a0:	3307      	adds	r3, #7
 80017a2:	f023 0307 	bic.w	r3, r3, #7
 80017a6:	3308      	adds	r3, #8
 80017a8:	9303      	str	r3, [sp, #12]
 80017aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80017ac:	443b      	add	r3, r7
 80017ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80017b0:	e76a      	b.n	8001688 <_vfiprintf_r+0x78>
 80017b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80017b6:	460c      	mov	r4, r1
 80017b8:	2001      	movs	r0, #1
 80017ba:	e7a8      	b.n	800170e <_vfiprintf_r+0xfe>
 80017bc:	2300      	movs	r3, #0
 80017be:	3401      	adds	r4, #1
 80017c0:	9305      	str	r3, [sp, #20]
 80017c2:	4619      	mov	r1, r3
 80017c4:	f04f 0c0a 	mov.w	ip, #10
 80017c8:	4620      	mov	r0, r4
 80017ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80017ce:	3a30      	subs	r2, #48	@ 0x30
 80017d0:	2a09      	cmp	r2, #9
 80017d2:	d903      	bls.n	80017dc <_vfiprintf_r+0x1cc>
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d0c6      	beq.n	8001766 <_vfiprintf_r+0x156>
 80017d8:	9105      	str	r1, [sp, #20]
 80017da:	e7c4      	b.n	8001766 <_vfiprintf_r+0x156>
 80017dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80017e0:	4604      	mov	r4, r0
 80017e2:	2301      	movs	r3, #1
 80017e4:	e7f0      	b.n	80017c8 <_vfiprintf_r+0x1b8>
 80017e6:	ab03      	add	r3, sp, #12
 80017e8:	9300      	str	r3, [sp, #0]
 80017ea:	462a      	mov	r2, r5
 80017ec:	4b12      	ldr	r3, [pc, #72]	@ (8001838 <_vfiprintf_r+0x228>)
 80017ee:	a904      	add	r1, sp, #16
 80017f0:	4630      	mov	r0, r6
 80017f2:	f3af 8000 	nop.w
 80017f6:	4607      	mov	r7, r0
 80017f8:	1c78      	adds	r0, r7, #1
 80017fa:	d1d6      	bne.n	80017aa <_vfiprintf_r+0x19a>
 80017fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80017fe:	07d9      	lsls	r1, r3, #31
 8001800:	d405      	bmi.n	800180e <_vfiprintf_r+0x1fe>
 8001802:	89ab      	ldrh	r3, [r5, #12]
 8001804:	059a      	lsls	r2, r3, #22
 8001806:	d402      	bmi.n	800180e <_vfiprintf_r+0x1fe>
 8001808:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800180a:	f7ff fcbf 	bl	800118c <__retarget_lock_release_recursive>
 800180e:	89ab      	ldrh	r3, [r5, #12]
 8001810:	065b      	lsls	r3, r3, #25
 8001812:	f53f af1f 	bmi.w	8001654 <_vfiprintf_r+0x44>
 8001816:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8001818:	e71e      	b.n	8001658 <_vfiprintf_r+0x48>
 800181a:	ab03      	add	r3, sp, #12
 800181c:	9300      	str	r3, [sp, #0]
 800181e:	462a      	mov	r2, r5
 8001820:	4b05      	ldr	r3, [pc, #20]	@ (8001838 <_vfiprintf_r+0x228>)
 8001822:	a904      	add	r1, sp, #16
 8001824:	4630      	mov	r0, r6
 8001826:	f000 f91b 	bl	8001a60 <_printf_i>
 800182a:	e7e4      	b.n	80017f6 <_vfiprintf_r+0x1e6>
 800182c:	08002761 	.word	0x08002761
 8001830:	08002767 	.word	0x08002767
 8001834:	00000000 	.word	0x00000000
 8001838:	080015eb 	.word	0x080015eb
 800183c:	0800275d 	.word	0x0800275d

08001840 <sbrk_aligned>:
 8001840:	b570      	push	{r4, r5, r6, lr}
 8001842:	4e0f      	ldr	r6, [pc, #60]	@ (8001880 <sbrk_aligned+0x40>)
 8001844:	460c      	mov	r4, r1
 8001846:	6831      	ldr	r1, [r6, #0]
 8001848:	4605      	mov	r5, r0
 800184a:	b911      	cbnz	r1, 8001852 <sbrk_aligned+0x12>
 800184c:	f000 fe58 	bl	8002500 <_sbrk_r>
 8001850:	6030      	str	r0, [r6, #0]
 8001852:	4621      	mov	r1, r4
 8001854:	4628      	mov	r0, r5
 8001856:	f000 fe53 	bl	8002500 <_sbrk_r>
 800185a:	1c43      	adds	r3, r0, #1
 800185c:	d103      	bne.n	8001866 <sbrk_aligned+0x26>
 800185e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8001862:	4620      	mov	r0, r4
 8001864:	bd70      	pop	{r4, r5, r6, pc}
 8001866:	1cc4      	adds	r4, r0, #3
 8001868:	f024 0403 	bic.w	r4, r4, #3
 800186c:	42a0      	cmp	r0, r4
 800186e:	d0f8      	beq.n	8001862 <sbrk_aligned+0x22>
 8001870:	1a21      	subs	r1, r4, r0
 8001872:	4628      	mov	r0, r5
 8001874:	f000 fe44 	bl	8002500 <_sbrk_r>
 8001878:	3001      	adds	r0, #1
 800187a:	d1f2      	bne.n	8001862 <sbrk_aligned+0x22>
 800187c:	e7ef      	b.n	800185e <sbrk_aligned+0x1e>
 800187e:	bf00      	nop
 8001880:	20000290 	.word	0x20000290

08001884 <_malloc_r>:
 8001884:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001888:	1ccd      	adds	r5, r1, #3
 800188a:	f025 0503 	bic.w	r5, r5, #3
 800188e:	3508      	adds	r5, #8
 8001890:	2d0c      	cmp	r5, #12
 8001892:	bf38      	it	cc
 8001894:	250c      	movcc	r5, #12
 8001896:	2d00      	cmp	r5, #0
 8001898:	4606      	mov	r6, r0
 800189a:	db01      	blt.n	80018a0 <_malloc_r+0x1c>
 800189c:	42a9      	cmp	r1, r5
 800189e:	d904      	bls.n	80018aa <_malloc_r+0x26>
 80018a0:	230c      	movs	r3, #12
 80018a2:	6033      	str	r3, [r6, #0]
 80018a4:	2000      	movs	r0, #0
 80018a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80018aa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8001980 <_malloc_r+0xfc>
 80018ae:	f000 fc2b 	bl	8002108 <__malloc_lock>
 80018b2:	f8d8 3000 	ldr.w	r3, [r8]
 80018b6:	461c      	mov	r4, r3
 80018b8:	bb44      	cbnz	r4, 800190c <_malloc_r+0x88>
 80018ba:	4629      	mov	r1, r5
 80018bc:	4630      	mov	r0, r6
 80018be:	f7ff ffbf 	bl	8001840 <sbrk_aligned>
 80018c2:	1c43      	adds	r3, r0, #1
 80018c4:	4604      	mov	r4, r0
 80018c6:	d158      	bne.n	800197a <_malloc_r+0xf6>
 80018c8:	f8d8 4000 	ldr.w	r4, [r8]
 80018cc:	4627      	mov	r7, r4
 80018ce:	2f00      	cmp	r7, #0
 80018d0:	d143      	bne.n	800195a <_malloc_r+0xd6>
 80018d2:	2c00      	cmp	r4, #0
 80018d4:	d04b      	beq.n	800196e <_malloc_r+0xea>
 80018d6:	6823      	ldr	r3, [r4, #0]
 80018d8:	4639      	mov	r1, r7
 80018da:	4630      	mov	r0, r6
 80018dc:	eb04 0903 	add.w	r9, r4, r3
 80018e0:	f000 fe0e 	bl	8002500 <_sbrk_r>
 80018e4:	4581      	cmp	r9, r0
 80018e6:	d142      	bne.n	800196e <_malloc_r+0xea>
 80018e8:	6821      	ldr	r1, [r4, #0]
 80018ea:	1a6d      	subs	r5, r5, r1
 80018ec:	4629      	mov	r1, r5
 80018ee:	4630      	mov	r0, r6
 80018f0:	f7ff ffa6 	bl	8001840 <sbrk_aligned>
 80018f4:	3001      	adds	r0, #1
 80018f6:	d03a      	beq.n	800196e <_malloc_r+0xea>
 80018f8:	6823      	ldr	r3, [r4, #0]
 80018fa:	442b      	add	r3, r5
 80018fc:	6023      	str	r3, [r4, #0]
 80018fe:	f8d8 3000 	ldr.w	r3, [r8]
 8001902:	685a      	ldr	r2, [r3, #4]
 8001904:	bb62      	cbnz	r2, 8001960 <_malloc_r+0xdc>
 8001906:	f8c8 7000 	str.w	r7, [r8]
 800190a:	e00f      	b.n	800192c <_malloc_r+0xa8>
 800190c:	6822      	ldr	r2, [r4, #0]
 800190e:	1b52      	subs	r2, r2, r5
 8001910:	d420      	bmi.n	8001954 <_malloc_r+0xd0>
 8001912:	2a0b      	cmp	r2, #11
 8001914:	d917      	bls.n	8001946 <_malloc_r+0xc2>
 8001916:	1961      	adds	r1, r4, r5
 8001918:	42a3      	cmp	r3, r4
 800191a:	6025      	str	r5, [r4, #0]
 800191c:	bf18      	it	ne
 800191e:	6059      	strne	r1, [r3, #4]
 8001920:	6863      	ldr	r3, [r4, #4]
 8001922:	bf08      	it	eq
 8001924:	f8c8 1000 	streq.w	r1, [r8]
 8001928:	5162      	str	r2, [r4, r5]
 800192a:	604b      	str	r3, [r1, #4]
 800192c:	4630      	mov	r0, r6
 800192e:	f000 fbf1 	bl	8002114 <__malloc_unlock>
 8001932:	f104 000b 	add.w	r0, r4, #11
 8001936:	1d23      	adds	r3, r4, #4
 8001938:	f020 0007 	bic.w	r0, r0, #7
 800193c:	1ac2      	subs	r2, r0, r3
 800193e:	bf1c      	itt	ne
 8001940:	1a1b      	subne	r3, r3, r0
 8001942:	50a3      	strne	r3, [r4, r2]
 8001944:	e7af      	b.n	80018a6 <_malloc_r+0x22>
 8001946:	6862      	ldr	r2, [r4, #4]
 8001948:	42a3      	cmp	r3, r4
 800194a:	bf0c      	ite	eq
 800194c:	f8c8 2000 	streq.w	r2, [r8]
 8001950:	605a      	strne	r2, [r3, #4]
 8001952:	e7eb      	b.n	800192c <_malloc_r+0xa8>
 8001954:	4623      	mov	r3, r4
 8001956:	6864      	ldr	r4, [r4, #4]
 8001958:	e7ae      	b.n	80018b8 <_malloc_r+0x34>
 800195a:	463c      	mov	r4, r7
 800195c:	687f      	ldr	r7, [r7, #4]
 800195e:	e7b6      	b.n	80018ce <_malloc_r+0x4a>
 8001960:	461a      	mov	r2, r3
 8001962:	685b      	ldr	r3, [r3, #4]
 8001964:	42a3      	cmp	r3, r4
 8001966:	d1fb      	bne.n	8001960 <_malloc_r+0xdc>
 8001968:	2300      	movs	r3, #0
 800196a:	6053      	str	r3, [r2, #4]
 800196c:	e7de      	b.n	800192c <_malloc_r+0xa8>
 800196e:	230c      	movs	r3, #12
 8001970:	6033      	str	r3, [r6, #0]
 8001972:	4630      	mov	r0, r6
 8001974:	f000 fbce 	bl	8002114 <__malloc_unlock>
 8001978:	e794      	b.n	80018a4 <_malloc_r+0x20>
 800197a:	6005      	str	r5, [r0, #0]
 800197c:	e7d6      	b.n	800192c <_malloc_r+0xa8>
 800197e:	bf00      	nop
 8001980:	20000294 	.word	0x20000294

08001984 <_printf_common>:
 8001984:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001988:	4616      	mov	r6, r2
 800198a:	4698      	mov	r8, r3
 800198c:	688a      	ldr	r2, [r1, #8]
 800198e:	690b      	ldr	r3, [r1, #16]
 8001990:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001994:	4293      	cmp	r3, r2
 8001996:	bfb8      	it	lt
 8001998:	4613      	movlt	r3, r2
 800199a:	6033      	str	r3, [r6, #0]
 800199c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80019a0:	4607      	mov	r7, r0
 80019a2:	460c      	mov	r4, r1
 80019a4:	b10a      	cbz	r2, 80019aa <_printf_common+0x26>
 80019a6:	3301      	adds	r3, #1
 80019a8:	6033      	str	r3, [r6, #0]
 80019aa:	6823      	ldr	r3, [r4, #0]
 80019ac:	0699      	lsls	r1, r3, #26
 80019ae:	bf42      	ittt	mi
 80019b0:	6833      	ldrmi	r3, [r6, #0]
 80019b2:	3302      	addmi	r3, #2
 80019b4:	6033      	strmi	r3, [r6, #0]
 80019b6:	6825      	ldr	r5, [r4, #0]
 80019b8:	f015 0506 	ands.w	r5, r5, #6
 80019bc:	d106      	bne.n	80019cc <_printf_common+0x48>
 80019be:	f104 0a19 	add.w	sl, r4, #25
 80019c2:	68e3      	ldr	r3, [r4, #12]
 80019c4:	6832      	ldr	r2, [r6, #0]
 80019c6:	1a9b      	subs	r3, r3, r2
 80019c8:	42ab      	cmp	r3, r5
 80019ca:	dc26      	bgt.n	8001a1a <_printf_common+0x96>
 80019cc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80019d0:	6822      	ldr	r2, [r4, #0]
 80019d2:	3b00      	subs	r3, #0
 80019d4:	bf18      	it	ne
 80019d6:	2301      	movne	r3, #1
 80019d8:	0692      	lsls	r2, r2, #26
 80019da:	d42b      	bmi.n	8001a34 <_printf_common+0xb0>
 80019dc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80019e0:	4641      	mov	r1, r8
 80019e2:	4638      	mov	r0, r7
 80019e4:	47c8      	blx	r9
 80019e6:	3001      	adds	r0, #1
 80019e8:	d01e      	beq.n	8001a28 <_printf_common+0xa4>
 80019ea:	6823      	ldr	r3, [r4, #0]
 80019ec:	6922      	ldr	r2, [r4, #16]
 80019ee:	f003 0306 	and.w	r3, r3, #6
 80019f2:	2b04      	cmp	r3, #4
 80019f4:	bf02      	ittt	eq
 80019f6:	68e5      	ldreq	r5, [r4, #12]
 80019f8:	6833      	ldreq	r3, [r6, #0]
 80019fa:	1aed      	subeq	r5, r5, r3
 80019fc:	68a3      	ldr	r3, [r4, #8]
 80019fe:	bf0c      	ite	eq
 8001a00:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001a04:	2500      	movne	r5, #0
 8001a06:	4293      	cmp	r3, r2
 8001a08:	bfc4      	itt	gt
 8001a0a:	1a9b      	subgt	r3, r3, r2
 8001a0c:	18ed      	addgt	r5, r5, r3
 8001a0e:	2600      	movs	r6, #0
 8001a10:	341a      	adds	r4, #26
 8001a12:	42b5      	cmp	r5, r6
 8001a14:	d11a      	bne.n	8001a4c <_printf_common+0xc8>
 8001a16:	2000      	movs	r0, #0
 8001a18:	e008      	b.n	8001a2c <_printf_common+0xa8>
 8001a1a:	2301      	movs	r3, #1
 8001a1c:	4652      	mov	r2, sl
 8001a1e:	4641      	mov	r1, r8
 8001a20:	4638      	mov	r0, r7
 8001a22:	47c8      	blx	r9
 8001a24:	3001      	adds	r0, #1
 8001a26:	d103      	bne.n	8001a30 <_printf_common+0xac>
 8001a28:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001a2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a30:	3501      	adds	r5, #1
 8001a32:	e7c6      	b.n	80019c2 <_printf_common+0x3e>
 8001a34:	18e1      	adds	r1, r4, r3
 8001a36:	1c5a      	adds	r2, r3, #1
 8001a38:	2030      	movs	r0, #48	@ 0x30
 8001a3a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001a3e:	4422      	add	r2, r4
 8001a40:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001a44:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001a48:	3302      	adds	r3, #2
 8001a4a:	e7c7      	b.n	80019dc <_printf_common+0x58>
 8001a4c:	2301      	movs	r3, #1
 8001a4e:	4622      	mov	r2, r4
 8001a50:	4641      	mov	r1, r8
 8001a52:	4638      	mov	r0, r7
 8001a54:	47c8      	blx	r9
 8001a56:	3001      	adds	r0, #1
 8001a58:	d0e6      	beq.n	8001a28 <_printf_common+0xa4>
 8001a5a:	3601      	adds	r6, #1
 8001a5c:	e7d9      	b.n	8001a12 <_printf_common+0x8e>
	...

08001a60 <_printf_i>:
 8001a60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a64:	7e0f      	ldrb	r7, [r1, #24]
 8001a66:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001a68:	2f78      	cmp	r7, #120	@ 0x78
 8001a6a:	4691      	mov	r9, r2
 8001a6c:	4680      	mov	r8, r0
 8001a6e:	460c      	mov	r4, r1
 8001a70:	469a      	mov	sl, r3
 8001a72:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001a76:	d807      	bhi.n	8001a88 <_printf_i+0x28>
 8001a78:	2f62      	cmp	r7, #98	@ 0x62
 8001a7a:	d80a      	bhi.n	8001a92 <_printf_i+0x32>
 8001a7c:	2f00      	cmp	r7, #0
 8001a7e:	f000 80d2 	beq.w	8001c26 <_printf_i+0x1c6>
 8001a82:	2f58      	cmp	r7, #88	@ 0x58
 8001a84:	f000 80b9 	beq.w	8001bfa <_printf_i+0x19a>
 8001a88:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001a8c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001a90:	e03a      	b.n	8001b08 <_printf_i+0xa8>
 8001a92:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001a96:	2b15      	cmp	r3, #21
 8001a98:	d8f6      	bhi.n	8001a88 <_printf_i+0x28>
 8001a9a:	a101      	add	r1, pc, #4	@ (adr r1, 8001aa0 <_printf_i+0x40>)
 8001a9c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001aa0:	08001af9 	.word	0x08001af9
 8001aa4:	08001b0d 	.word	0x08001b0d
 8001aa8:	08001a89 	.word	0x08001a89
 8001aac:	08001a89 	.word	0x08001a89
 8001ab0:	08001a89 	.word	0x08001a89
 8001ab4:	08001a89 	.word	0x08001a89
 8001ab8:	08001b0d 	.word	0x08001b0d
 8001abc:	08001a89 	.word	0x08001a89
 8001ac0:	08001a89 	.word	0x08001a89
 8001ac4:	08001a89 	.word	0x08001a89
 8001ac8:	08001a89 	.word	0x08001a89
 8001acc:	08001c0d 	.word	0x08001c0d
 8001ad0:	08001b37 	.word	0x08001b37
 8001ad4:	08001bc7 	.word	0x08001bc7
 8001ad8:	08001a89 	.word	0x08001a89
 8001adc:	08001a89 	.word	0x08001a89
 8001ae0:	08001c2f 	.word	0x08001c2f
 8001ae4:	08001a89 	.word	0x08001a89
 8001ae8:	08001b37 	.word	0x08001b37
 8001aec:	08001a89 	.word	0x08001a89
 8001af0:	08001a89 	.word	0x08001a89
 8001af4:	08001bcf 	.word	0x08001bcf
 8001af8:	6833      	ldr	r3, [r6, #0]
 8001afa:	1d1a      	adds	r2, r3, #4
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	6032      	str	r2, [r6, #0]
 8001b00:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001b04:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001b08:	2301      	movs	r3, #1
 8001b0a:	e09d      	b.n	8001c48 <_printf_i+0x1e8>
 8001b0c:	6833      	ldr	r3, [r6, #0]
 8001b0e:	6820      	ldr	r0, [r4, #0]
 8001b10:	1d19      	adds	r1, r3, #4
 8001b12:	6031      	str	r1, [r6, #0]
 8001b14:	0606      	lsls	r6, r0, #24
 8001b16:	d501      	bpl.n	8001b1c <_printf_i+0xbc>
 8001b18:	681d      	ldr	r5, [r3, #0]
 8001b1a:	e003      	b.n	8001b24 <_printf_i+0xc4>
 8001b1c:	0645      	lsls	r5, r0, #25
 8001b1e:	d5fb      	bpl.n	8001b18 <_printf_i+0xb8>
 8001b20:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001b24:	2d00      	cmp	r5, #0
 8001b26:	da03      	bge.n	8001b30 <_printf_i+0xd0>
 8001b28:	232d      	movs	r3, #45	@ 0x2d
 8001b2a:	426d      	negs	r5, r5
 8001b2c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001b30:	4859      	ldr	r0, [pc, #356]	@ (8001c98 <_printf_i+0x238>)
 8001b32:	230a      	movs	r3, #10
 8001b34:	e011      	b.n	8001b5a <_printf_i+0xfa>
 8001b36:	6821      	ldr	r1, [r4, #0]
 8001b38:	6833      	ldr	r3, [r6, #0]
 8001b3a:	0608      	lsls	r0, r1, #24
 8001b3c:	f853 5b04 	ldr.w	r5, [r3], #4
 8001b40:	d402      	bmi.n	8001b48 <_printf_i+0xe8>
 8001b42:	0649      	lsls	r1, r1, #25
 8001b44:	bf48      	it	mi
 8001b46:	b2ad      	uxthmi	r5, r5
 8001b48:	2f6f      	cmp	r7, #111	@ 0x6f
 8001b4a:	4853      	ldr	r0, [pc, #332]	@ (8001c98 <_printf_i+0x238>)
 8001b4c:	6033      	str	r3, [r6, #0]
 8001b4e:	bf14      	ite	ne
 8001b50:	230a      	movne	r3, #10
 8001b52:	2308      	moveq	r3, #8
 8001b54:	2100      	movs	r1, #0
 8001b56:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001b5a:	6866      	ldr	r6, [r4, #4]
 8001b5c:	60a6      	str	r6, [r4, #8]
 8001b5e:	2e00      	cmp	r6, #0
 8001b60:	bfa2      	ittt	ge
 8001b62:	6821      	ldrge	r1, [r4, #0]
 8001b64:	f021 0104 	bicge.w	r1, r1, #4
 8001b68:	6021      	strge	r1, [r4, #0]
 8001b6a:	b90d      	cbnz	r5, 8001b70 <_printf_i+0x110>
 8001b6c:	2e00      	cmp	r6, #0
 8001b6e:	d04b      	beq.n	8001c08 <_printf_i+0x1a8>
 8001b70:	4616      	mov	r6, r2
 8001b72:	fbb5 f1f3 	udiv	r1, r5, r3
 8001b76:	fb03 5711 	mls	r7, r3, r1, r5
 8001b7a:	5dc7      	ldrb	r7, [r0, r7]
 8001b7c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001b80:	462f      	mov	r7, r5
 8001b82:	42bb      	cmp	r3, r7
 8001b84:	460d      	mov	r5, r1
 8001b86:	d9f4      	bls.n	8001b72 <_printf_i+0x112>
 8001b88:	2b08      	cmp	r3, #8
 8001b8a:	d10b      	bne.n	8001ba4 <_printf_i+0x144>
 8001b8c:	6823      	ldr	r3, [r4, #0]
 8001b8e:	07df      	lsls	r7, r3, #31
 8001b90:	d508      	bpl.n	8001ba4 <_printf_i+0x144>
 8001b92:	6923      	ldr	r3, [r4, #16]
 8001b94:	6861      	ldr	r1, [r4, #4]
 8001b96:	4299      	cmp	r1, r3
 8001b98:	bfde      	ittt	le
 8001b9a:	2330      	movle	r3, #48	@ 0x30
 8001b9c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001ba0:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001ba4:	1b92      	subs	r2, r2, r6
 8001ba6:	6122      	str	r2, [r4, #16]
 8001ba8:	f8cd a000 	str.w	sl, [sp]
 8001bac:	464b      	mov	r3, r9
 8001bae:	aa03      	add	r2, sp, #12
 8001bb0:	4621      	mov	r1, r4
 8001bb2:	4640      	mov	r0, r8
 8001bb4:	f7ff fee6 	bl	8001984 <_printf_common>
 8001bb8:	3001      	adds	r0, #1
 8001bba:	d14a      	bne.n	8001c52 <_printf_i+0x1f2>
 8001bbc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001bc0:	b004      	add	sp, #16
 8001bc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bc6:	6823      	ldr	r3, [r4, #0]
 8001bc8:	f043 0320 	orr.w	r3, r3, #32
 8001bcc:	6023      	str	r3, [r4, #0]
 8001bce:	4833      	ldr	r0, [pc, #204]	@ (8001c9c <_printf_i+0x23c>)
 8001bd0:	2778      	movs	r7, #120	@ 0x78
 8001bd2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001bd6:	6823      	ldr	r3, [r4, #0]
 8001bd8:	6831      	ldr	r1, [r6, #0]
 8001bda:	061f      	lsls	r7, r3, #24
 8001bdc:	f851 5b04 	ldr.w	r5, [r1], #4
 8001be0:	d402      	bmi.n	8001be8 <_printf_i+0x188>
 8001be2:	065f      	lsls	r7, r3, #25
 8001be4:	bf48      	it	mi
 8001be6:	b2ad      	uxthmi	r5, r5
 8001be8:	6031      	str	r1, [r6, #0]
 8001bea:	07d9      	lsls	r1, r3, #31
 8001bec:	bf44      	itt	mi
 8001bee:	f043 0320 	orrmi.w	r3, r3, #32
 8001bf2:	6023      	strmi	r3, [r4, #0]
 8001bf4:	b11d      	cbz	r5, 8001bfe <_printf_i+0x19e>
 8001bf6:	2310      	movs	r3, #16
 8001bf8:	e7ac      	b.n	8001b54 <_printf_i+0xf4>
 8001bfa:	4827      	ldr	r0, [pc, #156]	@ (8001c98 <_printf_i+0x238>)
 8001bfc:	e7e9      	b.n	8001bd2 <_printf_i+0x172>
 8001bfe:	6823      	ldr	r3, [r4, #0]
 8001c00:	f023 0320 	bic.w	r3, r3, #32
 8001c04:	6023      	str	r3, [r4, #0]
 8001c06:	e7f6      	b.n	8001bf6 <_printf_i+0x196>
 8001c08:	4616      	mov	r6, r2
 8001c0a:	e7bd      	b.n	8001b88 <_printf_i+0x128>
 8001c0c:	6833      	ldr	r3, [r6, #0]
 8001c0e:	6825      	ldr	r5, [r4, #0]
 8001c10:	6961      	ldr	r1, [r4, #20]
 8001c12:	1d18      	adds	r0, r3, #4
 8001c14:	6030      	str	r0, [r6, #0]
 8001c16:	062e      	lsls	r6, r5, #24
 8001c18:	681b      	ldr	r3, [r3, #0]
 8001c1a:	d501      	bpl.n	8001c20 <_printf_i+0x1c0>
 8001c1c:	6019      	str	r1, [r3, #0]
 8001c1e:	e002      	b.n	8001c26 <_printf_i+0x1c6>
 8001c20:	0668      	lsls	r0, r5, #25
 8001c22:	d5fb      	bpl.n	8001c1c <_printf_i+0x1bc>
 8001c24:	8019      	strh	r1, [r3, #0]
 8001c26:	2300      	movs	r3, #0
 8001c28:	6123      	str	r3, [r4, #16]
 8001c2a:	4616      	mov	r6, r2
 8001c2c:	e7bc      	b.n	8001ba8 <_printf_i+0x148>
 8001c2e:	6833      	ldr	r3, [r6, #0]
 8001c30:	1d1a      	adds	r2, r3, #4
 8001c32:	6032      	str	r2, [r6, #0]
 8001c34:	681e      	ldr	r6, [r3, #0]
 8001c36:	6862      	ldr	r2, [r4, #4]
 8001c38:	2100      	movs	r1, #0
 8001c3a:	4630      	mov	r0, r6
 8001c3c:	f7fe fae8 	bl	8000210 <memchr>
 8001c40:	b108      	cbz	r0, 8001c46 <_printf_i+0x1e6>
 8001c42:	1b80      	subs	r0, r0, r6
 8001c44:	6060      	str	r0, [r4, #4]
 8001c46:	6863      	ldr	r3, [r4, #4]
 8001c48:	6123      	str	r3, [r4, #16]
 8001c4a:	2300      	movs	r3, #0
 8001c4c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c50:	e7aa      	b.n	8001ba8 <_printf_i+0x148>
 8001c52:	6923      	ldr	r3, [r4, #16]
 8001c54:	4632      	mov	r2, r6
 8001c56:	4649      	mov	r1, r9
 8001c58:	4640      	mov	r0, r8
 8001c5a:	47d0      	blx	sl
 8001c5c:	3001      	adds	r0, #1
 8001c5e:	d0ad      	beq.n	8001bbc <_printf_i+0x15c>
 8001c60:	6823      	ldr	r3, [r4, #0]
 8001c62:	079b      	lsls	r3, r3, #30
 8001c64:	d413      	bmi.n	8001c8e <_printf_i+0x22e>
 8001c66:	68e0      	ldr	r0, [r4, #12]
 8001c68:	9b03      	ldr	r3, [sp, #12]
 8001c6a:	4298      	cmp	r0, r3
 8001c6c:	bfb8      	it	lt
 8001c6e:	4618      	movlt	r0, r3
 8001c70:	e7a6      	b.n	8001bc0 <_printf_i+0x160>
 8001c72:	2301      	movs	r3, #1
 8001c74:	4632      	mov	r2, r6
 8001c76:	4649      	mov	r1, r9
 8001c78:	4640      	mov	r0, r8
 8001c7a:	47d0      	blx	sl
 8001c7c:	3001      	adds	r0, #1
 8001c7e:	d09d      	beq.n	8001bbc <_printf_i+0x15c>
 8001c80:	3501      	adds	r5, #1
 8001c82:	68e3      	ldr	r3, [r4, #12]
 8001c84:	9903      	ldr	r1, [sp, #12]
 8001c86:	1a5b      	subs	r3, r3, r1
 8001c88:	42ab      	cmp	r3, r5
 8001c8a:	dcf2      	bgt.n	8001c72 <_printf_i+0x212>
 8001c8c:	e7eb      	b.n	8001c66 <_printf_i+0x206>
 8001c8e:	2500      	movs	r5, #0
 8001c90:	f104 0619 	add.w	r6, r4, #25
 8001c94:	e7f5      	b.n	8001c82 <_printf_i+0x222>
 8001c96:	bf00      	nop
 8001c98:	0800276e 	.word	0x0800276e
 8001c9c:	0800277f 	.word	0x0800277f

08001ca0 <_scanf_chars>:
 8001ca0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001ca4:	4615      	mov	r5, r2
 8001ca6:	688a      	ldr	r2, [r1, #8]
 8001ca8:	4680      	mov	r8, r0
 8001caa:	460c      	mov	r4, r1
 8001cac:	b932      	cbnz	r2, 8001cbc <_scanf_chars+0x1c>
 8001cae:	698a      	ldr	r2, [r1, #24]
 8001cb0:	2a00      	cmp	r2, #0
 8001cb2:	bf14      	ite	ne
 8001cb4:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 8001cb8:	2201      	moveq	r2, #1
 8001cba:	608a      	str	r2, [r1, #8]
 8001cbc:	6822      	ldr	r2, [r4, #0]
 8001cbe:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001d50 <_scanf_chars+0xb0>
 8001cc2:	06d1      	lsls	r1, r2, #27
 8001cc4:	bf5f      	itttt	pl
 8001cc6:	681a      	ldrpl	r2, [r3, #0]
 8001cc8:	1d11      	addpl	r1, r2, #4
 8001cca:	6019      	strpl	r1, [r3, #0]
 8001ccc:	6816      	ldrpl	r6, [r2, #0]
 8001cce:	2700      	movs	r7, #0
 8001cd0:	69a0      	ldr	r0, [r4, #24]
 8001cd2:	b188      	cbz	r0, 8001cf8 <_scanf_chars+0x58>
 8001cd4:	2801      	cmp	r0, #1
 8001cd6:	d107      	bne.n	8001ce8 <_scanf_chars+0x48>
 8001cd8:	682b      	ldr	r3, [r5, #0]
 8001cda:	781a      	ldrb	r2, [r3, #0]
 8001cdc:	6963      	ldr	r3, [r4, #20]
 8001cde:	5c9b      	ldrb	r3, [r3, r2]
 8001ce0:	b953      	cbnz	r3, 8001cf8 <_scanf_chars+0x58>
 8001ce2:	2f00      	cmp	r7, #0
 8001ce4:	d031      	beq.n	8001d4a <_scanf_chars+0xaa>
 8001ce6:	e022      	b.n	8001d2e <_scanf_chars+0x8e>
 8001ce8:	2802      	cmp	r0, #2
 8001cea:	d120      	bne.n	8001d2e <_scanf_chars+0x8e>
 8001cec:	682b      	ldr	r3, [r5, #0]
 8001cee:	781b      	ldrb	r3, [r3, #0]
 8001cf0:	f819 3003 	ldrb.w	r3, [r9, r3]
 8001cf4:	071b      	lsls	r3, r3, #28
 8001cf6:	d41a      	bmi.n	8001d2e <_scanf_chars+0x8e>
 8001cf8:	6823      	ldr	r3, [r4, #0]
 8001cfa:	06da      	lsls	r2, r3, #27
 8001cfc:	bf5e      	ittt	pl
 8001cfe:	682b      	ldrpl	r3, [r5, #0]
 8001d00:	781b      	ldrbpl	r3, [r3, #0]
 8001d02:	f806 3b01 	strbpl.w	r3, [r6], #1
 8001d06:	682a      	ldr	r2, [r5, #0]
 8001d08:	686b      	ldr	r3, [r5, #4]
 8001d0a:	3201      	adds	r2, #1
 8001d0c:	602a      	str	r2, [r5, #0]
 8001d0e:	68a2      	ldr	r2, [r4, #8]
 8001d10:	3b01      	subs	r3, #1
 8001d12:	3a01      	subs	r2, #1
 8001d14:	606b      	str	r3, [r5, #4]
 8001d16:	3701      	adds	r7, #1
 8001d18:	60a2      	str	r2, [r4, #8]
 8001d1a:	b142      	cbz	r2, 8001d2e <_scanf_chars+0x8e>
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	dcd7      	bgt.n	8001cd0 <_scanf_chars+0x30>
 8001d20:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8001d24:	4629      	mov	r1, r5
 8001d26:	4640      	mov	r0, r8
 8001d28:	4798      	blx	r3
 8001d2a:	2800      	cmp	r0, #0
 8001d2c:	d0d0      	beq.n	8001cd0 <_scanf_chars+0x30>
 8001d2e:	6823      	ldr	r3, [r4, #0]
 8001d30:	f013 0310 	ands.w	r3, r3, #16
 8001d34:	d105      	bne.n	8001d42 <_scanf_chars+0xa2>
 8001d36:	68e2      	ldr	r2, [r4, #12]
 8001d38:	3201      	adds	r2, #1
 8001d3a:	60e2      	str	r2, [r4, #12]
 8001d3c:	69a2      	ldr	r2, [r4, #24]
 8001d3e:	b102      	cbz	r2, 8001d42 <_scanf_chars+0xa2>
 8001d40:	7033      	strb	r3, [r6, #0]
 8001d42:	6923      	ldr	r3, [r4, #16]
 8001d44:	443b      	add	r3, r7
 8001d46:	6123      	str	r3, [r4, #16]
 8001d48:	2000      	movs	r0, #0
 8001d4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001d4e:	bf00      	nop
 8001d50:	0800265d 	.word	0x0800265d

08001d54 <_scanf_i>:
 8001d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d58:	4698      	mov	r8, r3
 8001d5a:	4b74      	ldr	r3, [pc, #464]	@ (8001f2c <_scanf_i+0x1d8>)
 8001d5c:	460c      	mov	r4, r1
 8001d5e:	4682      	mov	sl, r0
 8001d60:	4616      	mov	r6, r2
 8001d62:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001d66:	b087      	sub	sp, #28
 8001d68:	ab03      	add	r3, sp, #12
 8001d6a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001d6e:	4b70      	ldr	r3, [pc, #448]	@ (8001f30 <_scanf_i+0x1dc>)
 8001d70:	69a1      	ldr	r1, [r4, #24]
 8001d72:	4a70      	ldr	r2, [pc, #448]	@ (8001f34 <_scanf_i+0x1e0>)
 8001d74:	2903      	cmp	r1, #3
 8001d76:	bf08      	it	eq
 8001d78:	461a      	moveq	r2, r3
 8001d7a:	68a3      	ldr	r3, [r4, #8]
 8001d7c:	9201      	str	r2, [sp, #4]
 8001d7e:	1e5a      	subs	r2, r3, #1
 8001d80:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8001d84:	bf88      	it	hi
 8001d86:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8001d8a:	4627      	mov	r7, r4
 8001d8c:	bf82      	ittt	hi
 8001d8e:	eb03 0905 	addhi.w	r9, r3, r5
 8001d92:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8001d96:	60a3      	strhi	r3, [r4, #8]
 8001d98:	f857 3b1c 	ldr.w	r3, [r7], #28
 8001d9c:	f443 6350 	orr.w	r3, r3, #3328	@ 0xd00
 8001da0:	bf98      	it	ls
 8001da2:	f04f 0900 	movls.w	r9, #0
 8001da6:	6023      	str	r3, [r4, #0]
 8001da8:	463d      	mov	r5, r7
 8001daa:	f04f 0b00 	mov.w	fp, #0
 8001dae:	6831      	ldr	r1, [r6, #0]
 8001db0:	ab03      	add	r3, sp, #12
 8001db2:	7809      	ldrb	r1, [r1, #0]
 8001db4:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8001db8:	2202      	movs	r2, #2
 8001dba:	f7fe fa29 	bl	8000210 <memchr>
 8001dbe:	b328      	cbz	r0, 8001e0c <_scanf_i+0xb8>
 8001dc0:	f1bb 0f01 	cmp.w	fp, #1
 8001dc4:	d159      	bne.n	8001e7a <_scanf_i+0x126>
 8001dc6:	6862      	ldr	r2, [r4, #4]
 8001dc8:	b92a      	cbnz	r2, 8001dd6 <_scanf_i+0x82>
 8001dca:	6822      	ldr	r2, [r4, #0]
 8001dcc:	2108      	movs	r1, #8
 8001dce:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001dd2:	6061      	str	r1, [r4, #4]
 8001dd4:	6022      	str	r2, [r4, #0]
 8001dd6:	6822      	ldr	r2, [r4, #0]
 8001dd8:	f422 62a0 	bic.w	r2, r2, #1280	@ 0x500
 8001ddc:	6022      	str	r2, [r4, #0]
 8001dde:	68a2      	ldr	r2, [r4, #8]
 8001de0:	1e51      	subs	r1, r2, #1
 8001de2:	60a1      	str	r1, [r4, #8]
 8001de4:	b192      	cbz	r2, 8001e0c <_scanf_i+0xb8>
 8001de6:	6832      	ldr	r2, [r6, #0]
 8001de8:	1c51      	adds	r1, r2, #1
 8001dea:	6031      	str	r1, [r6, #0]
 8001dec:	7812      	ldrb	r2, [r2, #0]
 8001dee:	f805 2b01 	strb.w	r2, [r5], #1
 8001df2:	6872      	ldr	r2, [r6, #4]
 8001df4:	3a01      	subs	r2, #1
 8001df6:	2a00      	cmp	r2, #0
 8001df8:	6072      	str	r2, [r6, #4]
 8001dfa:	dc07      	bgt.n	8001e0c <_scanf_i+0xb8>
 8001dfc:	f8d4 2180 	ldr.w	r2, [r4, #384]	@ 0x180
 8001e00:	4631      	mov	r1, r6
 8001e02:	4650      	mov	r0, sl
 8001e04:	4790      	blx	r2
 8001e06:	2800      	cmp	r0, #0
 8001e08:	f040 8085 	bne.w	8001f16 <_scanf_i+0x1c2>
 8001e0c:	f10b 0b01 	add.w	fp, fp, #1
 8001e10:	f1bb 0f03 	cmp.w	fp, #3
 8001e14:	d1cb      	bne.n	8001dae <_scanf_i+0x5a>
 8001e16:	6863      	ldr	r3, [r4, #4]
 8001e18:	b90b      	cbnz	r3, 8001e1e <_scanf_i+0xca>
 8001e1a:	230a      	movs	r3, #10
 8001e1c:	6063      	str	r3, [r4, #4]
 8001e1e:	6863      	ldr	r3, [r4, #4]
 8001e20:	4945      	ldr	r1, [pc, #276]	@ (8001f38 <_scanf_i+0x1e4>)
 8001e22:	6960      	ldr	r0, [r4, #20]
 8001e24:	1ac9      	subs	r1, r1, r3
 8001e26:	f000 f889 	bl	8001f3c <__sccl>
 8001e2a:	f04f 0b00 	mov.w	fp, #0
 8001e2e:	68a3      	ldr	r3, [r4, #8]
 8001e30:	6822      	ldr	r2, [r4, #0]
 8001e32:	2b00      	cmp	r3, #0
 8001e34:	d03d      	beq.n	8001eb2 <_scanf_i+0x15e>
 8001e36:	6831      	ldr	r1, [r6, #0]
 8001e38:	6960      	ldr	r0, [r4, #20]
 8001e3a:	f891 c000 	ldrb.w	ip, [r1]
 8001e3e:	f810 000c 	ldrb.w	r0, [r0, ip]
 8001e42:	2800      	cmp	r0, #0
 8001e44:	d035      	beq.n	8001eb2 <_scanf_i+0x15e>
 8001e46:	f1bc 0f30 	cmp.w	ip, #48	@ 0x30
 8001e4a:	d124      	bne.n	8001e96 <_scanf_i+0x142>
 8001e4c:	0510      	lsls	r0, r2, #20
 8001e4e:	d522      	bpl.n	8001e96 <_scanf_i+0x142>
 8001e50:	f10b 0b01 	add.w	fp, fp, #1
 8001e54:	f1b9 0f00 	cmp.w	r9, #0
 8001e58:	d003      	beq.n	8001e62 <_scanf_i+0x10e>
 8001e5a:	3301      	adds	r3, #1
 8001e5c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8001e60:	60a3      	str	r3, [r4, #8]
 8001e62:	6873      	ldr	r3, [r6, #4]
 8001e64:	3b01      	subs	r3, #1
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	6073      	str	r3, [r6, #4]
 8001e6a:	dd1b      	ble.n	8001ea4 <_scanf_i+0x150>
 8001e6c:	6833      	ldr	r3, [r6, #0]
 8001e6e:	3301      	adds	r3, #1
 8001e70:	6033      	str	r3, [r6, #0]
 8001e72:	68a3      	ldr	r3, [r4, #8]
 8001e74:	3b01      	subs	r3, #1
 8001e76:	60a3      	str	r3, [r4, #8]
 8001e78:	e7d9      	b.n	8001e2e <_scanf_i+0xda>
 8001e7a:	f1bb 0f02 	cmp.w	fp, #2
 8001e7e:	d1ae      	bne.n	8001dde <_scanf_i+0x8a>
 8001e80:	6822      	ldr	r2, [r4, #0]
 8001e82:	f402 61c0 	and.w	r1, r2, #1536	@ 0x600
 8001e86:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8001e8a:	d1bf      	bne.n	8001e0c <_scanf_i+0xb8>
 8001e8c:	2110      	movs	r1, #16
 8001e8e:	6061      	str	r1, [r4, #4]
 8001e90:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001e94:	e7a2      	b.n	8001ddc <_scanf_i+0x88>
 8001e96:	f422 6210 	bic.w	r2, r2, #2304	@ 0x900
 8001e9a:	6022      	str	r2, [r4, #0]
 8001e9c:	780b      	ldrb	r3, [r1, #0]
 8001e9e:	f805 3b01 	strb.w	r3, [r5], #1
 8001ea2:	e7de      	b.n	8001e62 <_scanf_i+0x10e>
 8001ea4:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8001ea8:	4631      	mov	r1, r6
 8001eaa:	4650      	mov	r0, sl
 8001eac:	4798      	blx	r3
 8001eae:	2800      	cmp	r0, #0
 8001eb0:	d0df      	beq.n	8001e72 <_scanf_i+0x11e>
 8001eb2:	6823      	ldr	r3, [r4, #0]
 8001eb4:	05d9      	lsls	r1, r3, #23
 8001eb6:	d50d      	bpl.n	8001ed4 <_scanf_i+0x180>
 8001eb8:	42bd      	cmp	r5, r7
 8001eba:	d909      	bls.n	8001ed0 <_scanf_i+0x17c>
 8001ebc:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8001ec0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8001ec4:	4632      	mov	r2, r6
 8001ec6:	4650      	mov	r0, sl
 8001ec8:	4798      	blx	r3
 8001eca:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
 8001ece:	464d      	mov	r5, r9
 8001ed0:	42bd      	cmp	r5, r7
 8001ed2:	d028      	beq.n	8001f26 <_scanf_i+0x1d2>
 8001ed4:	6822      	ldr	r2, [r4, #0]
 8001ed6:	f012 0210 	ands.w	r2, r2, #16
 8001eda:	d113      	bne.n	8001f04 <_scanf_i+0x1b0>
 8001edc:	702a      	strb	r2, [r5, #0]
 8001ede:	6863      	ldr	r3, [r4, #4]
 8001ee0:	9e01      	ldr	r6, [sp, #4]
 8001ee2:	4639      	mov	r1, r7
 8001ee4:	4650      	mov	r0, sl
 8001ee6:	47b0      	blx	r6
 8001ee8:	f8d8 3000 	ldr.w	r3, [r8]
 8001eec:	6821      	ldr	r1, [r4, #0]
 8001eee:	1d1a      	adds	r2, r3, #4
 8001ef0:	f8c8 2000 	str.w	r2, [r8]
 8001ef4:	f011 0f20 	tst.w	r1, #32
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	d00f      	beq.n	8001f1c <_scanf_i+0x1c8>
 8001efc:	6018      	str	r0, [r3, #0]
 8001efe:	68e3      	ldr	r3, [r4, #12]
 8001f00:	3301      	adds	r3, #1
 8001f02:	60e3      	str	r3, [r4, #12]
 8001f04:	6923      	ldr	r3, [r4, #16]
 8001f06:	1bed      	subs	r5, r5, r7
 8001f08:	445d      	add	r5, fp
 8001f0a:	442b      	add	r3, r5
 8001f0c:	6123      	str	r3, [r4, #16]
 8001f0e:	2000      	movs	r0, #0
 8001f10:	b007      	add	sp, #28
 8001f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f16:	f04f 0b00 	mov.w	fp, #0
 8001f1a:	e7ca      	b.n	8001eb2 <_scanf_i+0x15e>
 8001f1c:	07ca      	lsls	r2, r1, #31
 8001f1e:	bf4c      	ite	mi
 8001f20:	8018      	strhmi	r0, [r3, #0]
 8001f22:	6018      	strpl	r0, [r3, #0]
 8001f24:	e7eb      	b.n	8001efe <_scanf_i+0x1aa>
 8001f26:	2001      	movs	r0, #1
 8001f28:	e7f2      	b.n	8001f10 <_scanf_i+0x1bc>
 8001f2a:	bf00      	nop
 8001f2c:	08002650 	.word	0x08002650
 8001f30:	08001021 	.word	0x08001021
 8001f34:	080022cd 	.word	0x080022cd
 8001f38:	080027a0 	.word	0x080027a0

08001f3c <__sccl>:
 8001f3c:	b570      	push	{r4, r5, r6, lr}
 8001f3e:	780b      	ldrb	r3, [r1, #0]
 8001f40:	4604      	mov	r4, r0
 8001f42:	2b5e      	cmp	r3, #94	@ 0x5e
 8001f44:	bf0b      	itete	eq
 8001f46:	784b      	ldrbeq	r3, [r1, #1]
 8001f48:	1c4a      	addne	r2, r1, #1
 8001f4a:	1c8a      	addeq	r2, r1, #2
 8001f4c:	2100      	movne	r1, #0
 8001f4e:	bf08      	it	eq
 8001f50:	2101      	moveq	r1, #1
 8001f52:	3801      	subs	r0, #1
 8001f54:	f104 05ff 	add.w	r5, r4, #255	@ 0xff
 8001f58:	f800 1f01 	strb.w	r1, [r0, #1]!
 8001f5c:	42a8      	cmp	r0, r5
 8001f5e:	d1fb      	bne.n	8001f58 <__sccl+0x1c>
 8001f60:	b90b      	cbnz	r3, 8001f66 <__sccl+0x2a>
 8001f62:	1e50      	subs	r0, r2, #1
 8001f64:	bd70      	pop	{r4, r5, r6, pc}
 8001f66:	f081 0101 	eor.w	r1, r1, #1
 8001f6a:	54e1      	strb	r1, [r4, r3]
 8001f6c:	4610      	mov	r0, r2
 8001f6e:	4602      	mov	r2, r0
 8001f70:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001f74:	2d2d      	cmp	r5, #45	@ 0x2d
 8001f76:	d005      	beq.n	8001f84 <__sccl+0x48>
 8001f78:	2d5d      	cmp	r5, #93	@ 0x5d
 8001f7a:	d016      	beq.n	8001faa <__sccl+0x6e>
 8001f7c:	2d00      	cmp	r5, #0
 8001f7e:	d0f1      	beq.n	8001f64 <__sccl+0x28>
 8001f80:	462b      	mov	r3, r5
 8001f82:	e7f2      	b.n	8001f6a <__sccl+0x2e>
 8001f84:	7846      	ldrb	r6, [r0, #1]
 8001f86:	2e5d      	cmp	r6, #93	@ 0x5d
 8001f88:	d0fa      	beq.n	8001f80 <__sccl+0x44>
 8001f8a:	42b3      	cmp	r3, r6
 8001f8c:	dcf8      	bgt.n	8001f80 <__sccl+0x44>
 8001f8e:	3002      	adds	r0, #2
 8001f90:	461a      	mov	r2, r3
 8001f92:	3201      	adds	r2, #1
 8001f94:	4296      	cmp	r6, r2
 8001f96:	54a1      	strb	r1, [r4, r2]
 8001f98:	dcfb      	bgt.n	8001f92 <__sccl+0x56>
 8001f9a:	1af2      	subs	r2, r6, r3
 8001f9c:	3a01      	subs	r2, #1
 8001f9e:	1c5d      	adds	r5, r3, #1
 8001fa0:	42b3      	cmp	r3, r6
 8001fa2:	bfa8      	it	ge
 8001fa4:	2200      	movge	r2, #0
 8001fa6:	18ab      	adds	r3, r5, r2
 8001fa8:	e7e1      	b.n	8001f6e <__sccl+0x32>
 8001faa:	4610      	mov	r0, r2
 8001fac:	e7da      	b.n	8001f64 <__sccl+0x28>
	...

08001fb0 <__sflush_r>:
 8001fb0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001fb8:	0716      	lsls	r6, r2, #28
 8001fba:	4605      	mov	r5, r0
 8001fbc:	460c      	mov	r4, r1
 8001fbe:	d454      	bmi.n	800206a <__sflush_r+0xba>
 8001fc0:	684b      	ldr	r3, [r1, #4]
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	dc02      	bgt.n	8001fcc <__sflush_r+0x1c>
 8001fc6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	dd48      	ble.n	800205e <__sflush_r+0xae>
 8001fcc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001fce:	2e00      	cmp	r6, #0
 8001fd0:	d045      	beq.n	800205e <__sflush_r+0xae>
 8001fd2:	2300      	movs	r3, #0
 8001fd4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001fd8:	682f      	ldr	r7, [r5, #0]
 8001fda:	6a21      	ldr	r1, [r4, #32]
 8001fdc:	602b      	str	r3, [r5, #0]
 8001fde:	d030      	beq.n	8002042 <__sflush_r+0x92>
 8001fe0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001fe2:	89a3      	ldrh	r3, [r4, #12]
 8001fe4:	0759      	lsls	r1, r3, #29
 8001fe6:	d505      	bpl.n	8001ff4 <__sflush_r+0x44>
 8001fe8:	6863      	ldr	r3, [r4, #4]
 8001fea:	1ad2      	subs	r2, r2, r3
 8001fec:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001fee:	b10b      	cbz	r3, 8001ff4 <__sflush_r+0x44>
 8001ff0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ff2:	1ad2      	subs	r2, r2, r3
 8001ff4:	2300      	movs	r3, #0
 8001ff6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001ff8:	6a21      	ldr	r1, [r4, #32]
 8001ffa:	4628      	mov	r0, r5
 8001ffc:	47b0      	blx	r6
 8001ffe:	1c43      	adds	r3, r0, #1
 8002000:	89a3      	ldrh	r3, [r4, #12]
 8002002:	d106      	bne.n	8002012 <__sflush_r+0x62>
 8002004:	6829      	ldr	r1, [r5, #0]
 8002006:	291d      	cmp	r1, #29
 8002008:	d82b      	bhi.n	8002062 <__sflush_r+0xb2>
 800200a:	4a2a      	ldr	r2, [pc, #168]	@ (80020b4 <__sflush_r+0x104>)
 800200c:	410a      	asrs	r2, r1
 800200e:	07d6      	lsls	r6, r2, #31
 8002010:	d427      	bmi.n	8002062 <__sflush_r+0xb2>
 8002012:	2200      	movs	r2, #0
 8002014:	6062      	str	r2, [r4, #4]
 8002016:	04d9      	lsls	r1, r3, #19
 8002018:	6922      	ldr	r2, [r4, #16]
 800201a:	6022      	str	r2, [r4, #0]
 800201c:	d504      	bpl.n	8002028 <__sflush_r+0x78>
 800201e:	1c42      	adds	r2, r0, #1
 8002020:	d101      	bne.n	8002026 <__sflush_r+0x76>
 8002022:	682b      	ldr	r3, [r5, #0]
 8002024:	b903      	cbnz	r3, 8002028 <__sflush_r+0x78>
 8002026:	6560      	str	r0, [r4, #84]	@ 0x54
 8002028:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800202a:	602f      	str	r7, [r5, #0]
 800202c:	b1b9      	cbz	r1, 800205e <__sflush_r+0xae>
 800202e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002032:	4299      	cmp	r1, r3
 8002034:	d002      	beq.n	800203c <__sflush_r+0x8c>
 8002036:	4628      	mov	r0, r5
 8002038:	f7ff f8aa 	bl	8001190 <_free_r>
 800203c:	2300      	movs	r3, #0
 800203e:	6363      	str	r3, [r4, #52]	@ 0x34
 8002040:	e00d      	b.n	800205e <__sflush_r+0xae>
 8002042:	2301      	movs	r3, #1
 8002044:	4628      	mov	r0, r5
 8002046:	47b0      	blx	r6
 8002048:	4602      	mov	r2, r0
 800204a:	1c50      	adds	r0, r2, #1
 800204c:	d1c9      	bne.n	8001fe2 <__sflush_r+0x32>
 800204e:	682b      	ldr	r3, [r5, #0]
 8002050:	2b00      	cmp	r3, #0
 8002052:	d0c6      	beq.n	8001fe2 <__sflush_r+0x32>
 8002054:	2b1d      	cmp	r3, #29
 8002056:	d001      	beq.n	800205c <__sflush_r+0xac>
 8002058:	2b16      	cmp	r3, #22
 800205a:	d11e      	bne.n	800209a <__sflush_r+0xea>
 800205c:	602f      	str	r7, [r5, #0]
 800205e:	2000      	movs	r0, #0
 8002060:	e022      	b.n	80020a8 <__sflush_r+0xf8>
 8002062:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002066:	b21b      	sxth	r3, r3
 8002068:	e01b      	b.n	80020a2 <__sflush_r+0xf2>
 800206a:	690f      	ldr	r7, [r1, #16]
 800206c:	2f00      	cmp	r7, #0
 800206e:	d0f6      	beq.n	800205e <__sflush_r+0xae>
 8002070:	0793      	lsls	r3, r2, #30
 8002072:	680e      	ldr	r6, [r1, #0]
 8002074:	bf08      	it	eq
 8002076:	694b      	ldreq	r3, [r1, #20]
 8002078:	600f      	str	r7, [r1, #0]
 800207a:	bf18      	it	ne
 800207c:	2300      	movne	r3, #0
 800207e:	eba6 0807 	sub.w	r8, r6, r7
 8002082:	608b      	str	r3, [r1, #8]
 8002084:	f1b8 0f00 	cmp.w	r8, #0
 8002088:	dde9      	ble.n	800205e <__sflush_r+0xae>
 800208a:	6a21      	ldr	r1, [r4, #32]
 800208c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800208e:	4643      	mov	r3, r8
 8002090:	463a      	mov	r2, r7
 8002092:	4628      	mov	r0, r5
 8002094:	47b0      	blx	r6
 8002096:	2800      	cmp	r0, #0
 8002098:	dc08      	bgt.n	80020ac <__sflush_r+0xfc>
 800209a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800209e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80020a2:	81a3      	strh	r3, [r4, #12]
 80020a4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80020a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80020ac:	4407      	add	r7, r0
 80020ae:	eba8 0800 	sub.w	r8, r8, r0
 80020b2:	e7e7      	b.n	8002084 <__sflush_r+0xd4>
 80020b4:	dfbffffe 	.word	0xdfbffffe

080020b8 <_fflush_r>:
 80020b8:	b538      	push	{r3, r4, r5, lr}
 80020ba:	690b      	ldr	r3, [r1, #16]
 80020bc:	4605      	mov	r5, r0
 80020be:	460c      	mov	r4, r1
 80020c0:	b913      	cbnz	r3, 80020c8 <_fflush_r+0x10>
 80020c2:	2500      	movs	r5, #0
 80020c4:	4628      	mov	r0, r5
 80020c6:	bd38      	pop	{r3, r4, r5, pc}
 80020c8:	b118      	cbz	r0, 80020d2 <_fflush_r+0x1a>
 80020ca:	6a03      	ldr	r3, [r0, #32]
 80020cc:	b90b      	cbnz	r3, 80020d2 <_fflush_r+0x1a>
 80020ce:	f7fe ff15 	bl	8000efc <__sinit>
 80020d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d0f3      	beq.n	80020c2 <_fflush_r+0xa>
 80020da:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80020dc:	07d0      	lsls	r0, r2, #31
 80020de:	d404      	bmi.n	80020ea <_fflush_r+0x32>
 80020e0:	0599      	lsls	r1, r3, #22
 80020e2:	d402      	bmi.n	80020ea <_fflush_r+0x32>
 80020e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80020e6:	f7ff f850 	bl	800118a <__retarget_lock_acquire_recursive>
 80020ea:	4628      	mov	r0, r5
 80020ec:	4621      	mov	r1, r4
 80020ee:	f7ff ff5f 	bl	8001fb0 <__sflush_r>
 80020f2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80020f4:	07da      	lsls	r2, r3, #31
 80020f6:	4605      	mov	r5, r0
 80020f8:	d4e4      	bmi.n	80020c4 <_fflush_r+0xc>
 80020fa:	89a3      	ldrh	r3, [r4, #12]
 80020fc:	059b      	lsls	r3, r3, #22
 80020fe:	d4e1      	bmi.n	80020c4 <_fflush_r+0xc>
 8002100:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002102:	f7ff f843 	bl	800118c <__retarget_lock_release_recursive>
 8002106:	e7dd      	b.n	80020c4 <_fflush_r+0xc>

08002108 <__malloc_lock>:
 8002108:	4801      	ldr	r0, [pc, #4]	@ (8002110 <__malloc_lock+0x8>)
 800210a:	f7ff b83e 	b.w	800118a <__retarget_lock_acquire_recursive>
 800210e:	bf00      	nop
 8002110:	2000028c 	.word	0x2000028c

08002114 <__malloc_unlock>:
 8002114:	4801      	ldr	r0, [pc, #4]	@ (800211c <__malloc_unlock+0x8>)
 8002116:	f7ff b839 	b.w	800118c <__retarget_lock_release_recursive>
 800211a:	bf00      	nop
 800211c:	2000028c 	.word	0x2000028c

08002120 <__submore>:
 8002120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002124:	460c      	mov	r4, r1
 8002126:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 8002128:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800212c:	4299      	cmp	r1, r3
 800212e:	d11d      	bne.n	800216c <__submore+0x4c>
 8002130:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002134:	f7ff fba6 	bl	8001884 <_malloc_r>
 8002138:	b918      	cbnz	r0, 8002142 <__submore+0x22>
 800213a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800213e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002142:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002146:	63a3      	str	r3, [r4, #56]	@ 0x38
 8002148:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 800214c:	6360      	str	r0, [r4, #52]	@ 0x34
 800214e:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
 8002152:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8002156:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
 800215a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800215e:	f880 33fd 	strb.w	r3, [r0, #1021]	@ 0x3fd
 8002162:	f200 30fd 	addw	r0, r0, #1021	@ 0x3fd
 8002166:	6020      	str	r0, [r4, #0]
 8002168:	2000      	movs	r0, #0
 800216a:	e7e8      	b.n	800213e <__submore+0x1e>
 800216c:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
 800216e:	0077      	lsls	r7, r6, #1
 8002170:	463a      	mov	r2, r7
 8002172:	f000 f80f 	bl	8002194 <_realloc_r>
 8002176:	4605      	mov	r5, r0
 8002178:	2800      	cmp	r0, #0
 800217a:	d0de      	beq.n	800213a <__submore+0x1a>
 800217c:	eb00 0806 	add.w	r8, r0, r6
 8002180:	4601      	mov	r1, r0
 8002182:	4632      	mov	r2, r6
 8002184:	4640      	mov	r0, r8
 8002186:	f000 f9cb 	bl	8002520 <memcpy>
 800218a:	e9c4 570d 	strd	r5, r7, [r4, #52]	@ 0x34
 800218e:	f8c4 8000 	str.w	r8, [r4]
 8002192:	e7e9      	b.n	8002168 <__submore+0x48>

08002194 <_realloc_r>:
 8002194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002198:	4680      	mov	r8, r0
 800219a:	4615      	mov	r5, r2
 800219c:	460c      	mov	r4, r1
 800219e:	b921      	cbnz	r1, 80021aa <_realloc_r+0x16>
 80021a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80021a4:	4611      	mov	r1, r2
 80021a6:	f7ff bb6d 	b.w	8001884 <_malloc_r>
 80021aa:	b92a      	cbnz	r2, 80021b8 <_realloc_r+0x24>
 80021ac:	f7fe fff0 	bl	8001190 <_free_r>
 80021b0:	2400      	movs	r4, #0
 80021b2:	4620      	mov	r0, r4
 80021b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80021b8:	f000 f9c0 	bl	800253c <_malloc_usable_size_r>
 80021bc:	4285      	cmp	r5, r0
 80021be:	4606      	mov	r6, r0
 80021c0:	d802      	bhi.n	80021c8 <_realloc_r+0x34>
 80021c2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80021c6:	d8f4      	bhi.n	80021b2 <_realloc_r+0x1e>
 80021c8:	4629      	mov	r1, r5
 80021ca:	4640      	mov	r0, r8
 80021cc:	f7ff fb5a 	bl	8001884 <_malloc_r>
 80021d0:	4607      	mov	r7, r0
 80021d2:	2800      	cmp	r0, #0
 80021d4:	d0ec      	beq.n	80021b0 <_realloc_r+0x1c>
 80021d6:	42b5      	cmp	r5, r6
 80021d8:	462a      	mov	r2, r5
 80021da:	4621      	mov	r1, r4
 80021dc:	bf28      	it	cs
 80021de:	4632      	movcs	r2, r6
 80021e0:	f000 f99e 	bl	8002520 <memcpy>
 80021e4:	4621      	mov	r1, r4
 80021e6:	4640      	mov	r0, r8
 80021e8:	f7fe ffd2 	bl	8001190 <_free_r>
 80021ec:	463c      	mov	r4, r7
 80021ee:	e7e0      	b.n	80021b2 <_realloc_r+0x1e>

080021f0 <_strtoul_l.constprop.0>:
 80021f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80021f4:	4e34      	ldr	r6, [pc, #208]	@ (80022c8 <_strtoul_l.constprop.0+0xd8>)
 80021f6:	4686      	mov	lr, r0
 80021f8:	460d      	mov	r5, r1
 80021fa:	4628      	mov	r0, r5
 80021fc:	f815 4b01 	ldrb.w	r4, [r5], #1
 8002200:	5d37      	ldrb	r7, [r6, r4]
 8002202:	f017 0708 	ands.w	r7, r7, #8
 8002206:	d1f8      	bne.n	80021fa <_strtoul_l.constprop.0+0xa>
 8002208:	2c2d      	cmp	r4, #45	@ 0x2d
 800220a:	d12f      	bne.n	800226c <_strtoul_l.constprop.0+0x7c>
 800220c:	782c      	ldrb	r4, [r5, #0]
 800220e:	2701      	movs	r7, #1
 8002210:	1c85      	adds	r5, r0, #2
 8002212:	f033 0010 	bics.w	r0, r3, #16
 8002216:	d109      	bne.n	800222c <_strtoul_l.constprop.0+0x3c>
 8002218:	2c30      	cmp	r4, #48	@ 0x30
 800221a:	d12c      	bne.n	8002276 <_strtoul_l.constprop.0+0x86>
 800221c:	7828      	ldrb	r0, [r5, #0]
 800221e:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
 8002222:	2858      	cmp	r0, #88	@ 0x58
 8002224:	d127      	bne.n	8002276 <_strtoul_l.constprop.0+0x86>
 8002226:	786c      	ldrb	r4, [r5, #1]
 8002228:	2310      	movs	r3, #16
 800222a:	3502      	adds	r5, #2
 800222c:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 8002230:	2600      	movs	r6, #0
 8002232:	fbb8 f8f3 	udiv	r8, r8, r3
 8002236:	fb03 f908 	mul.w	r9, r3, r8
 800223a:	ea6f 0909 	mvn.w	r9, r9
 800223e:	4630      	mov	r0, r6
 8002240:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8002244:	f1bc 0f09 	cmp.w	ip, #9
 8002248:	d81c      	bhi.n	8002284 <_strtoul_l.constprop.0+0x94>
 800224a:	4664      	mov	r4, ip
 800224c:	42a3      	cmp	r3, r4
 800224e:	dd2a      	ble.n	80022a6 <_strtoul_l.constprop.0+0xb6>
 8002250:	f1b6 3fff 	cmp.w	r6, #4294967295	@ 0xffffffff
 8002254:	d007      	beq.n	8002266 <_strtoul_l.constprop.0+0x76>
 8002256:	4580      	cmp	r8, r0
 8002258:	d322      	bcc.n	80022a0 <_strtoul_l.constprop.0+0xb0>
 800225a:	d101      	bne.n	8002260 <_strtoul_l.constprop.0+0x70>
 800225c:	45a1      	cmp	r9, r4
 800225e:	db1f      	blt.n	80022a0 <_strtoul_l.constprop.0+0xb0>
 8002260:	fb00 4003 	mla	r0, r0, r3, r4
 8002264:	2601      	movs	r6, #1
 8002266:	f815 4b01 	ldrb.w	r4, [r5], #1
 800226a:	e7e9      	b.n	8002240 <_strtoul_l.constprop.0+0x50>
 800226c:	2c2b      	cmp	r4, #43	@ 0x2b
 800226e:	bf04      	itt	eq
 8002270:	782c      	ldrbeq	r4, [r5, #0]
 8002272:	1c85      	addeq	r5, r0, #2
 8002274:	e7cd      	b.n	8002212 <_strtoul_l.constprop.0+0x22>
 8002276:	2b00      	cmp	r3, #0
 8002278:	d1d8      	bne.n	800222c <_strtoul_l.constprop.0+0x3c>
 800227a:	2c30      	cmp	r4, #48	@ 0x30
 800227c:	bf0c      	ite	eq
 800227e:	2308      	moveq	r3, #8
 8002280:	230a      	movne	r3, #10
 8002282:	e7d3      	b.n	800222c <_strtoul_l.constprop.0+0x3c>
 8002284:	f1a4 0c41 	sub.w	ip, r4, #65	@ 0x41
 8002288:	f1bc 0f19 	cmp.w	ip, #25
 800228c:	d801      	bhi.n	8002292 <_strtoul_l.constprop.0+0xa2>
 800228e:	3c37      	subs	r4, #55	@ 0x37
 8002290:	e7dc      	b.n	800224c <_strtoul_l.constprop.0+0x5c>
 8002292:	f1a4 0c61 	sub.w	ip, r4, #97	@ 0x61
 8002296:	f1bc 0f19 	cmp.w	ip, #25
 800229a:	d804      	bhi.n	80022a6 <_strtoul_l.constprop.0+0xb6>
 800229c:	3c57      	subs	r4, #87	@ 0x57
 800229e:	e7d5      	b.n	800224c <_strtoul_l.constprop.0+0x5c>
 80022a0:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 80022a4:	e7df      	b.n	8002266 <_strtoul_l.constprop.0+0x76>
 80022a6:	1c73      	adds	r3, r6, #1
 80022a8:	d106      	bne.n	80022b8 <_strtoul_l.constprop.0+0xc8>
 80022aa:	2322      	movs	r3, #34	@ 0x22
 80022ac:	f8ce 3000 	str.w	r3, [lr]
 80022b0:	4630      	mov	r0, r6
 80022b2:	b932      	cbnz	r2, 80022c2 <_strtoul_l.constprop.0+0xd2>
 80022b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80022b8:	b107      	cbz	r7, 80022bc <_strtoul_l.constprop.0+0xcc>
 80022ba:	4240      	negs	r0, r0
 80022bc:	2a00      	cmp	r2, #0
 80022be:	d0f9      	beq.n	80022b4 <_strtoul_l.constprop.0+0xc4>
 80022c0:	b106      	cbz	r6, 80022c4 <_strtoul_l.constprop.0+0xd4>
 80022c2:	1e69      	subs	r1, r5, #1
 80022c4:	6011      	str	r1, [r2, #0]
 80022c6:	e7f5      	b.n	80022b4 <_strtoul_l.constprop.0+0xc4>
 80022c8:	0800265d 	.word	0x0800265d

080022cc <_strtoul_r>:
 80022cc:	f7ff bf90 	b.w	80021f0 <_strtoul_l.constprop.0>

080022d0 <__swbuf_r>:
 80022d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022d2:	460e      	mov	r6, r1
 80022d4:	4614      	mov	r4, r2
 80022d6:	4605      	mov	r5, r0
 80022d8:	b118      	cbz	r0, 80022e2 <__swbuf_r+0x12>
 80022da:	6a03      	ldr	r3, [r0, #32]
 80022dc:	b90b      	cbnz	r3, 80022e2 <__swbuf_r+0x12>
 80022de:	f7fe fe0d 	bl	8000efc <__sinit>
 80022e2:	69a3      	ldr	r3, [r4, #24]
 80022e4:	60a3      	str	r3, [r4, #8]
 80022e6:	89a3      	ldrh	r3, [r4, #12]
 80022e8:	071a      	lsls	r2, r3, #28
 80022ea:	d501      	bpl.n	80022f0 <__swbuf_r+0x20>
 80022ec:	6923      	ldr	r3, [r4, #16]
 80022ee:	b943      	cbnz	r3, 8002302 <__swbuf_r+0x32>
 80022f0:	4621      	mov	r1, r4
 80022f2:	4628      	mov	r0, r5
 80022f4:	f000 f82a 	bl	800234c <__swsetup_r>
 80022f8:	b118      	cbz	r0, 8002302 <__swbuf_r+0x32>
 80022fa:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80022fe:	4638      	mov	r0, r7
 8002300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002302:	6823      	ldr	r3, [r4, #0]
 8002304:	6922      	ldr	r2, [r4, #16]
 8002306:	1a98      	subs	r0, r3, r2
 8002308:	6963      	ldr	r3, [r4, #20]
 800230a:	b2f6      	uxtb	r6, r6
 800230c:	4283      	cmp	r3, r0
 800230e:	4637      	mov	r7, r6
 8002310:	dc05      	bgt.n	800231e <__swbuf_r+0x4e>
 8002312:	4621      	mov	r1, r4
 8002314:	4628      	mov	r0, r5
 8002316:	f7ff fecf 	bl	80020b8 <_fflush_r>
 800231a:	2800      	cmp	r0, #0
 800231c:	d1ed      	bne.n	80022fa <__swbuf_r+0x2a>
 800231e:	68a3      	ldr	r3, [r4, #8]
 8002320:	3b01      	subs	r3, #1
 8002322:	60a3      	str	r3, [r4, #8]
 8002324:	6823      	ldr	r3, [r4, #0]
 8002326:	1c5a      	adds	r2, r3, #1
 8002328:	6022      	str	r2, [r4, #0]
 800232a:	701e      	strb	r6, [r3, #0]
 800232c:	6962      	ldr	r2, [r4, #20]
 800232e:	1c43      	adds	r3, r0, #1
 8002330:	429a      	cmp	r2, r3
 8002332:	d004      	beq.n	800233e <__swbuf_r+0x6e>
 8002334:	89a3      	ldrh	r3, [r4, #12]
 8002336:	07db      	lsls	r3, r3, #31
 8002338:	d5e1      	bpl.n	80022fe <__swbuf_r+0x2e>
 800233a:	2e0a      	cmp	r6, #10
 800233c:	d1df      	bne.n	80022fe <__swbuf_r+0x2e>
 800233e:	4621      	mov	r1, r4
 8002340:	4628      	mov	r0, r5
 8002342:	f7ff feb9 	bl	80020b8 <_fflush_r>
 8002346:	2800      	cmp	r0, #0
 8002348:	d0d9      	beq.n	80022fe <__swbuf_r+0x2e>
 800234a:	e7d6      	b.n	80022fa <__swbuf_r+0x2a>

0800234c <__swsetup_r>:
 800234c:	b538      	push	{r3, r4, r5, lr}
 800234e:	4b29      	ldr	r3, [pc, #164]	@ (80023f4 <__swsetup_r+0xa8>)
 8002350:	4605      	mov	r5, r0
 8002352:	6818      	ldr	r0, [r3, #0]
 8002354:	460c      	mov	r4, r1
 8002356:	b118      	cbz	r0, 8002360 <__swsetup_r+0x14>
 8002358:	6a03      	ldr	r3, [r0, #32]
 800235a:	b90b      	cbnz	r3, 8002360 <__swsetup_r+0x14>
 800235c:	f7fe fdce 	bl	8000efc <__sinit>
 8002360:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002364:	0719      	lsls	r1, r3, #28
 8002366:	d422      	bmi.n	80023ae <__swsetup_r+0x62>
 8002368:	06da      	lsls	r2, r3, #27
 800236a:	d407      	bmi.n	800237c <__swsetup_r+0x30>
 800236c:	2209      	movs	r2, #9
 800236e:	602a      	str	r2, [r5, #0]
 8002370:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002374:	81a3      	strh	r3, [r4, #12]
 8002376:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800237a:	e033      	b.n	80023e4 <__swsetup_r+0x98>
 800237c:	0758      	lsls	r0, r3, #29
 800237e:	d512      	bpl.n	80023a6 <__swsetup_r+0x5a>
 8002380:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8002382:	b141      	cbz	r1, 8002396 <__swsetup_r+0x4a>
 8002384:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002388:	4299      	cmp	r1, r3
 800238a:	d002      	beq.n	8002392 <__swsetup_r+0x46>
 800238c:	4628      	mov	r0, r5
 800238e:	f7fe feff 	bl	8001190 <_free_r>
 8002392:	2300      	movs	r3, #0
 8002394:	6363      	str	r3, [r4, #52]	@ 0x34
 8002396:	89a3      	ldrh	r3, [r4, #12]
 8002398:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800239c:	81a3      	strh	r3, [r4, #12]
 800239e:	2300      	movs	r3, #0
 80023a0:	6063      	str	r3, [r4, #4]
 80023a2:	6923      	ldr	r3, [r4, #16]
 80023a4:	6023      	str	r3, [r4, #0]
 80023a6:	89a3      	ldrh	r3, [r4, #12]
 80023a8:	f043 0308 	orr.w	r3, r3, #8
 80023ac:	81a3      	strh	r3, [r4, #12]
 80023ae:	6923      	ldr	r3, [r4, #16]
 80023b0:	b94b      	cbnz	r3, 80023c6 <__swsetup_r+0x7a>
 80023b2:	89a3      	ldrh	r3, [r4, #12]
 80023b4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80023b8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80023bc:	d003      	beq.n	80023c6 <__swsetup_r+0x7a>
 80023be:	4621      	mov	r1, r4
 80023c0:	4628      	mov	r0, r5
 80023c2:	f000 f83f 	bl	8002444 <__smakebuf_r>
 80023c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80023ca:	f013 0201 	ands.w	r2, r3, #1
 80023ce:	d00a      	beq.n	80023e6 <__swsetup_r+0x9a>
 80023d0:	2200      	movs	r2, #0
 80023d2:	60a2      	str	r2, [r4, #8]
 80023d4:	6962      	ldr	r2, [r4, #20]
 80023d6:	4252      	negs	r2, r2
 80023d8:	61a2      	str	r2, [r4, #24]
 80023da:	6922      	ldr	r2, [r4, #16]
 80023dc:	b942      	cbnz	r2, 80023f0 <__swsetup_r+0xa4>
 80023de:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80023e2:	d1c5      	bne.n	8002370 <__swsetup_r+0x24>
 80023e4:	bd38      	pop	{r3, r4, r5, pc}
 80023e6:	0799      	lsls	r1, r3, #30
 80023e8:	bf58      	it	pl
 80023ea:	6962      	ldrpl	r2, [r4, #20]
 80023ec:	60a2      	str	r2, [r4, #8]
 80023ee:	e7f4      	b.n	80023da <__swsetup_r+0x8e>
 80023f0:	2000      	movs	r0, #0
 80023f2:	e7f7      	b.n	80023e4 <__swsetup_r+0x98>
 80023f4:	20000038 	.word	0x20000038

080023f8 <__swhatbuf_r>:
 80023f8:	b570      	push	{r4, r5, r6, lr}
 80023fa:	460c      	mov	r4, r1
 80023fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002400:	2900      	cmp	r1, #0
 8002402:	b096      	sub	sp, #88	@ 0x58
 8002404:	4615      	mov	r5, r2
 8002406:	461e      	mov	r6, r3
 8002408:	da0d      	bge.n	8002426 <__swhatbuf_r+0x2e>
 800240a:	89a3      	ldrh	r3, [r4, #12]
 800240c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8002410:	f04f 0100 	mov.w	r1, #0
 8002414:	bf14      	ite	ne
 8002416:	2340      	movne	r3, #64	@ 0x40
 8002418:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800241c:	2000      	movs	r0, #0
 800241e:	6031      	str	r1, [r6, #0]
 8002420:	602b      	str	r3, [r5, #0]
 8002422:	b016      	add	sp, #88	@ 0x58
 8002424:	bd70      	pop	{r4, r5, r6, pc}
 8002426:	466a      	mov	r2, sp
 8002428:	f000 f848 	bl	80024bc <_fstat_r>
 800242c:	2800      	cmp	r0, #0
 800242e:	dbec      	blt.n	800240a <__swhatbuf_r+0x12>
 8002430:	9901      	ldr	r1, [sp, #4]
 8002432:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8002436:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800243a:	4259      	negs	r1, r3
 800243c:	4159      	adcs	r1, r3
 800243e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002442:	e7eb      	b.n	800241c <__swhatbuf_r+0x24>

08002444 <__smakebuf_r>:
 8002444:	898b      	ldrh	r3, [r1, #12]
 8002446:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002448:	079d      	lsls	r5, r3, #30
 800244a:	4606      	mov	r6, r0
 800244c:	460c      	mov	r4, r1
 800244e:	d507      	bpl.n	8002460 <__smakebuf_r+0x1c>
 8002450:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8002454:	6023      	str	r3, [r4, #0]
 8002456:	6123      	str	r3, [r4, #16]
 8002458:	2301      	movs	r3, #1
 800245a:	6163      	str	r3, [r4, #20]
 800245c:	b003      	add	sp, #12
 800245e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002460:	ab01      	add	r3, sp, #4
 8002462:	466a      	mov	r2, sp
 8002464:	f7ff ffc8 	bl	80023f8 <__swhatbuf_r>
 8002468:	9f00      	ldr	r7, [sp, #0]
 800246a:	4605      	mov	r5, r0
 800246c:	4639      	mov	r1, r7
 800246e:	4630      	mov	r0, r6
 8002470:	f7ff fa08 	bl	8001884 <_malloc_r>
 8002474:	b948      	cbnz	r0, 800248a <__smakebuf_r+0x46>
 8002476:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800247a:	059a      	lsls	r2, r3, #22
 800247c:	d4ee      	bmi.n	800245c <__smakebuf_r+0x18>
 800247e:	f023 0303 	bic.w	r3, r3, #3
 8002482:	f043 0302 	orr.w	r3, r3, #2
 8002486:	81a3      	strh	r3, [r4, #12]
 8002488:	e7e2      	b.n	8002450 <__smakebuf_r+0xc>
 800248a:	89a3      	ldrh	r3, [r4, #12]
 800248c:	6020      	str	r0, [r4, #0]
 800248e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002492:	81a3      	strh	r3, [r4, #12]
 8002494:	9b01      	ldr	r3, [sp, #4]
 8002496:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800249a:	b15b      	cbz	r3, 80024b4 <__smakebuf_r+0x70>
 800249c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80024a0:	4630      	mov	r0, r6
 80024a2:	f000 f81d 	bl	80024e0 <_isatty_r>
 80024a6:	b128      	cbz	r0, 80024b4 <__smakebuf_r+0x70>
 80024a8:	89a3      	ldrh	r3, [r4, #12]
 80024aa:	f023 0303 	bic.w	r3, r3, #3
 80024ae:	f043 0301 	orr.w	r3, r3, #1
 80024b2:	81a3      	strh	r3, [r4, #12]
 80024b4:	89a3      	ldrh	r3, [r4, #12]
 80024b6:	431d      	orrs	r5, r3
 80024b8:	81a5      	strh	r5, [r4, #12]
 80024ba:	e7cf      	b.n	800245c <__smakebuf_r+0x18>

080024bc <_fstat_r>:
 80024bc:	b538      	push	{r3, r4, r5, lr}
 80024be:	4d07      	ldr	r5, [pc, #28]	@ (80024dc <_fstat_r+0x20>)
 80024c0:	2300      	movs	r3, #0
 80024c2:	4604      	mov	r4, r0
 80024c4:	4608      	mov	r0, r1
 80024c6:	4611      	mov	r1, r2
 80024c8:	602b      	str	r3, [r5, #0]
 80024ca:	f7fe f8e2 	bl	8000692 <_fstat>
 80024ce:	1c43      	adds	r3, r0, #1
 80024d0:	d102      	bne.n	80024d8 <_fstat_r+0x1c>
 80024d2:	682b      	ldr	r3, [r5, #0]
 80024d4:	b103      	cbz	r3, 80024d8 <_fstat_r+0x1c>
 80024d6:	6023      	str	r3, [r4, #0]
 80024d8:	bd38      	pop	{r3, r4, r5, pc}
 80024da:	bf00      	nop
 80024dc:	20000288 	.word	0x20000288

080024e0 <_isatty_r>:
 80024e0:	b538      	push	{r3, r4, r5, lr}
 80024e2:	4d06      	ldr	r5, [pc, #24]	@ (80024fc <_isatty_r+0x1c>)
 80024e4:	2300      	movs	r3, #0
 80024e6:	4604      	mov	r4, r0
 80024e8:	4608      	mov	r0, r1
 80024ea:	602b      	str	r3, [r5, #0]
 80024ec:	f7fe f8e1 	bl	80006b2 <_isatty>
 80024f0:	1c43      	adds	r3, r0, #1
 80024f2:	d102      	bne.n	80024fa <_isatty_r+0x1a>
 80024f4:	682b      	ldr	r3, [r5, #0]
 80024f6:	b103      	cbz	r3, 80024fa <_isatty_r+0x1a>
 80024f8:	6023      	str	r3, [r4, #0]
 80024fa:	bd38      	pop	{r3, r4, r5, pc}
 80024fc:	20000288 	.word	0x20000288

08002500 <_sbrk_r>:
 8002500:	b538      	push	{r3, r4, r5, lr}
 8002502:	4d06      	ldr	r5, [pc, #24]	@ (800251c <_sbrk_r+0x1c>)
 8002504:	2300      	movs	r3, #0
 8002506:	4604      	mov	r4, r0
 8002508:	4608      	mov	r0, r1
 800250a:	602b      	str	r3, [r5, #0]
 800250c:	f7fe f8ea 	bl	80006e4 <_sbrk>
 8002510:	1c43      	adds	r3, r0, #1
 8002512:	d102      	bne.n	800251a <_sbrk_r+0x1a>
 8002514:	682b      	ldr	r3, [r5, #0]
 8002516:	b103      	cbz	r3, 800251a <_sbrk_r+0x1a>
 8002518:	6023      	str	r3, [r4, #0]
 800251a:	bd38      	pop	{r3, r4, r5, pc}
 800251c:	20000288 	.word	0x20000288

08002520 <memcpy>:
 8002520:	440a      	add	r2, r1
 8002522:	4291      	cmp	r1, r2
 8002524:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8002528:	d100      	bne.n	800252c <memcpy+0xc>
 800252a:	4770      	bx	lr
 800252c:	b510      	push	{r4, lr}
 800252e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002532:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002536:	4291      	cmp	r1, r2
 8002538:	d1f9      	bne.n	800252e <memcpy+0xe>
 800253a:	bd10      	pop	{r4, pc}

0800253c <_malloc_usable_size_r>:
 800253c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002540:	1f18      	subs	r0, r3, #4
 8002542:	2b00      	cmp	r3, #0
 8002544:	bfbc      	itt	lt
 8002546:	580b      	ldrlt	r3, [r1, r0]
 8002548:	18c0      	addlt	r0, r0, r3
 800254a:	4770      	bx	lr

0800254c <_init>:
 800254c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800254e:	bf00      	nop
 8002550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002552:	bc08      	pop	{r3}
 8002554:	469e      	mov	lr, r3
 8002556:	4770      	bx	lr

08002558 <_fini>:
 8002558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800255a:	bf00      	nop
 800255c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800255e:	bc08      	pop	{r3}
 8002560:	469e      	mov	lr, r3
 8002562:	4770      	bx	lr
